var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddRolleDto.html",[0,0.058,1,2.068]],["body/classes/AddRolleDto.html",[0,0.069,1,3.176,2,1.465,3,0.325,4,0.287,5,0.287,6,4.88,7,3.036,8,0.406,9,1.643,10,3.306,11,4.88,12,2.963,13,0.69,14,0.025,15,1.464,16,1.643,17,2.895,18,4.422,19,2.185,20,1.464,21,2.685,22,6.086,23,1.79,24,0.814,25,3.451,26,1.878,27,3.451,28,0.365,29,1.941,30,1.282,31,0.325,32,0.019,33,0.019]],["title/modules/AppModule.html",[34,1.223,35,2.274]],["body/modules/AppModule.html",[0,0.057,3,0.269,4,0.237,5,0.237,14,0.026,28,0.594,31,0.269,32,0.017,33,0.017,34,1.657,35,4.491,36,1.493,37,2.04,38,2.856,39,2.856,40,3.134,41,3.706,42,3.706,43,3.398,44,2.903,45,2.369,46,1.734,47,1.734,48,3.378,49,2.802,50,0.708,51,2.256,52,1.061,53,3.378,54,2.513,55,2.051,56,3.378,57,2.256,58,2.856,59,4.614,60,3.378,61,2.856,62,3.432,63,2.256,64,3.378,65,3.082,66,3.378,67,4.614,68,3.378,69,3.378,70,3.378,71,3.378,72,3.378,73,3.378]],["title/guards/Auth.html",[74,2.533,75,1.896]],["body/guards/Auth.html",[0,0.056,3,0.265,4,0.233,5,0.233,8,0.331,13,0.602,14,0.026,20,1.098,24,0.71,28,0.526,31,0.265,32,0.017,33,0.017,50,0.956,75,2.54,76,2.472,77,2.81,78,1.532,79,4.743,80,1.581,81,2.81,82,4.056,83,3.323,84,1.638,85,0.956,86,1.638,87,3.858,88,4.172,89,3.323,90,2.81,91,1.116,92,3.858,93,2.17,94,4.406,95,1.174,96,2.472,97,3.323,98,2.472,99,2.472,100,2.018,101,2.472,102,2.472,103,2.018,104,1.618,105,2.22,106,2.81,107,2.22,108,2.81,109,2.81,110,4.406,111,3.858,112,2.472,113,3.48,114,2.22,115,2.54,116,2.17,117,3.858,118,2.81,119,2.81,120,1.044,121,2.81,122,2.22,123,2.22]],["title/controllers/AuthController.html",[124,1.505,125,2.274]],["body/controllers/AuthController.html",[0,0.06,3,0.283,4,0.25,5,0.25,8,0.354,13,0.63,14,0.026,16,1.5,20,1.447,24,0.743,28,0.538,30,1.116,31,0.283,32,0.018,33,0.018,50,0.744,75,1.978,78,1.603,84,1.714,85,1,86,1.714,91,1.603,93,2.271,103,2.157,120,1.5,124,1.57,125,3.189,126,1.57,127,3.004,128,2.373,129,4.037,130,4.037,131,3.004,132,3.502,133,3.602,134,5.766,135,3.553,136,3.553,137,3.189,138,3.553,139,2.961,140,4.775,141,4.775,142,3.553,143,2.373,144,3.004,145,1.978,146,2.373,147,2.373,148,1.978,149,3.004,150,3.004,151,2.384,152,2.643,153,3.553,154,3.553,155,3.553,156,3.553,157,3.553,158,3.553,159,3.553,160,3.553,161,3.553]],["title/modules/AuthModule.html",[34,1.223,40,1.749]],["body/modules/AuthModule.html",[0,0.061,3,0.29,4,0.255,5,0.255,14,0.026,28,0.578,31,0.29,32,0.018,33,0.018,34,1.741,36,1.607,37,2.144,40,3.363,44,2.307,45,2.49,46,1.867,47,1.867,49,2.208,50,0.762,57,2.429,61,4.101,62,2.705,63,2.429,75,2.7,100,2.208,125,3.644,126,2.144,151,2.949,152,2.705,162,3.075,163,3.075,164,3.075,165,3.787,166,3.636,167,2.945,168,3.239,169,2.705,170,3.636,171,3.636,172,3.636,173,3.636,174,3.075,175,3.636,176,3.636,177,3.636,178,3.636,179,3.636,180,3.636]],["title/injectables/AuthService.html",[95,0.876,151,1.505]],["body/injectables/AuthService.html",[0,0.036,3,0.172,4,0.151,5,0.151,8,0.215,10,2.086,13,0.717,14,0.026,15,1.385,20,1.44,23,0.634,24,0.846,26,1.195,28,0.502,31,0.172,32,0.012,33,0.012,50,0.452,78,1.117,80,1.932,82,3.63,84,1.951,85,1.139,86,1.951,91,1.751,93,2.48,95,0.856,96,2.475,100,1.31,104,1.544,113,2.713,115,1.852,116,1.583,120,1.638,129,2.813,130,3.435,131,2.813,132,3.3,137,3.05,139,1.107,145,1.201,149,1.824,150,1.824,151,1.471,181,1.026,182,1.824,183,2.842,184,4.934,185,3.124,186,3.327,187,4.745,188,3.327,189,2.157,190,2.48,191,2.157,192,2.157,193,2.157,194,3.296,195,3.327,196,2.157,197,2.262,198,3.327,199,2.157,200,2.157,201,3.327,202,2.157,203,3.327,204,3.327,205,3.327,206,2.157,207,2.02,208,2.475,209,1.824,210,1.201,211,2.157,212,1.604,213,1.107,214,1.44,215,2.157,216,3.327,217,2.903,218,3.327,219,2.157,220,2.157,221,2.157,222,2.157,223,2.157,224,2.157,225,2.157,226,2.157,227,1.824,228,2.157,229,2.157,230,2.157,231,1.824,232,2.157,233,2.157,234,2.157,235,2.157,236,1.583,237,1.824,238,2.157,239,1.824,240,2.157,241,2.157]],["title/classes/CreateReceiptDto.html",[0,0.058,242,2.068]],["body/classes/CreateReceiptDto.html",[0,0.054,2,1.141,3,0.253,4,0.223,5,0.223,8,0.316,9,1.39,10,3.521,14,0.025,16,1.931,17,3.17,19,2.393,24,0.956,26,1.589,28,0.284,29,1.512,30,0.998,31,0.253,32,0.016,33,0.016,85,1.212,236,2.104,242,2.686,243,2.687,244,4.892,245,4.303,246,2.833,247,4.303,248,5.089,249,4.303,250,3.741,251,3.741,252,3.741,253,3.178,254,3.741,255,3.178,256,3.741,257,4.093,258,4.653,259,3.178,260,3.741,261,2.272,262,3.178,263,3.741,264,3.741,265,3.178,266,4.424,267,3.178,268,3.741,269,3.741,270,3.741,271,3.178]],["title/classes/CreateRoleDto.html",[0,0.058,272,2.068]],["body/classes/CreateRoleDto.html",[0,0.071,2,1.5,3,0.333,4,0.293,5,0.293,7,3.108,8,0.416,9,1.668,10,3.326,12,2.996,13,0.7,14,0.025,15,1.477,16,1.668,17,2.92,19,2.414,23,1.805,24,0.826,25,3.533,26,2.204,27,3.533,28,0.374,29,1.987,30,1.313,31,0.333,32,0.02,33,0.02,85,1.112,272,3.223,273,4.934]],["title/modules/FileModule.html",[34,1.223,41,2.068]],["body/modules/FileModule.html",[0,0.077,3,0.362,4,0.319,5,0.319,14,0.025,28,0.501,31,0.362,32,0.021,33,0.021,34,2.01,36,2.01,37,2.474,41,4.017,45,2.874,46,2.335,47,2.335,50,0.953,167,3.399,168,3.037,274,3.845,275,3.845,276,3.442,277,4.547,278,4.547]],["title/injectables/FileService.html",[95,0.876,276,1.749]],["body/injectables/FileService.html",[0,0.056,3,0.265,4,0.233,5,0.394,8,0.331,13,0.602,14,0.026,15,1.254,24,0.71,28,0.502,31,0.364,32,0.017,33,0.017,50,0.696,78,1.532,84,1.638,85,0.956,86,1.638,91,1.532,93,2.17,95,1.174,104,1.543,107,2.22,115,1.85,116,1.581,120,1.434,122,2.22,123,2.22,145,1.85,181,1.581,183,2.303,207,2.018,246,1.85,276,2.343,279,2.472,280,4.563,281,4.563,282,5.211,283,3.323,284,4.563,285,3.323,286,6.22,287,3.323,288,4.563,289,4.563,290,4.563,291,3.323,292,2.472,293,1.277,294,3.323,295,4.563,296,3.323,297,4.563,298,3.323,299,3.323,300,3.323,301,2.81,302,3.323,303,3.323,304,3.323,305,2.22,306,4.563,307,4.563,308,3.323,309,3.323,310,2.81]],["title/injectables/JwtStrategy.html",[95,0.876,165,2.068]],["body/injectables/JwtStrategy.html",[0,0.063,3,0.296,4,0.261,5,0.261,8,0.369,13,0.649,14,0.026,24,0.765,28,0.546,31,0.296,32,0.018,33,0.018,50,0.778,62,4.667,63,2.48,78,1.651,80,2.339,84,1.766,85,1.03,86,1.766,91,1.247,93,2.339,95,1.266,98,2.762,104,1.022,120,1.545,151,2.829,152,2.762,165,2.986,181,1.766,183,2.437,237,4.662,311,3.14,312,4.917,313,3.713,314,3.713,315,3.713,316,3.713,317,3.14,318,3.713,319,3.713,320,3.713,321,3.14,322,3.713,323,3.713,324,3.713,325,3.713,326,3.713,327,3.713,328,2.48,329,3.713,330,3.713,331,3.713,332,3.713,333,3.713,334,4.158]],["title/classes/LoginUserdto.html",[0,0.058,132,2.068]],["body/classes/LoginUserdto.html",[0,0.072,2,1.526,3,0.339,4,0.298,5,0.298,8,0.423,9,1.686,10,3.34,13,0.708,14,0.025,15,1.486,16,1.686,17,2.938,19,2.218,24,0.835,28,0.38,29,2.021,30,1.335,31,0.339,32,0.02,33,0.02,132,3.258,194,4.255,236,3.03,335,3.593,336,3.992,337,3.584,338,4.25,339,4.537,340,4.25]],["title/injectables/MongooseConfigService.html",[65,2.274,95,0.876]],["body/injectables/MongooseConfigService.html",[0,0.075,3,0.356,4,0.314,5,0.314,8,0.444,14,0.026,24,0.695,28,0.538,31,0.356,32,0.021,33,0.021,50,0.936,52,1.403,65,3.696,78,1.858,91,1.499,95,1.424,102,3.321,120,1.403,181,2.124,341,3.775,342,6.287,343,4.465,344,6.015,345,5.534,346,4.465,347,1.499,348,4.465,349,4.465,350,4.465,351,4.465]],["title/classes/NewsUserdto.html",[0,0.058,139,1.749]],["body/classes/NewsUserdto.html",[0,0.06,2,1.283,3,0.285,4,0.251,5,0.251,8,0.356,9,1.506,13,0.795,14,0.025,15,1.586,16,1.894,17,3.137,19,2.368,24,0.938,26,2.075,28,0.32,29,1.7,30,1.123,31,0.285,32,0.018,33,0.018,85,1.263,139,2.461,148,1.989,194,4.026,236,2.867,336,3.566,337,3.201,339,4.053,352,3.022,353,5.097,354,5.097,355,4.053,356,3.573,357,3.573,358,3.573,359,3.573,360,4.053,361,3.573,362,3.573]],["title/classes/Receipt.html",[0,0.058,293,1.309]],["body/classes/Receipt.html",[0,0.043,2,0.913,3,0.203,4,0.179,5,0.179,8,0.253,9,1.184,13,0.821,14,0.026,15,1.476,16,1.895,17,3.101,19,2.341,20,1.383,21,2.55,24,0.939,26,1.612,28,0.474,29,1.21,30,0.799,31,0.358,32,0.014,33,0.014,52,0.799,85,1.111,104,0.7,213,1.306,244,4.199,245,3.797,246,2.5,247,3.797,249,3.797,250,3.187,251,3.187,252,2.15,254,3.187,256,3.187,257,3.694,258,3.797,260,3.187,261,1.935,263,3.187,264,2.15,268,3.187,269,3.187,270,2.15,293,1.726,328,4.098,347,1.266,363,1.698,364,3.092,365,2.15,366,3.769,367,2.543,368,2.543,369,2.543,370,3.187,371,2.543,372,2.543,373,2.543,374,2.543,375,2.543,376,2.543,377,2.543,378,2.543,379,2.727,380,2.098,381,2.543,382,2.543,383,1.544,384,2.543,385,2.543,386,2.543,387,2.289,388,2.289,389,1.544,390,2.543,391,1.698,392,1.892,393,2.543,394,3.542,395,1.892,396,2.543,397,1.698,398,2.543,399,1.544,400,2.15]],["title/controllers/ReceiptController.html",[124,1.505,401,2.274]],["body/controllers/ReceiptController.html",[0,0.032,3,0.15,4,0.132,5,0.132,8,0.187,13,0.828,14,0.026,15,0.895,16,1.547,21,2.176,24,0.766,26,1.336,28,0.516,30,0.591,31,0.15,32,0.011,33,0.011,50,0.394,78,1.004,80,0.895,84,1.768,85,1.032,86,1.768,91,1.653,99,1.399,104,1.166,105,3.777,113,1.256,114,1.996,120,1.622,121,1.59,124,0.831,126,0.831,128,1.256,133,2.83,143,2.83,146,1.996,147,1.256,148,1.047,151,1.644,183,1.644,185,1.664,197,1.047,214,1.256,217,1.047,242,3.134,246,3.214,293,2.393,334,3.145,347,0.632,370,4.163,401,1.996,402,1.59,403,2.527,404,1.996,405,2.83,406,3.145,407,2.527,408,3.72,409,1.881,410,2.982,411,1.881,412,2.527,413,1.59,414,4.369,415,1.881,416,1.881,417,1.881,418,1.881,419,4.624,420,1.881,421,1.881,422,1.399,423,3.134,424,1.881,425,1.881,426,1.881,427,3.72,428,1.881,429,1.881,430,2.989,431,1.59,432,1.881,433,1.881,434,1.881,435,1.881,436,1.881,437,3.145,438,3.72,439,1.881,440,1.59,441,2.071,442,1.59,443,1.881,444,1.881,445,1.59,446,1.59,447,1.399,448,1.59,449,1.59,450,1.59,451,1.815,452,1.59,453,1.399,454,0.895,455,1.59,456,1.399,457,1.881,458,1.881,459,1.59,460,2.527,461,3.662,462,4.163,463,1.881,464,2.989,465,1.881,466,2.527,467,1.881,468,1.881,469,1.881,470,1.881,471,1.881,472,1.881,473,2.527,474,1.881,475,1.881,476,1.881,477,1.881,478,1.881,479,1.881,480,1.881,481,1.881,482,1.881,483,1.881,484,1.881,485,1.881,486,1.881,487,1.881,488,1.881,489,1.881,490,1.881,491,1.881]],["title/modules/ReceiptModule.html",[34,1.223,42,2.068]],["body/modules/ReceiptModule.html",[0,0.061,3,0.286,4,0.252,5,0.252,14,0.026,20,0.862,28,0.599,31,0.286,32,0.018,33,0.018,34,1.724,36,1.584,37,2.123,40,1.84,42,3.915,44,1.705,45,2.466,46,1.84,47,1.84,49,2.176,50,0.751,51,2.394,52,1.126,54,2.666,57,2.394,82,2.394,100,2.176,126,1.584,167,2.176,169,2.666,174,3.03,213,1.84,276,3.257,293,1.377,364,1.995,399,2.176,401,3.208,441,3.359,442,3.03,453,2.666,492,3.03,493,3.03,494,3.584,495,3.584,496,4.061,497,2.394,498,3.03,499,1.995,500,3.03,501,4.029,502,3.584,503,3.03,504,3.584,505,3.584,506,3.03,507,2.666,508,3.584,509,3.584]],["title/injectables/ReceiptService.html",[95,0.876,441,1.896]],["body/injectables/ReceiptService.html",[0,0.032,3,0.151,4,0.133,5,0.133,8,0.188,13,0.708,14,0.026,15,1.187,20,1.115,21,1.54,24,0.835,28,0.534,31,0.151,32,0.011,33,0.011,50,0.396,52,0.594,78,1.007,80,0.899,84,1.926,85,1.158,86,1.926,91,1.736,93,2.629,95,0.772,104,1.618,115,1.052,116,1.427,120,1.625,145,1.052,181,0.899,183,2.832,185,2.746,190,2.021,197,1.67,207,1.147,209,1.598,213,0.97,217,3.366,236,0.899,242,3.14,246,2.746,276,2.38,292,2.232,293,1.434,310,1.598,347,0.634,364,2.365,391,1.262,403,2.537,404,2.004,405,2.004,406,3.155,407,2.537,410,2.746,422,2.232,423,3.14,431,2.537,437,1.598,440,1.598,441,1.67,451,2.266,452,1.598,453,1.405,496,2.537,498,1.598,510,1.598,511,3.731,512,3,513,1.889,514,4.299,515,3.731,516,3.593,517,3.731,518,3.731,519,1.889,520,3,521,3,522,1.889,523,1.889,524,1.889,525,1.889,526,1.889,527,1.889,528,1.889,529,1.889,530,1.889,531,1.889,532,1.889,533,1.405,534,1.889,535,1.262,536,1.889,537,1.889,538,1.889,539,2.232,540,1.889,541,1.889,542,1.889,543,3,544,1.889,545,1.889,546,1.889,547,1.889,548,1.889,549,1.889,550,3,551,1.889,552,1.889,553,1.889,554,1.889,555,1.889,556,1.598,557,1.889,558,1.889,559,3.731,560,3,561,1.889,562,1.889,563,1.889,564,4.249,565,1.889,566,1.889,567,1.889,568,1.889,569,1.889,570,1.889,571,1.889,572,1.889,573,1.889,574,1.889,575,1.889,576,1.889,577,1.889,578,1.889,579,1.889,580,1.889,581,1.889,582,1.889,583,1.889,584,1.889,585,1.889,586,1.598]],["title/classes/Role.html",[0,0.058,23,1.001]],["body/classes/Role.html",[0,0.058,2,1.24,3,0.275,4,0.243,5,0.243,8,0.344,9,1.472,12,2.729,13,0.752,14,0.026,15,1.371,16,1.67,17,2.922,18,3.961,19,2.374,20,1.576,23,1.848,24,0.827,26,2.047,28,0.51,29,1.643,30,1.085,31,0.424,32,0.017,33,0.017,52,1.085,85,0.981,104,0.95,213,1.773,261,2.405,305,4.103,337,3.129,347,1.573,379,2.097,380,1.923,383,2.844,387,2.097,388,2.844,389,2.097,394,3.129,397,2.307,587,2.307,588,4.684,589,3.453,590,4.684,591,3.453,592,3.453,593,3.453,594,2.569,595,2.097,596,2.92]],["title/controllers/RoleController.html",[124,1.505,597,2.274]],["body/controllers/RoleController.html",[0,0.055,3,0.26,4,0.229,5,0.229,8,0.325,12,2.313,13,0.832,14,0.026,15,1.241,16,1.621,23,1.82,24,0.803,28,0.522,30,1.025,31,0.26,32,0.017,33,0.017,50,0.683,78,1.513,84,1.617,85,0.944,86,1.617,91,1.733,103,1.981,120,1.621,124,1.442,126,1.442,128,2.179,133,2.179,143,2.179,146,3.009,147,2.179,148,1.816,214,2.179,272,3.379,380,2.508,404,3.009,410,2.508,412,2.758,414,4.14,447,2.426,454,1.551,460,2.758,461,3.838,473,3.809,597,3.009,598,2.758,599,4.706,600,4.505,601,3.262,602,3.262,603,4.505,604,5.16,605,4.505,606,3.262,607,3.262,608,3.262,609,3.262,610,3.262,611,4.505,612,3.262,613,1.675,614,2.758,615,2.758,616,2.179,617,2.426,618,3.262,619,3.262,620,3.262,621,3.262,622,3.262,623,3.262,624,3.262,625,3.262,626,3.262]],["title/modules/RoleModule.html",[34,1.223,43,1.896]],["body/modules/RoleModule.html",[0,0.065,3,0.309,4,0.272,5,0.272,14,0.026,20,0.932,23,1.14,28,0.578,31,0.309,32,0.019,33,0.019,34,1.816,36,1.713,37,2.236,43,3.6,44,2.406,45,2.597,46,1.99,47,1.99,49,2.354,50,0.812,51,2.589,52,1.218,57,2.589,126,2.236,167,3.072,168,3.378,213,1.99,499,2.158,501,3.763,507,2.883,595,2.354,597,3.761,613,3.482,614,3.278,617,2.883,627,3.278,628,3.278,629,3.278,630,3.876,631,3.876,632,3.278]],["title/injectables/RoleService.html",[95,0.876,613,1.749]],["body/injectables/RoleService.html",[0,0.057,3,0.268,4,0.237,5,0.237,8,0.335,12,1.73,13,0.692,14,0.026,15,1.262,23,1.793,24,0.878,28,0.545,30,1.058,31,0.268,32,0.017,33,0.017,50,0.706,52,1.058,78,1.547,80,1.602,84,1.884,85,1.1,86,1.884,91,1.762,95,1.185,104,1.444,120,1.649,148,1.875,181,1.602,183,2.85,185,1.875,197,2.922,217,2.922,272,3.426,347,1.131,410,1.875,514,4.196,533,2.506,594,2.506,599,4.77,613,2.365,615,2.848,616,2.25,617,2.506,633,2.848,634,4.605,635,4.605,636,3.369,637,3.369,638,4.605,639,4.605,640,3.369,641,3.369,642,4.605,643,3.369,644,3.369,645,3.369,646,3.369,647,3.369]],["title/classes/RoleUser.html",[0,0.058,648,2.533]],["body/classes/RoleUser.html",[0,0.065,2,1.387,3,0.308,4,0.271,5,0.271,8,0.384,9,1.586,11,4.754,13,0.742,14,0.026,16,1.586,20,1.526,23,1.819,24,0.786,28,0.553,31,0.448,32,0.019,33,0.019,52,1.214,104,1.063,213,1.984,261,2.592,347,1.695,379,3.62,380,2.81,383,3.62,387,2.346,388,3.065,389,2.346,397,3.372,648,4.182,649,2.581,650,5.622,651,3.864,652,3.864,653,3.864,654,3.864,655,3.864,656,3.267,657,2.874,658,3.267]],["title/guards/RolesGuard.html",[74,2.533,659,2.274]],["body/guards/RolesGuard.html",[0,0.054,3,0.255,4,0.224,5,0.224,8,0.318,13,0.586,14,0.026,20,1.068,24,0.691,26,1.147,28,0.518,31,0.255,32,0.016,33,0.016,50,0.669,76,2.376,78,1.491,79,4.664,80,1.519,81,2.701,82,4.007,84,1.594,85,0.93,86,1.594,87,3.754,88,4.103,90,2.701,91,1.073,92,3.754,93,2.112,94,4.315,95,1.143,96,2.376,100,1.94,101,2.376,102,2.376,103,1.94,104,1.651,105,2.133,106,2.701,107,2.133,108,2.701,109,2.701,110,4.315,111,3.754,112,2.376,113,2.965,114,2.133,115,2.472,116,2.112,117,2.701,118,2.701,119,2.701,120,1.395,122,2.133,123,2.133,145,1.778,185,1.778,207,2.696,305,2.133,454,1.519,456,2.376,659,2.965,660,2.701,661,6.154,662,3.194,663,3.194,664,2.701,665,2.376,666,4.44,667,3.194,668,3.194,669,3.194,670,3.194,671,3.194,672,3.194,673,2.701,674,3.194,675,3.194]],["title/classes/Tags.html",[0,0.058,364,1.896]],["body/classes/Tags.html",[0,0.063,2,1.341,3,0.298,4,0.262,5,0.262,8,0.372,9,1.551,13,0.776,14,0.026,15,1.415,16,1.737,19,1.986,24,0.861,28,0.562,31,0.441,32,0.018,33,0.018,52,1.174,104,1.028,261,1.918,293,2.351,328,3.297,347,1.857,364,3.079,379,2.998,380,2.08,383,2.268,387,3.358,388,2.998,389,2.268,392,2.779,394,3.297,395,2.779,497,2.495,539,2.779,676,2.495,677,4.676,678,4.676,679,3.735,680,3.735,681,3.735,682,3.159,683,2.779,684,3.735,685,2.495,686,3.159,687,3.159]],["title/classes/TagsDto.html",[0,0.058,451,2.068]],["body/classes/TagsDto.html",[0,0.074,2,1.58,3,0.351,4,0.309,5,0.309,8,0.438,9,1.723,10,3.484,13,0.788,14,0.025,15,1.505,19,2.146,24,0.93,28,0.394,31,0.351,32,0.02,33,0.02,347,1.478,423,3.629,451,3.331,677,5.053,678,5.053,688,3.722,689,4.401,690,4.401,691,4.401]],["title/classes/User.html",[0,0.058,20,0.819]],["body/classes/User.html",[0,0.043,2,0.904,3,0.201,4,0.177,5,0.177,8,0.25,9,1.175,13,0.819,14,0.026,15,1.512,16,1.849,17,3.096,19,2.337,20,1.074,21,2.292,23,1.826,24,0.936,26,2.257,28,0.512,29,1.197,30,0.791,31,0.356,32,0.014,33,0.014,52,0.791,85,1.035,104,0.693,194,3.3,236,2.35,261,1.292,293,2.311,305,3.931,328,2.498,336,2.782,337,3.3,347,1.499,353,4.465,354,4.465,355,3.163,360,3.163,365,3.163,379,2.271,380,2.083,383,2.271,387,1.528,388,2.271,389,1.528,392,1.872,394,3.3,395,1.872,397,1.681,499,1.401,535,1.681,682,2.128,683,1.872,685,1.681,686,2.128,692,1.681,693,4.464,694,3.741,695,2.517,696,2.517,697,2.517,698,2.517,699,2.517,700,2.517,701,2.517,702,2.517,703,3.741,704,2.517,705,2.517,706,2.517,707,2.517,708,2.517,709,2.517,710,2.517,711,1.872,712,2.128,713,2.128]],["title/controllers/UserController.html",[55,2.068,124,1.505]],["body/controllers/UserController.html",[0,0.039,1,2.891,3,0.186,4,0.164,5,0.164,8,0.232,13,0.737,14,0.026,16,1.607,20,1.145,23,0.687,24,0.796,26,2.067,28,0.565,30,0.734,31,0.186,32,0.013,33,0.013,50,0.489,55,2.148,75,1.301,78,1.188,84,1.709,85,0.997,86,1.709,91,1.717,99,1.738,103,1.419,104,0.973,105,3.733,120,1.607,124,1.033,126,1.033,128,1.56,133,3.594,137,2.362,139,2.444,143,2.851,144,1.975,146,1.56,147,1.56,148,1.301,183,2.104,190,1.682,197,1.301,210,1.301,212,1.738,214,1.56,257,2.631,347,0.784,405,3.416,410,2.996,413,2.991,414,4.469,423,1.419,447,1.738,448,1.975,449,2.991,454,1.682,455,1.975,456,1.738,461,3.804,462,3.609,466,2.991,616,1.56,659,1.56,711,1.738,712,1.975,714,1.975,715,2.991,716,4.025,717,2.991,718,3.537,719,1.975,720,2.336,721,3.537,722,2.336,723,2.336,724,2.336,725,2.336,726,3.537,727,2.336,728,2.336,729,2.336,730,2.336,731,2.336,732,3.537,733,2.336,734,2.336,735,2.336,736,3.537,737,2.336,738,2.336,739,2.336,740,1.975,741,1.975,742,1.975,743,1.975,744,2.336,745,1.738,746,1.975,747,2.336,748,2.336,749,2.336,750,2.336,751,2.336,752,2.336,753,2.336,754,3.537,755,3.537,756,3.537,757,2.336,758,2.336,759,2.336,760,2.336,761,2.336,762,2.336,763,2.336,764,2.336,765,2.336,766,2.336,767,2.336,768,2.336,769,2.336,770,2.336,771,2.336,772,2.336]],["title/interfaces/UserDetails.html",[210,1.896,773,2.274]],["body/interfaces/UserDetails.html",[3,0.362,4,0.319,5,0.319,8,0.452,9,1.759,13,0.8,14,0.025,15,1.652,21,3.249,31,0.362,32,0.021,33,0.021,85,1.326,210,3.116,236,3.01,454,2.163,773,3.037,774,4.547,775,3.845,776,3.845]],["title/modules/UserModule.html",[34,1.223,44,1.62]],["body/modules/UserModule.html",[0,0.06,3,0.283,4,0.25,5,0.25,14,0.026,20,1.149,23,1.045,28,0.583,31,0.283,32,0.018,33,0.018,34,1.714,36,1.57,37,2.111,40,2.452,43,3.449,44,3.1,45,2.452,46,1.824,47,1.824,49,2.899,50,0.744,51,2.373,52,1.116,54,2.643,55,3.275,58,3.004,85,1,126,2.111,167,2.899,168,3.189,169,2.643,190,3.184,293,1.365,399,2.157,499,1.978,500,3.004,501,2.643,503,3.004,507,2.643,595,2.157,632,3.004,685,2.373,711,2.643,741,3.004,745,2.643,777,3.004,778,3.004,779,3.553,780,3.004,781,3.553,782,3.553,783,3.553]],["title/injectables/UserService.html",[95,0.876,190,1.62]],["body/injectables/UserService.html",[0,0.029,1,2.124,3,0.137,4,0.121,5,0.121,8,0.171,10,1.426,13,0.725,14,0.026,15,1.47,20,1.378,21,2.554,23,1.029,24,0.875,26,1.256,28,0.535,31,0.137,32,0.01,33,0.01,50,0.582,52,0.539,78,0.933,80,0.816,84,1.974,85,1.178,86,1.974,91,1.846,93,2.614,95,0.715,104,1.547,115,1.546,116,1.321,120,1.766,137,1.855,139,2.554,145,0.955,151,1.546,181,0.816,183,2.872,185,2.458,187,1.451,190,1.321,197,2.238,207,1.042,208,2.066,210,1.546,212,1.277,217,3.332,231,1.451,236,1.321,239,1.451,317,1.451,347,0.933,391,1.146,404,1.855,405,2.337,410,2.458,422,2.066,423,1.042,450,1.451,454,0.816,506,1.451,514,3.7,516,2.348,533,1.277,535,2.337,556,2.348,586,1.451,613,2.748,616,1.146,685,1.146,715,2.348,716,3.4,717,2.348,719,1.451,742,1.451,743,1.451,745,1.277,746,1.451,784,1.451,785,2.777,786,2.777,787,2.777,788,2.777,789,2.777,790,1.716,791,3.498,792,1.716,793,2.777,794,1.716,795,1.716,796,2.777,797,1.716,798,1.716,799,2.777,800,1.716,801,2.777,802,1.716,803,2.777,804,1.716,805,1.716,806,2.777,807,1.716,808,1.716,809,1.716,810,1.716,811,1.716,812,1.716,813,1.716,814,1.716,815,1.716,816,1.716,817,1.716,818,2.777,819,2.777,820,2.777,821,1.716,822,2.777,823,1.716,824,1.716,825,1.716,826,1.716,827,1.716,828,1.716,829,1.716,830,1.716,831,1.716,832,1.716,833,1.716,834,2.777,835,1.716,836,1.716,837,1.716,838,1.716,839,1.716,840,2.777,841,2.777,842,1.716,843,1.716,844,1.716,845,1.716,846,1.716,847,1.716,848,1.716,849,1.716,850,1.716,851,1.716,852,1.716,853,1.716]],["title/coverage.html",[854,3.451]],["body/coverage.html",[0,0.107,1,1.664,5,0.192,6,2.317,7,2.962,13,0.362,14,0.026,20,0.659,23,0.806,32,0.015,33,0.015,55,1.664,65,1.83,74,2.962,75,1.526,77,2.317,95,1.515,112,5.162,116,1.304,124,2.275,125,1.83,127,2.317,132,1.664,139,1.407,151,1.211,165,1.664,182,2.317,190,1.304,210,1.526,227,2.317,242,1.664,243,2.317,272,1.664,273,2.317,276,1.407,279,2.039,293,1.053,311,2.317,335,2.317,341,2.317,352,2.317,363,2.659,364,1.526,399,1.664,401,1.83,402,2.317,441,1.526,451,1.664,454,1.304,497,1.83,499,1.526,510,2.317,587,2.659,595,1.664,597,1.83,598,2.317,613,1.407,633,2.317,648,2.039,649,2.659,657,2.039,659,1.83,660,2.317,665,2.039,676,2.659,688,2.317,692,2.659,714,2.317,773,1.83,775,2.317,776,2.317,784,2.317,854,2.039,855,2.741,856,2.741,857,2.741,858,6.147,859,2.741,860,2.317,861,6.244,862,2.317,863,6.244,864,3.367,865,3.367,866,2.741,867,2.317,868,2.039,869,2.741,870,5.467,871,2.741,872,2.741,873,3.982,874,2.741,875,3.982,876,2.741,877,2.317,878,2.317,879,2.741,880,2.741]],["title/dependencies.html",[37,1.809,881,2.408]],["body/dependencies.html",[0,0.068,14,0.026,30,1.27,32,0.019,33,0.019,37,1.786,50,0.847,52,1.27,63,2.699,98,3.006,101,3.006,208,3.006,301,3.417,321,3.417,347,1.357,445,3.417,446,3.417,664,3.417,683,3.006,882,6.064,883,4.041,884,4.041,885,4.041,886,4.041,887,4.041,888,4.041,889,4.041,890,4.041,891,4.041,892,4.041,893,4.041,894,4.041,895,4.041,896,4.041,897,4.041,898,4.041,899,4.041,900,4.041,901,4.041,902,4.041,903,4.041,904,4.041,905,4.041,906,4.041,907,4.041,908,4.041,909,4.041,910,5.197,911,4.041,912,4.041,913,4.041,914,4.041,915,4.041,916,4.041,917,4.041]],["title/miscellaneous/enumerations.html",[918,1.585,919,3.461]],["body/miscellaneous/enumerations.html",[8,0.517,12,2.669,14,0.024,32,0.022,33,0.022,246,2.894,279,3.866,292,4.511,293,1.997,918,2.894,919,4.395,920,5.198]],["title/index.html",[8,0.283,921,2.848,922,2.408]],["body/index.html",[4,0.272,14,0.026,19,1.392,32,0.019,33,0.019,854,2.883,868,2.883,923,3.876,924,3.876,925,5.058,926,3.876,927,3.876,928,3.876,929,3.876,930,3.876,931,3.876,932,5.631,933,3.876,934,3.876,935,3.876,936,3.876,937,6.467,938,3.876,939,3.278,940,3.876,941,6.349,942,3.876,943,5.058,944,3.876,945,3.876,946,3.876,947,3.876,948,5.058,949,5.058,950,3.876,951,3.876,952,3.876,953,5.058,954,5.058,955,3.876,956,3.876,957,3.876,958,3.876,959,3.876,960,3.278,961,3.876,962,3.876,963,3.876,964,3.876,965,3.876,966,3.876,967,3.876,968,3.876,969,3.876,970,3.876,971,3.278,972,3.876,973,3.876,974,3.876,975,3.876,976,3.876,977,3.876,978,3.278]],["title/modules.html",[36,2.051]],["body/modules.html",[14,0.021,32,0.021,33,0.021,35,3.202,36,2.119,40,2.462,41,2.911,42,2.911,43,2.669,44,2.28,960,5.665,979,6.699,980,6.699,981,6.699]],["title/overview.html",[982,3.923]],["body/overview.html",[2,1.25,14,0.025,32,0.017,33,0.017,35,4.456,36,1.539,37,2.082,38,2.945,39,2.945,40,3.289,41,3.629,42,3.824,43,3.506,44,3.047,45,2.419,46,1.788,47,1.788,76,2.591,114,2.326,126,1.539,151,2.784,162,2.945,163,2.945,164,2.945,165,3.242,181,1.656,190,2.995,274,2.945,275,2.945,276,2.937,441,2.972,492,2.945,493,2.945,613,3.234,627,2.945,628,2.945,629,2.945,773,2.326,777,2.945,778,2.945,780,2.945,982,2.945,983,3.483,984,3.483,985,3.483,986,3.483,987,3.483]],["title/properties.html",[9,1.286,881,2.408]],["body/properties.html",[9,1.633,14,0.025,19,1.866,32,0.022,33,0.022,971,4.395,978,4.395,988,5.198,989,5.198,990,5.198]],["title/miscellaneous/typealiases.html",[918,1.585,991,4.093]],["body/miscellaneous/typealiases.html",[8,0.49,13,0.65,14,0.022,32,0.022,33,0.022,363,3.291,391,3.925,535,3.925,539,4.372,587,3.291,594,4.372,649,3.291,656,4.969,676,3.291,692,3.291,918,2.744,992,4.928,993,4.167,994,4.167,995,4.167,996,4.167,997,4.167]],["title/miscellaneous/variables.html",[918,1.585,998,3.461]],["body/miscellaneous/variables.html",[8,0.3,12,3.274,13,0.562,14,0.026,15,1.19,20,1.026,23,0.887,32,0.016,33,0.016,88,2.243,104,1.621,107,2.014,116,1.434,120,0.947,122,2.014,123,2.014,183,1.333,217,2.374,261,2.189,363,2.014,399,2.589,400,2.549,454,2.558,459,5.392,497,2.848,499,2.374,587,2.014,595,2.589,596,2.549,649,2.014,657,3.172,658,2.549,665,3.172,673,2.549,676,2.014,687,2.549,692,2.014,713,2.549,740,2.549,860,2.549,862,3.605,864,2.549,865,4.183,867,2.549,868,3.172,877,2.549,878,3.605,918,1.679,922,2.549,939,3.605,993,2.549,994,2.549,995,2.549,996,2.549,997,2.549,998,2.549,999,3.015,1000,3.015,1001,4.264,1002,3.015,1003,3.015,1004,4.264,1005,3.015,1006,3.015,1007,3.015,1008,3.015,1009,3.015,1010,3.015,1011,3.015,1012,3.015,1013,3.015,1014,4.946,1015,3.015,1016,3.015,1017,3.015,1018,3.015,1019,3.015,1020,3.015,1021,3.015,1022,3.015,1023,4.264,1024,3.015,1025,3.015,1026,3.015,1027,3.015,1028,3.015,1029,3.015,1030,3.015,1031,3.015,1032,3.015,1033,3.015,1034,3.015,1035,3.015,1036,3.015]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"classes/AddRolleDto.html":{},"modules/AppModule.html":{},"guards/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserdto.html":{},"injectables/MongooseConfigService.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"guards/RolesGuard.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserDetails.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":112,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["0.0.1",{"_index":989,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":894,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["0.3.10",{"_index":917,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":863,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":873,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":876,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":866,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":858,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":870,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":874,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":871,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":869,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":872,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":114,"title":{},"body":{"guards/Auth.html":{},"controllers/ReceiptController.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["1.1.0",{"_index":913,"title":{},"body":{"dependencies.html":{}}}],["1.2.7",{"_index":896,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["1/8",{"_index":859,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":986,"title":{},"body":{"overview.html":{}}}],["12",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["12345",{"_index":339,"title":{},"body":{"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{}}}],["1234567",{"_index":703,"title":{},"body":{"classes/User.html":{}}}],["1a.lv",{"_index":263,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["2",{"_index":987,"title":{},"body":{"overview.html":{}}}],["2.1.2",{"_index":889,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":883,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":414,"title":{},"body":{"controllers/ReceiptController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["201",{"_index":605,"title":{},"body":{"controllers/RoleController.html":{}}}],["21.12.2022",{"_index":256,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["21.12.2024",{"_index":268,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["3.0.0",{"_index":886,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":908,"title":{},"body":{"dependencies.html":{}}}],["3500",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37129994512",{"_index":360,"title":{},"body":{"classes/NewsUserdto.html":{},"classes/User.html":{}}}],["4",{"_index":984,"title":{},"body":{"overview.html":{}}}],["4.15.5",{"_index":916,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":890,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":254,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["6",{"_index":983,"title":{},"body":{"overview.html":{}}}],["6.0.3",{"_index":892,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":887,"title":{},"body":{"dependencies.html":{}}}],["6.6.5",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":985,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":882,"title":{},"body":{"dependencies.html":{}}}],["9.2.0",{"_index":884,"title":{},"body":{"dependencies.html":{}}}],["_getuserdetails",{"_index":785,"title":{},"body":{"injectables/UserService.html":{}}}],["_getuserdetails(user",{"_index":793,"title":{},"body":{"injectables/UserService.html":{}}}],["access",{"_index":674,"title":{},"body":{"guards/RolesGuard.html":{}}}],["add",{"_index":412,"title":{},"body":{"controllers/ReceiptController.html":{},"controllers/RoleController.html":{}}}],["addreceiptusers",{"_index":403,"title":{},"body":{"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{}}}],["addreceiptusers(@req",{"_index":471,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["addreceiptusers(dto",{"_index":521,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["addreceiptusers(req",{"_index":409,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["addroles",{"_index":715,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["addroles(@body",{"_index":759,"title":{},"body":{"controllers/UserController.html":{}}}],["addroles(dto",{"_index":719,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["addroles(dto:addrolledto",{"_index":847,"title":{},"body":{"injectables/UserService.html":{}}}],["addrolledto",{"_index":1,"title":{"classes/AddRolleDto.html":{}},"body":{"classes/AddRolleDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["aliases",{"_index":992,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":961,"title":{},"body":{"index.html":{}}}],["api",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apioperation",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ReceiptController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["apioperation({summary",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ReceiptController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["apioperation({summary:'add",{"_index":460,"title":{},"body":{"controllers/ReceiptController.html":{},"controllers/RoleController.html":{}}}],["apioperation({summary:'delete",{"_index":484,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["apioperation({summary:'get",{"_index":473,"title":{},"body":{"controllers/ReceiptController.html":{},"controllers/RoleController.html":{}}}],["apioperation({summary:'search",{"_index":477,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["apioperation({summary:'user",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiproperty",{"_index":29,"title":{},"body":{"classes/AddRolleDto.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["apiproperty({example",{"_index":17,"title":{},"body":{"classes/AddRolleDto.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["apiresponse",{"_index":447,"title":{},"body":{"controllers/ReceiptController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["apiresponse({status",{"_index":461,"title":{},"body":{"controllers/ReceiptController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["apitags",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"classes/NewsUserdto.html":{},"controllers/ReceiptController.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{}}}],["apitags('autorization",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('fhg",{"_index":362,"title":{},"body":{"classes/NewsUserdto.html":{}}}],["apitags('receipt",{"_index":457,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["apitags('role",{"_index":618,"title":{},"body":{"controllers/RoleController.html":{}}}],["apitags('users",{"_index":747,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":939,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["app.enablecors",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.listen(port",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.setglobalprefix('api",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.useglobalpipes(new",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applications",{"_index":931,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":35,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["assign",{"_index":22,"title":{},"body":{"classes/AddRolleDto.html":{}}}],["async",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["atob",{"_index":888,"title":{},"body":{"dependencies.html":{}}}],["auth",{"_index":75,"title":{"guards/Auth.html":{}},"body":{"guards/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["auth.controller",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.decorator",{"_index":456,"title":{},"body":{"controllers/ReceiptController.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{}}}],["auth.decorator.ts",{"_index":865,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth.service",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["auth/auth.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/ReceiptModule.html":{},"modules/UserModule.html":{}}}],["auth/auth.service",{"_index":450,"title":{},"body":{"controllers/ReceiptController.html":{},"injectables/UserService.html":{}}}],["auth/guards/jwt.guard",{"_index":449,"title":{},"body":{"controllers/ReceiptController.html":{},"controllers/UserController.html":{}}}],["auth/guards/roles",{"_index":455,"title":{},"body":{"controllers/ReceiptController.html":{},"controllers/UserController.html":{}}}],["auth/guards/roles.guard",{"_index":744,"title":{},"body":{"controllers/UserController.html":{}}}],["authcontroller",{"_index":125,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":97,"title":{},"body":{"guards/Auth.html":{}}}],["authheader",{"_index":108,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{}}}],["authheader.split",{"_index":111,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ReceiptModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":971,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":151,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ReceiptController.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["authservice,jwtmodule",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{}}}],["autorization",{"_index":670,"title":{},"body":{"guards/RolesGuard.html":{}}}],["avatar",{"_index":712,"title":{},"body":{"classes/User.html":{},"controllers/UserController.html":{}}}],["avatar'})@prop({required",{"_index":695,"title":{},"body":{"classes/User.html":{}}}],["avatarpath",{"_index":693,"title":{},"body":{"classes/User.html":{}}}],["await",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":962,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":810,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('email",{"_index":837,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["bcrypt.compare(password",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(password",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["bearer",{"_index":110,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{}}}],["belongs",{"_index":590,"title":{},"body":{"classes/Role.html":{}}}],["body",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ReceiptController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":92,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{}}}],["browse",{"_index":981,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":979,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":926,"title":{},"body":{"index.html":{}}}],["busy",{"_index":838,"title":{},"body":{"injectables/UserService.html":{}}}],["canactivate",{"_index":79,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":87,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{}}}],["card",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch",{"_index":122,"title":{},"body":{"guards/Auth.html":{},"injectables/FileService.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["city",{"_index":353,"title":{},"body":{"classes/NewsUserdto.html":{},"classes/User.html":{}}}],["class",{"_index":0,"title":{"classes/AddRolleDto.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"classes/Role.html":{},"classes/RoleUser.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{}},"body":{"classes/AddRolleDto.html":{},"modules/AppModule.html":{},"guards/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserdto.html":{},"injectables/MongooseConfigService.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"guards/RolesGuard.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddRolleDto.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"classes/Role.html":{},"classes/RoleUser.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"overview.html":{}}}],["client/server/data/users",{"_index":813,"title":{},"body":{"injectables/UserService.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_filemodule",{"_index":274,"title":{},"body":{"modules/FileModule.html":{},"overview.html":{}}}],["cluster_filemodule_providers",{"_index":275,"title":{},"body":{"modules/FileModule.html":{},"overview.html":{}}}],["cluster_receiptmodule",{"_index":492,"title":{},"body":{"modules/ReceiptModule.html":{},"overview.html":{}}}],["cluster_receiptmodule_providers",{"_index":493,"title":{},"body":{"modules/ReceiptModule.html":{},"overview.html":{}}}],["cluster_rolemodule",{"_index":627,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_exports",{"_index":629,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_providers",{"_index":628,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":777,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":780,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":779,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":778,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["config",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/configuration",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["config/mongoose.configservice",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('jwt_secret",{"_index":330,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["configuration",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log",{"_index":851,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('server",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(dto.receptid",{"_index":490,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["console.log(e",{"_index":673,"title":{},"body":{"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["console.log(receip,\"in",{"_index":570,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["console.log(tags",{"_index":576,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["console.log(uplfile",{"_index":549,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["console.log(user",{"_index":849,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(user.email",{"_index":578,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["console.log(users",{"_index":753,"title":{},"body":{"controllers/UserController.html":{}}}],["const",{"_index":104,"title":{},"body":{"guards/Auth.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"guards/RolesGuard.html":{},"classes/Tags.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":80,"title":{},"body":{"guards/Auth.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{}}}],["constructor(@injectmodel('role",{"_index":644,"title":{},"body":{"injectables/RoleService.html":{}}}],["constructor(@injectmodel('user",{"_index":814,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(@injectmodel(receipt.name",{"_index":541,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["constructor(configservice",{"_index":313,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(jwtservice",{"_index":81,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{}}}],["constructor(private",{"_index":103,"title":{},"body":{"guards/Auth.html":{},"controllers/AuthController.html":{},"controllers/RoleController.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{}}}],["constructor(receiptmodel",{"_index":513,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["constructor(rolerepository",{"_index":636,"title":{},"body":{"injectables/RoleService.html":{}}}],["constructor(usermodel",{"_index":790,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["context",{"_index":90,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{}}}],["context.getclass",{"_index":669,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":668,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":106,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{}}}],["controller",{"_index":124,"title":{"controllers/AuthController.html":{},"controllers/ReceiptController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/ReceiptController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('/auth",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('/receipt",{"_index":458,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["controller('/roles",{"_index":619,"title":{},"body":{"controllers/RoleController.html":{}}}],["controller('/user",{"_index":748,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["controllers:[receiptcontroller",{"_index":508,"title":{},"body":{"modules/ReceiptModule.html":{}}}],["count",{"_index":430,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["coverage",{"_index":854,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":404,"title":{},"body":{"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"controllers/RoleController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":621,"title":{},"body":{"controllers/RoleController.html":{}}}],["create(@req",{"_index":465,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["create(dto",{"_index":601,"title":{},"body":{"controllers/RoleController.html":{}}}],["create(email",{"_index":523,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["create(email:string",{"_index":544,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["create(req",{"_index":417,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["create(userdto",{"_index":796,"title":{},"body":{"injectables/UserService.html":{}}}],["createfile",{"_index":280,"title":{},"body":{"injectables/FileService.html":{}}}],["createfile(file",{"_index":282,"title":{},"body":{"injectables/FileService.html":{}}}],["createfile(type:filetype",{"_index":294,"title":{},"body":{"injectables/FileService.html":{}}}],["createmongooseoptions",{"_index":342,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["createparamdecorator",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createreceiptdto",{"_index":242,"title":{"classes/CreateReceiptDto.html":{}},"body":{"classes/CreateReceiptDto.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"coverage.html":{}}}],["createrole",{"_index":634,"title":{},"body":{"injectables/RoleService.html":{}}}],["createrole(dto",{"_index":639,"title":{},"body":{"injectables/RoleService.html":{}}}],["createroledto",{"_index":272,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["createtag",{"_index":511,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["createtag(dto",{"_index":525,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["createtags(@req",{"_index":489,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["ctx",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentuser",{"_index":878,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":257,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{},"controllers/UserController.html":{}}}],["date'})@apiresponse({status",{"_index":732,"title":{},"body":{"controllers/UserController.html":{}}}],["dbname",{"_index":350,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["decorators",{"_index":16,"title":{},"body":{"classes/AddRolleDto.html":{},"controllers/AuthController.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"classes/RoleUser.html":{},"classes/Tags.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["default",{"_index":459,"title":{},"body":{"controllers/ReceiptController.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":24,"title":{},"body":{"classes/AddRolleDto.html":{},"guards/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserdto.html":{},"injectables/MongooseConfigService.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"guards/RolesGuard.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":405,"title":{},"body":{"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete('/delete",{"_index":761,"title":{},"body":{"controllers/UserController.html":{}}}],["delete('/delete')@apioperation({summary",{"_index":725,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(':id",{"_index":485,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["delete(@param('id",{"_index":486,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["delete(@req",{"_index":763,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(id",{"_index":422,"title":{},"body":{"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"injectables/UserService.html":{}}}],["delete(req",{"_index":724,"title":{},"body":{"controllers/UserController.html":{}}}],["dependencies",{"_index":37,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/ReceiptModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":19,"title":{},"body":{"classes/AddRolleDto.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"classes/Role.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"index.html":{},"properties.html":{}}}],["details.interface",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["details.interface.ts",{"_index":776,"title":{},"body":{"interfaces/UserDetails.html":{},"coverage.html":{}}}],["development",{"_index":940,"title":{},"body":{"index.html":{}}}],["digitizing",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist",{"_index":915,"title":{},"body":{"dependencies.html":{}}}],["distribute",{"_index":721,"title":{},"body":{"controllers/UserController.html":{}}}],["document",{"_index":261,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{},"classes/Role.html":{},"classes/RoleUser.html":{},"classes/Tags.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["document'})@prop({required",{"_index":375,"title":{},"body":{"classes/Receipt.html":{}}}],["documentation",{"_index":855,"title":{},"body":{"coverage.html":{}}}],["documentbuilder",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doespasswordmatch",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["doespasswordmatch(password",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto",{"_index":410,"title":{},"body":{"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto.email",{"_index":843,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.name",{"_index":845,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.password",{"_index":840,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.usersemail",{"_index":580,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["dto/add",{"_index":746,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/create",{"_index":615,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["dto/create_receipt.dto",{"_index":440,"title":{},"body":{"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{}}}],["dto/createuser.dto",{"_index":742,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/newsuser.dto",{"_index":743,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/tags.dto",{"_index":452,"title":{},"body":{"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{}}}],["dto:tagsdto",{"_index":568,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["e",{"_index":123,"title":{},"body":{"guards/Auth.html":{},"injectables/FileService.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":950,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":927,"title":{},"body":{"index.html":{}}}],["email",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{},"injectables/ReceiptService.html":{},"classes/User.html":{},"interfaces/UserDetails.html":{},"injectables/UserService.html":{}}}],["email'})@prop({required",{"_index":698,"title":{},"body":{"classes/User.html":{}}}],["enum",{"_index":291,"title":{},"body":{"injectables/FileService.html":{}}}],["enumerations",{"_index":919,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["executioncontext",{"_index":88,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["existinguser",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["exp",{"_index":333,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["expiresin:'3600s",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":31,"title":{},"body":{"classes/AddRolleDto.html":{},"modules/AppModule.html":{},"guards/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserdto.html":{},"injectables/MongooseConfigService.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"guards/RolesGuard.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserDetails.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{}}}],["express",{"_index":446,"title":{},"body":{"controllers/ReceiptController.html":{},"dependencies.html":{}}}],["extends",{"_index":323,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt",{"_index":319,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":328,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/Receipt.html":{},"classes/Tags.html":{},"classes/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddRolleDto.html":{},"modules/AppModule.html":{},"guards/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserdto.html":{},"injectables/MongooseConfigService.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"guards/RolesGuard.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserDetails.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["file.buffer",{"_index":307,"title":{},"body":{"injectables/FileService.html":{}}}],["file.originalname.splits('.').pop",{"_index":296,"title":{},"body":{"injectables/FileService.html":{}}}],["file.service",{"_index":278,"title":{},"body":{"modules/FileModule.html":{}}}],["file/file.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["file/file.service",{"_index":496,"title":{},"body":{"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{}}}],["fileextension",{"_index":295,"title":{},"body":{"injectables/FileService.html":{}}}],["filefieldsinterceptor",{"_index":443,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["fileinterceptor",{"_index":444,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["filemodule",{"_index":41,"title":{"modules/FileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FileModule.html":{},"modules.html":{},"overview.html":{}}}],["filename",{"_index":286,"title":{},"body":{"injectables/FileService.html":{}}}],["filepath",{"_index":299,"title":{},"body":{"injectables/FileService.html":{}}}],["files",{"_index":466,"title":{},"body":{"controllers/ReceiptController.html":{},"controllers/UserController.html":{}}}],["fileservice",{"_index":276,"title":{"injectables/FileService.html":{}},"body":{"modules/FileModule.html":{},"injectables/FileService.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"coverage.html":{},"overview.html":{}}}],["fileservise",{"_index":517,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["filetype",{"_index":292,"title":{},"body":{"injectables/FileService.html":{},"injectables/ReceiptService.html":{},"miscellaneous/enumerations.html":{}}}],["findbyemail",{"_index":786,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyemail(email",{"_index":799,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid",{"_index":787,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid(id",{"_index":801,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyidd",{"_index":788,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyidd(id",{"_index":803,"title":{},"body":{"injectables/UserService.html":{}}}],["forwardref",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{},"modules/ReceiptModule.html":{},"modules/UserModule.html":{}}}],["forwardref(()=>authmodule",{"_index":500,"title":{},"body":{"modules/ReceiptModule.html":{},"modules/UserModule.html":{}}}],["forwardref(()=>usermodule",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{},"modules/ReceiptModule.html":{}}}],["found",{"_index":586,"title":{},"body":{"injectables/ReceiptService.html":{},"injectables/UserService.html":{}}}],["framework",{"_index":925,"title":{},"body":{"index.html":{}}}],["fs",{"_index":289,"title":{},"body":{"injectables/FileService.html":{}}}],["fs.mkdirsync(filepath",{"_index":303,"title":{},"body":{"injectables/FileService.html":{}}}],["fs.writefilesync(path.join(filepath",{"_index":306,"title":{},"body":{"injectables/FileService.html":{}}}],["generatetoken",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetoken(user",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["get('/:value",{"_index":623,"title":{},"body":{"controllers/RoleController.html":{}}}],["get('/:value')@apioperation({summary",{"_index":610,"title":{},"body":{"controllers/RoleController.html":{}}}],["get('/search",{"_index":478,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["get(':id",{"_index":481,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["get('profil",{"_index":750,"title":{},"body":{"controllers/UserController.html":{}}}],["get('profil')@apioperation({summary",{"_index":731,"title":{},"body":{"controllers/UserController.html":{}}}],["getall",{"_index":406,"title":{},"body":{"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{}}}],["getall(count",{"_index":426,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["getall(user",{"_index":528,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["getallrole",{"_index":599,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["getalluser",{"_index":716,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getbyvalue",{"_index":600,"title":{},"body":{"controllers/RoleController.html":{}}}],["getbyvalue(@param('value",{"_index":624,"title":{},"body":{"controllers/RoleController.html":{}}}],["getbyvalue(value",{"_index":609,"title":{},"body":{"controllers/RoleController.html":{}}}],["getone",{"_index":407,"title":{},"body":{"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{}}}],["getone(@param('id",{"_index":482,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["getone(id",{"_index":431,"title":{},"body":{"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{}}}],["getrolebyvalue",{"_index":635,"title":{},"body":{"injectables/RoleService.html":{}}}],["getrolebyvalue(value",{"_index":642,"title":{},"body":{"injectables/RoleService.html":{}}}],["getting",{"_index":921,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":717,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getuser(@req",{"_index":751,"title":{},"body":{"controllers/UserController.html":{}}}],["getuser(id",{"_index":806,"title":{},"body":{"injectables/UserService.html":{}}}],["getuser(req",{"_index":730,"title":{},"body":{"controllers/UserController.html":{}}}],["grow",{"_index":957,"title":{},"body":{"index.html":{}}}],["guard",{"_index":74,"title":{"guards/Auth.html":{},"guards/RolesGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":76,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["guards/jwt.guard",{"_index":172,"title":{},"body":{"modules/AuthModule.html":{}}}],["guards/jwt.strategy",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{}}}],["hashedpassword",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["hashedpassword(password",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["here",{"_index":968,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["httpcode(200",{"_index":766,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(httpstatus.ok",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/ReceiptService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{}}}],["httpexception('not",{"_index":308,"title":{},"body":{"injectables/FileService.html":{}}}],["httpexception('user",{"_index":585,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["httpexception('users",{"_index":852,"title":{},"body":{"injectables/UserService.html":{}}}],["https://nestjs.com",{"_index":975,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/ReceiptService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{}}}],["httpstatus.bad_request",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.forbidden",{"_index":675,"title":{},"body":{"guards/RolesGuard.html":{}}}],["httpstatus.internal_server_error",{"_index":310,"title":{},"body":{"injectables/FileService.html":{},"injectables/ReceiptService.html":{}}}],["httpstatus.not_found",{"_index":853,"title":{},"body":{"injectables/UserService.html":{}}}],["iat",{"_index":332,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["id",{"_index":21,"title":{},"body":{"classes/AddRolleDto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"classes/User.html":{},"interfaces/UserDetails.html":{},"injectables/UserService.html":{}}}],["id:mongoose.types.objectid",{"_index":393,"title":{},"body":{"classes/Receipt.html":{}}}],["id:string",{"_index":770,"title":{},"body":{"controllers/UserController.html":{}}}],["id:user.id",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["identifier",{"_index":856,"title":{},"body":{"coverage.html":{}}}],["if(!fs.existssync(filepath",{"_index":302,"title":{},"body":{"injectables/FileService.html":{}}}],["if(!user",{"_index":830,"title":{},"body":{"injectables/UserService.html":{}}}],["if(user.email",{"_index":579,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["if(users.password",{"_index":839,"title":{},"body":{"injectables/UserService.html":{}}}],["ignoreexpiration",{"_index":327,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":102,"title":{},"body":{"guards/Auth.html":{},"injectables/MongooseConfigService.html":{},"guards/RolesGuard.html":{}}}],["import",{"_index":28,"title":{},"body":{"classes/AddRolleDto.html":{},"modules/AppModule.html":{},"guards/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserdto.html":{},"injectables/MongooseConfigService.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"guards/RolesGuard.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ReceiptModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{}}}],["imports:[configmodule",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["in'})@post('/login')@httpcode(httpstatus.ok",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["incorrect",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AddRolleDto.html":{},"guards/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserdto.html":{},"injectables/MongooseConfigService.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"guards/RolesGuard.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserDetails.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddRolleDto.html":{},"modules/AppModule.html":{},"guards/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserdto.html":{},"injectables/MongooseConfigService.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"guards/RolesGuard.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserDetails.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":317,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":95,"title":{"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/ReceiptService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}},"body":{"guards/Auth.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/ReceiptService.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/ReceiptService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectmodel",{"_index":533,"title":{},"body":{"injectables/ReceiptService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["injectmodel('recept",{"_index":815,"title":{},"body":{"injectables/UserService.html":{}}}],["injectmodel(tags.name",{"_index":542,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["injectmodel(user.name",{"_index":543,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["input",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["installation",{"_index":936,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":938,"title":{},"body":{"index.html":{}}}],["interface",{"_index":773,"title":{"interfaces/UserDetails.html":{}},"body":{"interfaces/UserDetails.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":774,"title":{},"body":{"interfaces/UserDetails.html":{}}}],["issamwuser",{"_index":834,"title":{},"body":{"injectables/UserService.html":{}}}],["issamwuser.id",{"_index":836,"title":{},"body":{"injectables/UserService.html":{}}}],["join",{"_index":964,"title":{},"body":{"index.html":{}}}],["jpg",{"_index":298,"title":{},"body":{"injectables/FileService.html":{}}}],["jwt",{"_index":322,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtconstants",{"_index":862,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtfromrequest:extractjwt.fromauthheaderasbearertoken",{"_index":326,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtguard",{"_index":448,"title":{},"body":{"controllers/ReceiptController.html":{},"controllers/UserController.html":{}}}],["jwtmodule",{"_index":171,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":175,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":82,"title":{},"body":{"guards/Auth.html":{},"injectables/AuthService.html":{},"modules/ReceiptModule.html":{},"guards/RolesGuard.html":{}}}],["jwtstrategy",{"_index":165,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":972,"title":{},"body":{"index.html":{}}}],["license",{"_index":978,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":954,"title":{},"body":{"index.html":{}}}],["lines",{"_index":270,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["lines'})@prop({required",{"_index":385,"title":{},"body":{"classes/Receipt.html":{}}}],["load",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(userdto",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["loginuserdto",{"_index":132,"title":{"classes/LoginUserdto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginUserdto.html":{},"coverage.html":{}}}],["lts.1",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["matching",{"_index":33,"title":{},"body":{"classes/AddRolleDto.html":{},"modules/AppModule.html":{},"guards/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserdto.html":{},"injectables/MongooseConfigService.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"guards/RolesGuard.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserDetails.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["metadata",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":78,"title":{},"body":{"guards/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minimist",{"_index":895,"title":{},"body":{"dependencies.html":{}}}],["miscellaneous",{"_index":918,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":953,"title":{},"body":{"index.html":{}}}],["mode",{"_index":943,"title":{},"body":{"index.html":{}}}],["model",{"_index":514,"title":{},"body":{"injectables/ReceiptService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["module",{"_index":34,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/ReceiptModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/ReceiptModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":36,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/ReceiptModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":347,"title":{},"body":{"injectables/MongooseConfigService.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["mongoose.document",{"_index":392,"title":{},"body":{"classes/Receipt.html":{},"classes/Tags.html":{},"classes/User.html":{}}}],["mongoose.schema.types.array",{"_index":397,"title":{},"body":{"classes/Receipt.html":{},"classes/Role.html":{},"classes/RoleUser.html":{},"classes/User.html":{}}}],["mongoose.schema.types.objectid",{"_index":395,"title":{},"body":{"classes/Receipt.html":{},"classes/Tags.html":{},"classes/User.html":{}}}],["mongoose.types.objectid",{"_index":365,"title":{},"body":{"classes/Receipt.html":{},"classes/User.html":{}}}],["mongooseconfigservice",{"_index":65,"title":{"injectables/MongooseConfigService.html":{}},"body":{"modules/AppModule.html":{},"injectables/MongooseConfigService.html":{},"coverage.html":{}}}],["mongoosemodule",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/ReceiptModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature([{name",{"_index":501,"title":{},"body":{"modules/ReceiptModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemoduleoptions",{"_index":344,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["mongooseoptions",{"_index":346,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["mongooseoptionsfactory",{"_index":345,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["more",{"_index":967,"title":{},"body":{"index.html":{}}}],["multer",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":973,"title":{},"body":{"index.html":{}}}],["name",{"_index":85,"title":{},"body":{"guards/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserDetails.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["name'})@prop({required",{"_index":701,"title":{},"body":{"classes/User.html":{}}}],["name:'recfile',maxcount",{"_index":464,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["nest",{"_index":932,"title":{},"body":{"index.html":{}}}],["nestfactory.create(appmodule",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestframework",{"_index":977,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"guards/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":664,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":100,"title":{},"body":{"guards/Auth.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ReceiptModule.html":{},"guards/RolesGuard.html":{}}}],["nestjs/mongoose",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"injectables/MongooseConfigService.html":{},"classes/Receipt.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"classes/Tags.html":{},"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":98,"title":{},"body":{"guards/Auth.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":445,"title":{},"body":{"controllers/ReceiptController.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":885,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":30,"title":{},"body":{"classes/AddRolleDto.html":{},"controllers/AuthController.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":116,"title":{},"body":{"guards/Auth.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/ReceiptService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news",{"_index":603,"title":{},"body":{"controllers/RoleController.html":{}}}],["newsuserdto",{"_index":139,"title":{"classes/NewsUserdto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/NewsUserdto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newuser",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["nextui",{"_index":654,"title":{},"body":{"classes/RoleUser.html":{}}}],["node.js",{"_index":924,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":811,"title":{},"body":{"injectables/UserService.html":{}}}],["npm",{"_index":937,"title":{},"body":{"index.html":{}}}],["null",{"_index":831,"title":{},"body":{"injectables/UserService.html":{}}}],["number",{"_index":370,"title":{},"body":{"classes/Receipt.html":{},"controllers/ReceiptController.html":{}}}],["object",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objectid",{"_index":423,"title":{},"body":{"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"classes/TagsDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["observable",{"_index":94,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{}}}],["offset",{"_index":427,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["ok",{"_index":584,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["open",{"_index":955,"title":{},"body":{"index.html":{}}}],["optional",{"_index":86,"title":{},"body":{"guards/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["org/react",{"_index":655,"title":{},"body":{"classes/RoleUser.html":{}}}],["out",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/ReceiptModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":982,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":881,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ReceiptController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["param('id",{"_index":769,"title":{},"body":{"controllers/UserController.html":{}}}],["parameters",{"_index":84,"title":{},"body":{"guards/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["parametr",{"_index":611,"title":{},"body":{"controllers/RoleController.html":{}}}],["passport",{"_index":321,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":318,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":324,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{},"classes/User.html":{}}}],["password'})@prop({required",{"_index":704,"title":{},"body":{"classes/User.html":{}}}],["path",{"_index":288,"title":{},"body":{"injectables/FileService.html":{}}}],["path.resolve(__dirname",{"_index":300,"title":{},"body":{"injectables/FileService.html":{}}}],["payload",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["pcrypt",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["pdf",{"_index":912,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":354,"title":{},"body":{"classes/NewsUserdto.html":{},"classes/User.html":{}}}],["please",{"_index":965,"title":{},"body":{"index.html":{}}}],["porst",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["port",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ReceiptController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["post('')@apioperation({summary",{"_index":418,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["post('/login",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/roles",{"_index":758,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/roles')@roles('admin')@apioperation({summary",{"_index":720,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/tags",{"_index":488,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["post('update",{"_index":765,"title":{},"body":{"controllers/UserController.html":{}}}],["post('update')@apioperation({summary",{"_index":735,"title":{},"body":{"controllers/UserController.html":{}}}],["post('users",{"_index":468,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["post('users')@apioperation({summary",{"_index":411,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["post()@apioperation({summary",{"_index":602,"title":{},"body":{"controllers/RoleController.html":{}}}],["poyload",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["prefix",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ReceiptController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["price",{"_index":244,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["price'})@prop({required",{"_index":371,"title":{},"body":{"classes/Receipt.html":{}}}],["private",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{}}}],["process.env.databese_name",{"_index":351,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["process.env.port",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.server_url",{"_index":349,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["production",{"_index":945,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":923,"title":{},"body":{"index.html":{}}}],["project",{"_index":956,"title":{},"body":{"index.html":{}}}],["promise",{"_index":93,"title":{},"body":{"guards/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/ReceiptService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{}}}],["prop",{"_index":387,"title":{},"body":{"classes/Receipt.html":{},"classes/Role.html":{},"classes/RoleUser.html":{},"classes/Tags.html":{},"classes/User.html":{}}}],["prop({required",{"_index":394,"title":{},"body":{"classes/Receipt.html":{},"classes/Role.html":{},"classes/Tags.html":{},"classes/User.html":{}}}],["prop({type",{"_index":379,"title":{},"body":{"classes/Receipt.html":{},"classes/Role.html":{},"classes/RoleUser.html":{},"classes/Tags.html":{},"classes/User.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"classes/AddRolleDto.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"classes/Role.html":{},"classes/RoleUser.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"interfaces/UserDetails.html":{},"properties.html":{}}}],["providers",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/ReceiptModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{}}}],["providers:[receiptservice",{"_index":509,"title":{},"body":{"modules/ReceiptModule.html":{}}}],["purc_date",{"_index":245,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["purchase",{"_index":258,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["purchase'})@prop({required",{"_index":373,"title":{},"body":{"classes/Receipt.html":{}}}],["query",{"_index":437,"title":{},"body":{"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{}}}],["query('count",{"_index":474,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["query('offset",{"_index":475,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["read",{"_index":966,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":10,"title":{},"body":{"classes/AddRolleDto.html":{},"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"classes/LoginUserdto.html":{},"classes/TagsDto.html":{},"injectables/UserService.html":{}}}],["receip",{"_index":564,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["receip.save",{"_index":574,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["receip.tags.push(tags.id",{"_index":573,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["receips",{"_index":559,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["receips._id",{"_index":562,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["receipt",{"_index":293,"title":{"classes/Receipt.html":{}},"body":{"injectables/FileService.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"classes/Tags.html":{},"classes/User.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["receipt'})@apiresponse({status",{"_index":419,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["receipt.controller",{"_index":495,"title":{},"body":{"modules/ReceiptModule.html":{}}}],["receipt.name",{"_index":502,"title":{},"body":{"modules/ReceiptModule.html":{}}}],["receipt.schema",{"_index":684,"title":{},"body":{"classes/Tags.html":{}}}],["receipt.service",{"_index":442,"title":{},"body":{"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{}}}],["receipt/receipt.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["receipt/schemas/receipt.schema",{"_index":685,"title":{},"body":{"classes/Tags.html":{},"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["receipt[]'})@prop({type",{"_index":707,"title":{},"body":{"classes/User.html":{}}}],["receiptcontroller",{"_index":401,"title":{"controllers/ReceiptController.html":{}},"body":{"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"coverage.html":{}}}],["receiptmodel",{"_index":520,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["receiptmodule",{"_index":42,"title":{"modules/ReceiptModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ReceiptModule.html":{},"modules.html":{},"overview.html":{}}}],["receipts",{"_index":252,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["receipts'})@prop",{"_index":368,"title":{},"body":{"classes/Receipt.html":{}}}],["receipts.file.jpg",{"_index":260,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["receiptschema",{"_index":399,"title":{},"body":{"classes/Receipt.html":{},"modules/ReceiptModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["receiptservice",{"_index":441,"title":{"injectables/ReceiptService.html":{}},"body":{"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"coverage.html":{},"overview.html":{}}}],["receiptsid",{"_index":366,"title":{},"body":{"classes/Receipt.html":{}}}],["receipt})@delete(':id')@useguards(jwtguard.auth",{"_index":424,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["receipt})@get('/search",{"_index":435,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["receipt})@get(':id')@useguards(jwtguard.auth",{"_index":432,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["receipt})@get()@useguards(jwtguard.auth",{"_index":428,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["receipt})@useguards(jwtguard.auth)@roles('shop')@useinterceptors(undefined",{"_index":415,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["receipt})@useguards(jwtguard.auth)@useinterceptors(undefined",{"_index":420,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["recept",{"_index":783,"title":{},"body":{"modules/UserModule.html":{}}}],["receptdocument",{"_index":391,"title":{},"body":{"classes/Receipt.html":{},"injectables/ReceiptService.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["receptid",{"_index":677,"title":{},"body":{"classes/Tags.html":{},"classes/TagsDto.html":{}}}],["receptmodel",{"_index":791,"title":{},"body":{"injectables/UserService.html":{}}}],["recepts",{"_index":550,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["recepts.$set('user",{"_index":553,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["recepts.save",{"_index":555,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["recfile",{"_index":246,"title":{},"body":{"classes/CreateReceiptDto.html":{},"injectables/FileService.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"miscellaneous/enumerations.html":{}}}],["recfile:any):promise",{"_index":545,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["recfile:uplfile",{"_index":552,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["recursive",{"_index":304,"title":{},"body":{"injectables/FileService.html":{}}}],["ref",{"_index":383,"title":{},"body":{"classes/Receipt.html":{},"classes/Role.html":{},"classes/RoleUser.html":{},"classes/Tags.html":{},"classes/User.html":{}}}],["ref:'receipt",{"_index":686,"title":{},"body":{"classes/Tags.html":{},"classes/User.html":{}}}],["ref:'tags",{"_index":396,"title":{},"body":{"classes/Receipt.html":{}}}],["ref:'user",{"_index":398,"title":{},"body":{"classes/Receipt.html":{}}}],["reflect",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":661,"title":{},"body":{"guards/RolesGuard.html":{}}}],["regax",{"_index":566,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["regexp(query",{"_index":567,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["register",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(user",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(userdto",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["registered",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["registrattion",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["removefile",{"_index":281,"title":{},"body":{"injectables/FileService.html":{}}}],["removefile(filename",{"_index":284,"title":{},"body":{"injectables/FileService.html":{}}}],["repository",{"_index":935,"title":{},"body":{"index.html":{}}}],["req",{"_index":105,"title":{},"body":{"guards/Auth.html":{},"controllers/ReceiptController.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{}}}],["req.headers.authorization",{"_index":109,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{}}}],["req.token",{"_index":121,"title":{},"body":{"guards/Auth.html":{},"controllers/ReceiptController.html":{}}}],["req.user",{"_index":119,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{}}}],["request",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requiredroles",{"_index":666,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.includes(role.value",{"_index":672,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requst",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["res",{"_index":334,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/ReceiptController.html":{}}}],["reset",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/ReceiptModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["results",{"_index":32,"title":{},"body":{"classes/AddRolleDto.html":{},"modules/AppModule.html":{},"guards/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserdto.html":{},"injectables/MongooseConfigService.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"guards/RolesGuard.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserDetails.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":120,"title":{},"body":{"guards/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":91,"title":{},"body":{"guards/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":23,"title":{"classes/Role.html":{}},"body":{"classes/AddRolleDto.html":{},"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role'})@apiresponse({status",{"_index":604,"title":{},"body":{"controllers/RoleController.html":{}}}],["role'})@prop({required",{"_index":588,"title":{},"body":{"classes/Role.html":{}}}],["role.controller",{"_index":631,"title":{},"body":{"modules/RoleModule.html":{}}}],["role.dto",{"_index":616,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["role.dto.ts",{"_index":7,"title":{},"body":{"classes/AddRolleDto.html":{},"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:5",{"_index":27,"title":{},"body":{"classes/AddRolleDto.html":{},"classes/CreateRoleDto.html":{}}}],["role.dto.ts:7",{"_index":25,"title":{},"body":{"classes/AddRolleDto.html":{},"classes/CreateRoleDto.html":{}}}],["role.id",{"_index":819,"title":{},"body":{"injectables/UserService.html":{}}}],["role.schema",{"_index":653,"title":{},"body":{"classes/RoleUser.html":{}}}],["role.service",{"_index":614,"title":{},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{}}}],["role/role.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["role/role.service",{"_index":812,"title":{},"body":{"injectables/UserService.html":{}}}],["role/schema/role.schema",{"_index":711,"title":{},"body":{"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["role[]'})@prop({type",{"_index":709,"title":{},"body":{"classes/User.html":{}}}],["rolecontroller",{"_index":597,"title":{"controllers/RoleController.html":{}},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{},"coverage.html":{}}}],["roledocument",{"_index":594,"title":{},"body":{"classes/Role.html":{},"injectables/RoleService.html":{},"miscellaneous/typealiases.html":{}}}],["roleid",{"_index":650,"title":{},"body":{"classes/RoleUser.html":{}}}],["rolemodule",{"_index":43,"title":{"modules/RoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["rolerepository",{"_index":638,"title":{},"body":{"injectables/RoleService.html":{}}}],["roles",{"_index":454,"title":{},"body":{"controllers/ReceiptController.html":{},"controllers/RoleController.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"interfaces/UserDetails.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles'})@apiresponse({status",{"_index":722,"title":{},"body":{"controllers/UserController.html":{}}}],["roles('admin",{"_index":755,"title":{},"body":{"controllers/UserController.html":{}}}],["roles('shop",{"_index":469,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["roles_key",{"_index":665,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roleschema",{"_index":595,"title":{},"body":{"classes/Role.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roleservice",{"_index":613,"title":{"injectables/RoleService.html":{}},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["roleservice:roleservice",{"_index":620,"title":{},"body":{"controllers/RoleController.html":{}}}],["rolesguard",{"_index":659,"title":{"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["roleuser",{"_index":648,"title":{"classes/RoleUser.html":{}},"body":{"classes/RoleUser.html":{},"coverage.html":{}}}],["roleuserdocument",{"_index":656,"title":{},"body":{"classes/RoleUser.html":{},"miscellaneous/typealiases.html":{}}}],["roleuserschema",{"_index":657,"title":{},"body":{"classes/RoleUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role})@get",{"_index":607,"title":{},"body":{"controllers/RoleController.html":{}}}],["run",{"_index":941,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":101,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["rīga",{"_index":355,"title":{},"body":{"classes/NewsUserdto.html":{},"classes/User.html":{}}}],["scalable",{"_index":928,"title":{},"body":{"index.html":{}}}],["schema",{"_index":388,"title":{},"body":{"classes/Receipt.html":{},"classes/Role.html":{},"classes/RoleUser.html":{},"classes/Tags.html":{},"classes/User.html":{}}}],["schema/role.schema",{"_index":617,"title":{},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{}}}],["schema:receiptschema",{"_index":503,"title":{},"body":{"modules/ReceiptModule.html":{},"modules/UserModule.html":{}}}],["schema:roleschema",{"_index":632,"title":{},"body":{"modules/RoleModule.html":{},"modules/UserModule.html":{}}}],["schema:tagsschema",{"_index":505,"title":{},"body":{"modules/ReceiptModule.html":{}}}],["schema:userschema",{"_index":507,"title":{},"body":{"modules/ReceiptModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{}}}],["schemafactory",{"_index":389,"title":{},"body":{"classes/Receipt.html":{},"classes/Role.html":{},"classes/RoleUser.html":{},"classes/Tags.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(receipt",{"_index":400,"title":{},"body":{"classes/Receipt.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(role",{"_index":596,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(roleuser",{"_index":658,"title":{},"body":{"classes/RoleUser.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(tags",{"_index":687,"title":{},"body":{"classes/Tags.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":713,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/receipt.schema",{"_index":453,"title":{},"body":{"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{}}}],["schemas/tag.schema",{"_index":538,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["schemas/tags.schema",{"_index":498,"title":{},"body":{"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{}}}],["schemas/user.schema",{"_index":745,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["search",{"_index":408,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["search(@query('query",{"_index":479,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["search(query",{"_index":434,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["searh",{"_index":512,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["searh(query",{"_index":531,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["searh(query:string",{"_index":563,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["secret",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret:'secret",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretkey",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":329,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["send",{"_index":583,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["sendreceipt",{"_index":581,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["server",{"_index":929,"title":{},"body":{"index.html":{}}}],["setdescription('documentation",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(roles_key",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settitle('warranty",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setversion('1.0",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shop",{"_index":264,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["shop'})@prop({required",{"_index":377,"title":{},"body":{"classes/Receipt.html":{}}}],["shop_name",{"_index":247,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["side",{"_index":930,"title":{},"body":{"index.html":{}}}],["sign",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["signoptions",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{}}}],["sony",{"_index":250,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddRolleDto.html":{},"modules/AppModule.html":{},"guards/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserdto.html":{},"injectables/MongooseConfigService.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"guards/RolesGuard.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserDetails.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["spec",{"_index":911,"title":{},"body":{"dependencies.html":{}}}],["sponsors",{"_index":959,"title":{},"body":{"index.html":{}}}],["src/.../constants.ts",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../file.service.ts",{"_index":920,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../receipt.schema.ts",{"_index":993,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../role.schema.ts",{"_index":994,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../roles",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roleuser.schema.ts",{"_index":995,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../tags.schema.ts",{"_index":996,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":997,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../users.decorator.ts",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:13",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:19",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:26",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:41",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:45",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:51",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:56",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:69",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":860,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/guards/jwt.guard.ts",{"_index":77,"title":{},"body":{"guards/Auth.html":{},"coverage.html":{}}}],["src/auth/guards/jwt.guard.ts:12",{"_index":89,"title":{},"body":{"guards/Auth.html":{}}}],["src/auth/guards/jwt.guard.ts:8",{"_index":83,"title":{},"body":{"guards/Auth.html":{}}}],["src/auth/guards/jwt.strategy.ts",{"_index":311,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/guards/jwt.strategy.ts:20",{"_index":316,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/guards/jwt.strategy.ts:8",{"_index":314,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/guards/roles",{"_index":864,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/guards/roles.guard.ts",{"_index":660,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts:15",{"_index":662,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/guards/roles.guard.ts:20",{"_index":663,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/config/mongoose.configservice.ts",{"_index":341,"title":{},"body":{"injectables/MongooseConfigService.html":{},"coverage.html":{}}}],["src/config/mongoose.configservice.ts:8",{"_index":343,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["src/file/file.module.ts",{"_index":277,"title":{},"body":{"modules/FileModule.html":{}}}],["src/file/file.service.ts",{"_index":279,"title":{},"body":{"injectables/FileService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/file/file.service.ts:15",{"_index":283,"title":{},"body":{"injectables/FileService.html":{}}}],["src/file/file.service.ts:33",{"_index":285,"title":{},"body":{"injectables/FileService.html":{}}}],["src/main.ts",{"_index":867,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/receipt/dto/create_receipt.dto.ts",{"_index":243,"title":{},"body":{"classes/CreateReceiptDto.html":{},"coverage.html":{}}}],["src/receipt/dto/create_receipt.dto.ts:11",{"_index":255,"title":{},"body":{"classes/CreateReceiptDto.html":{}}}],["src/receipt/dto/create_receipt.dto.ts:13",{"_index":259,"title":{},"body":{"classes/CreateReceiptDto.html":{}}}],["src/receipt/dto/create_receipt.dto.ts:15",{"_index":271,"title":{},"body":{"classes/CreateReceiptDto.html":{}}}],["src/receipt/dto/create_receipt.dto.ts:17",{"_index":262,"title":{},"body":{"classes/CreateReceiptDto.html":{}}}],["src/receipt/dto/create_receipt.dto.ts:5",{"_index":267,"title":{},"body":{"classes/CreateReceiptDto.html":{}}}],["src/receipt/dto/create_receipt.dto.ts:7",{"_index":253,"title":{},"body":{"classes/CreateReceiptDto.html":{}}}],["src/receipt/dto/create_receipt.dto.ts:9",{"_index":265,"title":{},"body":{"classes/CreateReceiptDto.html":{}}}],["src/receipt/dto/tags.dto.ts",{"_index":688,"title":{},"body":{"classes/TagsDto.html":{},"coverage.html":{}}}],["src/receipt/dto/tags.dto.ts:4",{"_index":691,"title":{},"body":{"classes/TagsDto.html":{}}}],["src/receipt/dto/tags.dto.ts:5",{"_index":689,"title":{},"body":{"classes/TagsDto.html":{}}}],["src/receipt/dto/tags.dto.ts:6",{"_index":690,"title":{},"body":{"classes/TagsDto.html":{}}}],["src/receipt/receipt.controller.ts",{"_index":402,"title":{},"body":{"controllers/ReceiptController.html":{},"coverage.html":{}}}],["src/receipt/receipt.controller.ts:42",{"_index":421,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["src/receipt/receipt.controller.ts:59",{"_index":416,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["src/receipt/receipt.controller.ts:68",{"_index":429,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["src/receipt/receipt.controller.ts:81",{"_index":436,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["src/receipt/receipt.controller.ts:88",{"_index":433,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["src/receipt/receipt.controller.ts:95",{"_index":425,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["src/receipt/receipt.module.ts",{"_index":494,"title":{},"body":{"modules/ReceiptModule.html":{}}}],["src/receipt/receipt.service.ts",{"_index":510,"title":{},"body":{"injectables/ReceiptService.html":{},"coverage.html":{}}}],["src/receipt/receipt.service.ts:16",{"_index":519,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["src/receipt/receipt.service.ts:26",{"_index":524,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["src/receipt/receipt.service.ts:39",{"_index":529,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["src/receipt/receipt.service.ts:45",{"_index":530,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["src/receipt/receipt.service.ts:50",{"_index":527,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["src/receipt/receipt.service.ts:54",{"_index":532,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["src/receipt/receipt.service.ts:60",{"_index":526,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["src/receipt/receipt.service.ts:73",{"_index":522,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["src/receipt/schemas/receipt.schema.ts",{"_index":363,"title":{},"body":{"classes/Receipt.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/receipt/schemas/receipt.schema.ts:12",{"_index":367,"title":{},"body":{"classes/Receipt.html":{}}}],["src/receipt/schemas/receipt.schema.ts:16",{"_index":369,"title":{},"body":{"classes/Receipt.html":{}}}],["src/receipt/schemas/receipt.schema.ts:20",{"_index":378,"title":{},"body":{"classes/Receipt.html":{}}}],["src/receipt/schemas/receipt.schema.ts:24",{"_index":372,"title":{},"body":{"classes/Receipt.html":{}}}],["src/receipt/schemas/receipt.schema.ts:28",{"_index":376,"title":{},"body":{"classes/Receipt.html":{}}}],["src/receipt/schemas/receipt.schema.ts:32",{"_index":374,"title":{},"body":{"classes/Receipt.html":{}}}],["src/receipt/schemas/receipt.schema.ts:36",{"_index":386,"title":{},"body":{"classes/Receipt.html":{}}}],["src/receipt/schemas/receipt.schema.ts:39",{"_index":381,"title":{},"body":{"classes/Receipt.html":{}}}],["src/receipt/schemas/receipt.schema.ts:43",{"_index":384,"title":{},"body":{"classes/Receipt.html":{}}}],["src/receipt/schemas/tags.schema.ts",{"_index":676,"title":{},"body":{"classes/Tags.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/receipt/schemas/tags.schema.ts:16",{"_index":681,"title":{},"body":{"classes/Tags.html":{}}}],["src/receipt/schemas/tags.schema.ts:19",{"_index":679,"title":{},"body":{"classes/Tags.html":{}}}],["src/receipt/schemas/tags.schema.ts:22",{"_index":680,"title":{},"body":{"classes/Tags.html":{}}}],["src/role/dto/create",{"_index":273,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/role/role.controller.ts",{"_index":598,"title":{},"body":{"controllers/RoleController.html":{},"coverage.html":{}}}],["src/role/role.controller.ts:15",{"_index":606,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.controller.ts:22",{"_index":612,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.controller.ts:28",{"_index":608,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.module.ts",{"_index":630,"title":{},"body":{"modules/RoleModule.html":{}}}],["src/role/role.service.ts",{"_index":633,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["src/role/role.service.ts:11",{"_index":641,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:15",{"_index":640,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:19",{"_index":643,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:8",{"_index":637,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/schema/role.schema.ts",{"_index":587,"title":{},"body":{"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/role/schema/role.schema.ts:13",{"_index":593,"title":{},"body":{"classes/Role.html":{}}}],["src/role/schema/role.schema.ts:18",{"_index":589,"title":{},"body":{"classes/Role.html":{}}}],["src/role/schema/role.schema.ts:22",{"_index":592,"title":{},"body":{"classes/Role.html":{}}}],["src/role/schema/roleuser.schema.ts",{"_index":649,"title":{},"body":{"classes/RoleUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/role/schema/roleuser.schema.ts:14",{"_index":652,"title":{},"body":{"classes/RoleUser.html":{}}}],["src/role/schema/roleuser.schema.ts:18",{"_index":651,"title":{},"body":{"classes/RoleUser.html":{}}}],["src/user/dto/add",{"_index":6,"title":{},"body":{"classes/AddRolleDto.html":{},"coverage.html":{}}}],["src/user/dto/createuser.dto.ts",{"_index":335,"title":{},"body":{"classes/LoginUserdto.html":{},"coverage.html":{}}}],["src/user/dto/createuser.dto.ts:5",{"_index":338,"title":{},"body":{"classes/LoginUserdto.html":{}}}],["src/user/dto/createuser.dto.ts:7",{"_index":340,"title":{},"body":{"classes/LoginUserdto.html":{}}}],["src/user/dto/newsuser.dto.ts",{"_index":352,"title":{},"body":{"classes/NewsUserdto.html":{},"coverage.html":{}}}],["src/user/dto/newsuser.dto.ts:10",{"_index":359,"title":{},"body":{"classes/NewsUserdto.html":{}}}],["src/user/dto/newsuser.dto.ts:12",{"_index":361,"title":{},"body":{"classes/NewsUserdto.html":{}}}],["src/user/dto/newsuser.dto.ts:14",{"_index":356,"title":{},"body":{"classes/NewsUserdto.html":{}}}],["src/user/dto/newsuser.dto.ts:6",{"_index":358,"title":{},"body":{"classes/NewsUserdto.html":{}}}],["src/user/dto/newsuser.dto.ts:8",{"_index":357,"title":{},"body":{"classes/NewsUserdto.html":{}}}],["src/user/schemas/user.schema.ts",{"_index":692,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/user/schemas/user.schema.ts:14",{"_index":700,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:17",{"_index":699,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:21",{"_index":702,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:25",{"_index":705,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:30",{"_index":696,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:33",{"_index":706,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:35",{"_index":697,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:39",{"_index":710,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:43",{"_index":708,"title":{},"body":{"classes/User.html":{}}}],["src/user/user",{"_index":775,"title":{},"body":{"interfaces/UserDetails.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":714,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:25",{"_index":733,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:36",{"_index":729,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:44",{"_index":723,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:52",{"_index":727,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:63",{"_index":738,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":781,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":784,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:19",{"_index":792,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:27",{"_index":797,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:36",{"_index":805,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:41",{"_index":807,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:46",{"_index":798,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:51",{"_index":794,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:59",{"_index":800,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:62",{"_index":804,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:67",{"_index":802,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:73",{"_index":809,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:93",{"_index":795,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/users.decorator.ts",{"_index":877,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":868,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["start:dev",{"_index":944,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":946,"title":{},"body":{"index.html":{}}}],["started",{"_index":922,"title":{"index.html":{}},"body":{"miscellaneous/variables.html":{}}}],["starter",{"_index":934,"title":{},"body":{"index.html":{}}}],["statements",{"_index":857,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":301,"title":{},"body":{"injectables/FileService.html":{},"dependencies.html":{}}}],["stay",{"_index":969,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":320,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"classes/AddRolleDto.html":{},"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"injectables/FileService.html":{},"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"interfaces/UserDetails.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":325,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":960,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":980,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":910,"title":{},"body":{"dependencies.html":{}}}],["swaggermodule.createdocument(app",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup('api/docs",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":880,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":879,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":536,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["tagdocument",{"_index":537,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["tagmodel",{"_index":515,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["tags",{"_index":364,"title":{"classes/Tags.html":{}},"body":{"classes/Receipt.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"classes/Tags.html":{},"coverage.html":{}}}],["tags.$set('receiptid',[receip",{"_index":572,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["tags.name",{"_index":504,"title":{},"body":{"modules/ReceiptModule.html":{}}}],["tags.save",{"_index":575,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["tags.schema",{"_index":390,"title":{},"body":{"classes/Receipt.html":{}}}],["tags/tags.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["tags/tags.schema",{"_index":540,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["tagsdocument",{"_index":539,"title":{},"body":{"injectables/ReceiptService.html":{},"classes/Tags.html":{},"miscellaneous/typealiases.html":{}}}],["tagsdto",{"_index":451,"title":{"classes/TagsDto.html":{}},"body":{"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"classes/TagsDto.html":{},"coverage.html":{}}}],["tagsmodule",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["tagsname",{"_index":678,"title":{},"body":{"classes/Tags.html":{},"classes/TagsDto.html":{}}}],["tagsschema",{"_index":497,"title":{},"body":{"modules/ReceiptModule.html":{},"classes/Tags.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["test",{"_index":949,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":952,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":951,"title":{},"body":{"index.html":{}}}],["tests",{"_index":948,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":958,"title":{},"body":{"index.html":{}}}],["this._getuserdetails(user",{"_index":832,"title":{},"body":{"injectables/UserService.html":{}}}],["this.authservice.hashedpassword(password",{"_index":846,"title":{},"body":{"injectables/UserService.html":{}}}],["this.authservice.login(userdto",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(user",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.create(dto.usersemail",{"_index":582,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["this.fileservise.createfile(recfile",{"_index":548,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["this.findbyemail(dto.email",{"_index":835,"title":{},"body":{"injectables/UserService.html":{}}}],["this.generatetoken(user",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.hashedpassword(userdto.password",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(token",{"_index":118,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{}}}],["this.receiptmodel.create({...dto",{"_index":551,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["this.receiptmodel.find",{"_index":565,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["this.receiptmodel.find({user",{"_index":558,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["this.receiptmodel.findbyid(dto",{"_index":569,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["this.receiptmodel.findbyid(id",{"_index":560,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["this.receiptmodel.findbyidanddelete(id",{"_index":561,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["this.receiptservice.addreceiptusers(dto",{"_index":472,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["this.receiptservice.create(req.user.email",{"_index":467,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["this.receiptservice.createtag(dto",{"_index":491,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["this.receiptservice.delete(id",{"_index":487,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["this.receiptservice.getall(req.user",{"_index":476,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["this.receiptservice.getone(id",{"_index":483,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["this.receiptservice.searh(query",{"_index":480,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["this.reflector.getallandoverride(roles_key",{"_index":667,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.rolerepository.create(dto",{"_index":646,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.find",{"_index":645,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.findone({value",{"_index":647,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.roleservice.createrole(dto",{"_index":622,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.getallrole",{"_index":626,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.getrolebyvalue(\"user",{"_index":816,"title":{},"body":{"injectables/UserService.html":{}}}],["this.roleservice.getrolebyvalue(dto.value",{"_index":850,"title":{},"body":{"injectables/UserService.html":{}}}],["this.roleservice.getrolebyvalue(value",{"_index":625,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.tagmodel.create({...dto",{"_index":571,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["this.usermodel.create(userdto",{"_index":817,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.find({include:{all:true",{"_index":821,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyid(dto.userid",{"_index":848,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyid(id",{"_index":822,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyid(id).exec",{"_index":829,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyid(id).populate('receipt",{"_index":828,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyidanddelete(id",{"_index":823,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findone({email",{"_index":827,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice._getuserdetails(newuser",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.create",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findbyemail(userdto.email",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservise.findbyemail(dto.usersemail",{"_index":577,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["this.userservise.findbyemail(email",{"_index":546,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["this.usersservice.addroles(dto",{"_index":760,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice.delete(req.user.id",{"_index":764,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice.findbyidd(req.user.id",{"_index":752,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice.getalluser",{"_index":757,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice.updateprofile(req.user.id,dto",{"_index":772,"title":{},"body":{"controllers/UserController.html":{}}}],["this.validateuser(userdto",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":115,"title":{},"body":{"guards/Auth.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/ReceiptService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{}}}],["timestamp",{"_index":682,"title":{},"body":{"classes/Tags.html":{},"classes/User.html":{}}}],["to'})@prop({type",{"_index":591,"title":{},"body":{"classes/Role.html":{}}}],["token",{"_index":113,"title":{},"body":{"guards/Auth.html":{},"injectables/AuthService.html":{},"controllers/ReceiptController.html":{},"guards/RolesGuard.html":{}}}],["touch",{"_index":970,"title":{},"body":{"index.html":{}}}],["true",{"_index":305,"title":{},"body":{"injectables/FileService.html":{},"classes/Role.html":{},"guards/RolesGuard.html":{},"classes/User.html":{}}}],["try",{"_index":107,"title":{},"body":{"guards/Auth.html":{},"injectables/FileService.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["tv",{"_index":251,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["twitter",{"_index":976,"title":{},"body":{"index.html":{}}}],["type",{"_index":13,"title":{},"body":{"classes/AddRolleDto.html":{},"guards/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"guards/RolesGuard.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserDetails.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type:[user",{"_index":754,"title":{},"body":{"controllers/UserController.html":{}}}],["type:user",{"_index":762,"title":{},"body":{"controllers/UserController.html":{}}}],["typealiases",{"_index":991,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":683,"title":{},"body":{"classes/Tags.html":{},"classes/User.html":{},"dependencies.html":{}}}],["types",{"_index":534,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["typescript",{"_index":933,"title":{},"body":{"index.html":{}}}],["ui",{"_index":914,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":96,"title":{},"body":{"guards/Auth.html":{},"injectables/AuthService.html":{},"guards/RolesGuard.html":{}}}],["unauthorizedexception({message",{"_index":117,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{}}}],["undefined",{"_index":380,"title":{},"body":{"classes/Receipt.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"classes/RoleUser.html":{},"classes/Tags.html":{},"classes/User.html":{}}}],["undefined})@roles('admin')@useguards(rolesguard)@get",{"_index":728,"title":{},"body":{"controllers/UserController.html":{}}}],["undefined})@useguards(jwtguard.auth)@httpcode(200",{"_index":737,"title":{},"body":{"controllers/UserController.html":{}}}],["unique",{"_index":337,"title":{},"body":{"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["unit",{"_index":947,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":990,"title":{},"body":{"properties.html":{}}}],["up",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["update",{"_index":736,"title":{},"body":{"controllers/UserController.html":{}}}],["updateprofile",{"_index":789,"title":{},"body":{"injectables/UserService.html":{}}}],["updateprofile(id",{"_index":808,"title":{},"body":{"injectables/UserService.html":{}}}],["updateprofile(id:string",{"_index":833,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser",{"_index":718,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuser(@req",{"_index":771,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuser(@uploadedfile",{"_index":768,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuser(req",{"_index":734,"title":{},"body":{"controllers/UserController.html":{}}}],["uplfile",{"_index":547,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["uploadd",{"_index":309,"title":{},"body":{"injectables/FileService.html":{}}}],["uploadedfile",{"_index":438,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["uri",{"_index":348,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["useclass",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{}}}],["useguards",{"_index":99,"title":{},"body":{"guards/Auth.html":{},"controllers/ReceiptController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtguard.auth",{"_index":462,"title":{},"body":{"controllers/ReceiptController.html":{},"controllers/UserController.html":{}}}],["useguards(rolesguard",{"_index":756,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors",{"_index":439,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["useinterceptors(fileinterceptor",{"_index":470,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["useinterceptors(fileinterceptor('aatar",{"_index":767,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors(fileinterceptor('recfile",{"_index":463,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["usepipes",{"_index":739,"title":{},"body":{"controllers/UserController.html":{}}}],["user",{"_index":20,"title":{"classes/User.html":{}},"body":{"classes/AddRolleDto.html":{},"guards/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Receipt.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"classes/RoleUser.html":{},"guards/RolesGuard.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.$set('role",{"_index":818,"title":{},"body":{"injectables/UserService.html":{}}}],["user._id",{"_index":824,"title":{},"body":{"injectables/UserService.html":{}}}],["user.controller",{"_index":782,"title":{},"body":{"modules/UserModule.html":{}}}],["user.email",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.id",{"_index":826,"title":{},"body":{"injectables/UserService.html":{}}}],["user.name",{"_index":506,"title":{},"body":{"modules/ReceiptModule.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.receipt.push(recepts",{"_index":554,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["user.role",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role.some(role",{"_index":671,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user.role=[role",{"_index":820,"title":{},"body":{"injectables/UserService.html":{}}}],["user.save",{"_index":556,"title":{},"body":{"injectables/ReceiptService.html":{},"injectables/UserService.html":{}}}],["user.service",{"_index":741,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/dto/createuser.dto",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user/dto/newsuser.dto",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user/schemas/user.schema",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"classes/Receipt.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"classes/RoleUser.html":{}}}],["user/user",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/user.controller",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ReceiptModule.html":{},"modules/RoleModule.html":{}}}],["user/user.service",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ReceiptService.html":{}}}],["user:string",{"_index":557,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["user@gmail.com",{"_index":336,"title":{},"body":{"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{},"classes/User.html":{}}}],["user[data",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercontroller",{"_index":55,"title":{"controllers/UserController.html":{}},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdetails",{"_index":210,"title":{"interfaces/UserDetails.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"interfaces/UserDetails.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userdocument",{"_index":535,"title":{},"body":{"injectables/ReceiptService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["userdocument):userdetails",{"_index":825,"title":{},"body":{"injectables/UserService.html":{}}}],["userdto",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["userdto.password",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":11,"title":{},"body":{"classes/AddRolleDto.html":{},"classes/RoleUser.html":{}}}],["usermodel",{"_index":516,"title":{},"body":{"injectables/ReceiptService.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":44,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ReceiptModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":26,"title":{},"body":{"classes/AddRolleDto.html":{},"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"classes/Role.html":{},"guards/RolesGuard.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["users'})@apiresponse({status",{"_index":413,"title":{},"body":{"controllers/ReceiptController.html":{},"controllers/UserController.html":{}}}],["users'})@prop({type",{"_index":382,"title":{},"body":{"classes/Receipt.html":{}}}],["users.email",{"_index":842,"title":{},"body":{"injectables/UserService.html":{}}}],["users.icons.jpg",{"_index":694,"title":{},"body":{"classes/User.html":{}}}],["users.name",{"_index":844,"title":{},"body":{"injectables/UserService.html":{}}}],["users.password",{"_index":841,"title":{},"body":{"injectables/UserService.html":{}}}],["users@gmail.com",{"_index":266,"title":{},"body":{"classes/CreateReceiptDto.html":{}}}],["userschema",{"_index":499,"title":{},"body":{"modules/ReceiptModule.html":{},"modules/RoleModule.html":{},"classes/User.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usersemail",{"_index":248,"title":{},"body":{"classes/CreateReceiptDto.html":{}}}],["userservice",{"_index":190,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/ReceiptService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userservise",{"_index":518,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["usersid",{"_index":18,"title":{},"body":{"classes/AddRolleDto.html":{},"classes/Role.html":{}}}],["usersservice",{"_index":749,"title":{},"body":{"controllers/UserController.html":{}}}],["user})@useguards(jwtguard.auth",{"_index":726,"title":{},"body":{"controllers/UserController.html":{}}}],["uuid",{"_index":290,"title":{},"body":{"injectables/FileService.html":{}}}],["uuid.v4",{"_index":297,"title":{},"body":{"injectables/FileService.html":{}}}],["val_period",{"_index":249,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["validate",{"_index":312,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":315,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload:any",{"_index":331,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(userdto",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationpipe",{"_index":740,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":893,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":12,"title":{},"body":{"classes/AddRolleDto.html":{},"classes/CreateRoleDto.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":861,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":998,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":988,"title":{},"body":{"properties.html":{}}}],["void",{"_index":287,"title":{},"body":{"injectables/FileService.html":{}}}],["warranty",{"_index":269,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["watch",{"_index":942,"title":{},"body":{"index.html":{}}}],["website",{"_index":974,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":963,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/ReceiptModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddRolleDto.html":{"url":"classes/AddRolleDto.html","title":"class - AddRolleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddRolleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/add-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                Userid\n                            \n                            \n                                    Readonly\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        Userid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'UsersId', description: 'User ID to assign a role to'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/add-role.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Users', description: 'Assign a role to a user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/add-role.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class AddRolleDto {\n\t@ApiProperty({example: 'Users', description: 'Assign a role to a user'})\n\treadonly value: string;\n\t@ApiProperty({example: 'UsersId', description: 'User ID to assign a role to'})\n\treadonly Userid: string; \n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nFileModule\n\nFileModule\n\nAppModule -->\n\nFileModule->AppModule\n\n\n\n\n\nReceiptModule\n\nReceiptModule\n\nAppModule -->\n\nReceiptModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            FileModule\n                        \n                        \n                            ReceiptModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { ReceiptModule } from \"./receipt/receipt.module\";\nimport { AuthModule } from './auth/auth.module';\n// import { UserController } from './user/user.controller';\nimport { UserModule } from './user/user.module';\nimport { RoleModule } from './role/role.module';\n// import { TagsModule } from './tags/tags.module';\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { FileModule } from './file/file.module';\nimport { MongooseConfigService } from \"./config/Mongoose.ConfigService\";\nimport configuration from \"./config/configuration\";\n\n\n@Module({\n    imports: [\n        MongooseModule.forRootAsync({\n            imports:[ConfigModule],\n            useClass: MongooseConfigService, \n        }),\n        ConfigModule.forRoot({\n            load: [configuration]\n        }),\n        ReceiptModule,\n        AuthModule,\n        UserModule,\n        RoleModule,\n        // TagsModule,\n        FileModule,\n        // ConfigService\n    ],    \n})\nexport class AppModule{} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/Auth.html":{"url":"guards/Auth.html","title":"guard - Auth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    Auth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/jwt.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/jwt.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/jwt.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { UseGuards } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class Auth implements CanActivate {\n\tconstructor(private jwtService: JwtService) {\n    }\n\n    canActivate(context: ExecutionContext): boolean | Promise | Observable {\n        const req = context.switchToHttp().getRequest()\n        try {\n            const authHeader = req.headers.authorization;\n            const bearer = authHeader.split(' ')[0]\n            const token = authHeader.split(' ')[1]\n\n            if (bearer !== 'Bearer' || !token) {\n                throw new UnauthorizedException({message: 'Пользователь не авторизован'})\n            }\n\n            const user = this.jwtService.verify(token);\n            req.user = user;\n            return (req.token= token);\n        } catch (e) {\n            throw new UnauthorizedException({message: 'Пользователь не авторизован'})\n        }\n    }\n\n}\n\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(userDto: LoginUserdto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'User sign in'})@Post('/login')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                LoginUserdto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(user: NewsUserdto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'User sign up '})@Post('/register')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                NewsUserdto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post } from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { NewsUserdto } from '../user/dto/newsuser.dto';\nimport { LoginUserdto } from '../user/dto/Createuser.dto';\nimport { AuthService } from './auth.service';\n@ApiTags('Autorization')\n@Controller('/auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @ApiOperation({summary: 'User sign up '})\n  @Post('/register')\n  register(@Body() user: NewsUserdto): Promise {\n    return this.authService.register(user);\n  }\n  @ApiOperation({summary:'User sign in'})\n  @Post('/login')\n  @HttpCode(HttpStatus.OK)\n  login(@Body() userDto: LoginUserdto) {\n    return this.authService.login(userDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport {JwtModule} from '@nestjs/jwt'\nimport { UserModule } from './../user/user.module';\nimport { Auth } from './guards/jwt.guard';\nimport { JwtStrategy } from './guards/jwt.strategy';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n\n@Module({\n  imports:[ \n    ConfigModule,\n    // UserModule,    \n    forwardRef(()=>UserModule),\n    JwtModule.registerAsync({\n\t     useFactory: () =>({\n          secret:'secret',\n          signOptions: {\n            expiresIn:'3600s'\n          }\n      }),\n    })\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, \n              Auth, JwtStrategy],\n  exports: [AuthService,JwtModule]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                doesPasswordMatch\n                            \n                            \n                                    Private\n                                    Async\n                                generateToken\n                            \n                            \n                                    Async\n                                hashedPassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Private\n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        doesPasswordMatch\n                        \n                    \n                \n            \n            \n                \n                    \n                    doesPasswordMatch(password: string, hashedPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hashedPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        generateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateToken(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        hashedPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    hashedPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(userDto: LoginUserdto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                LoginUserdto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(userDto: Readonly)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:26\n                \n            \n\n\n            \n                \n                    This requst for registrattion users\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                            Readonly\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(userDto: LoginUserdto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                LoginUserdto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpException,\n  Injectable,\n  UnauthorizedException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\nimport { UserService } from './../user/user.service';\nimport { NewsUserdto } from './../user/dto/newsuser.dto';\nimport { UserDetails } from '../user/user-details.interface';\nimport { LoginUserdto } from '../user/dto/Createuser.dto';\nimport { User } from '../user/schemas/user.schema';\n@Injectable()\nexport class AuthService {\n  // constructor(){},\n  constructor(\n    private userService: UserService,\n    private jwtService: JwtService,\n  ) {}\n    /**\n   * This requst for registrattion users\n   * @param register this is the poyload for user \n   *\n  **/ \n  async register(userDto: Readonly): Promise {\n    const existingUser = await this.userService.findByEmail(userDto.email);\n    if (existingUser) {\n      throw new HttpException(\n        'user already registered',\n        HttpStatus.BAD_REQUEST,\n        );\n      }\n      const hashedPassword = await this.hashedPassword(userDto.password);\n      const newUser = await this.userService.create({\n        ...userDto,\n        password: hashedPassword,\n      });\n      return this.userService._getUserDetails(newUser);\n  }\n  async hashedPassword(password: string): Promise {\n    return bcrypt.hash(password, 12);\n  }\n  \n  async doesPasswordMatch(\n    password: string,\n    hashedPassword: string,\n    ): Promise {\n      return bcrypt.compare(password, hashedPassword);\n    }\n    async login(userDto: LoginUserdto) {\n      const user = await this.validateUser(userDto);\n      const token = this.generateToken(user);\n      return token;\n    }\n    private async validateUser(userDto: LoginUserdto) {\n      const user = await this.userService.findByEmail(userDto.email);\n      const doesPasswordMatch = await bcrypt.compare(\n        userDto.password,\n        user.password,\n        );\n        if (user && doesPasswordMatch) {\n          return user;\n        }\n        throw new UnauthorizedException({\n          message: 'Incorrect email and password',\n        });\n      }\n    private async generateToken(user: User) {\n      const payload = {id:user.id, email: user.email, role: user.role };\n      return {\n        token: this.jwtService.sign(payload),\n      };\n    }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReceiptDto.html":{"url":"classes/CreateReceiptDto.html","title":"class - CreateReceiptDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReceiptDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/receipt/dto/create_receipt.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                price\n                            \n                            \n                                    Readonly\n                                purc_date\n                            \n                            \n                                    Readonly\n                                recfile\n                            \n                            \n                                    Readonly\n                                shop_name\n                            \n                            \n                                    Readonly\n                                UsersEmail\n                            \n                            \n                                    Readonly\n                                val_period\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Sony tv ', description: 'Name receipts'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/dto/create_receipt.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '50', description: 'Price'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/dto/create_receipt.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        purc_date\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '21.12.2022', description: 'Date of purchase'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/dto/create_receipt.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        recfile\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'receipts.file.jpg', description: 'purchase document'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/dto/create_receipt.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        shop_name\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1a.lv', description: 'Shop'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/dto/create_receipt.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        UsersEmail\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'users@gmail.com ', description: 'Users email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/dto/create_receipt.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        val_period\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '21.12.2024', description: 'date of warranty lines'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/dto/create_receipt.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreateReceiptDto{\n\t@ApiProperty({example: 'users@gmail.com ', description: 'Users email'})\n    readonly UsersEmail;\n\t@ApiProperty({example: 'Sony tv ', description: 'Name receipts'})\n    readonly name;\n\t@ApiProperty({example: '1a.lv', description: 'Shop'})\n    readonly shop_name;\n\t@ApiProperty({example: '50', description: 'Price'})\n    readonly price;\n\t@ApiProperty({example: '21.12.2022', description: 'Date of purchase'})\n    readonly purc_date;     \n\t@ApiProperty({example: '21.12.2024', description: 'date of warranty lines'})\n    readonly val_period;\n\t@ApiProperty({example: 'receipts.file.jpg', description: 'purchase document'})\n    readonly recfile;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Users', description: 'Role description'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/dto/create-role.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Users', description: 'Role name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/dto/create-role.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreateRoleDto{\n\t@ApiProperty({example: 'Users', description: 'Role name'}) \n\treadonly value: string;\n\t@ApiProperty({example: 'Users', description: 'Role description'}) \n\treadonly description: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileModule.html":{"url":"modules/FileModule.html","title":"module - FileModule","body":"\n                   \n\n\n\n\n    Modules\n    FileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FileModule\n\n\n\ncluster_FileModule_providers\n\n\n\n\nFileService\n\nFileService\n\n\n\nFileModule\n\nFileModule\n\nFileModule -->\n\nFileService->FileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/file/file.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FileService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FileService } from './file.service';\n\n@Module({\n  providers: [FileService],\n  // exports: [FileService]\n})\nexport class FileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/file/file.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createFile\n                            \n                            \n                                removeFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    createFile(file)\n                \n            \n\n\n            \n                \n                    Defined in src/file/file.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFile\n                        \n                    \n                \n            \n            \n                \nremoveFile(fileName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/file/file.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {HttpException, HttpStatus, Injectable} from \"@nestjs/common\";\nimport * as path from 'path'\nimport * as fs from 'fs'\nimport * as uuid from 'uuid'\n\nexport enum FileType {\n    RECEIPT = 'recfile'\n}\n\n@Injectable()\nexport class FileService{\n\n    //  createFile(type:FileType, file){\n    //  createFile(file){\n    async createFile(file): Promise {\n        try {\n            // const fileExtension = file.originalname.splits('.').pop()\n            // const fileName = uuid.v4() + '.' + fileExtension\n            const fileName = uuid.v4() + '.jpg' \n            const filePath = path.resolve(__dirname, '..', 'static')\n            if(!fs.existsSync(filePath)) {\n                fs.mkdirSync(filePath, {recursive: true})\n            }\n            fs.writeFileSync(path.join(filePath, fileName), file.buffer)\n            // fs.writeFileSync(path.join(filePath, fileName), file.buffer)\n            // return type + '/' + fileName\n            return fileName\n        } catch (e) {\n            throw new HttpException('Not uploadd file', HttpStatus.INTERNAL_SERVER_ERROR)\n        }\n    }\n\n    removeFile(fileName: string) {\n\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, AuthService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/jwt.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        AuthService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/jwt.strategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { AuthService } from './../auth.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy){\n\tconstructor(\n\t\tconfigService: ConfigService,\n\t\tAuthService: AuthService\n\t\t){\n\t\tsuper({\n\t\t\tjwtFromRequest:ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tignoreExpiration: false,\n\t\t\tsecretOrKey: configService.get('JWT_SECRET'), \t\t\n\t\t})\n\t}\n\n\tasync validate(payload:any): Promise{\n\t\t// const {iat, exp, ...res} = payload\n\t\t// return res\n\t\treturn {...payload}\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserdto.html":{"url":"classes/LoginUserdto.html","title":"class - LoginUserdto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserdto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/Createuser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@gmail.com', description: 'Unique email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/Createuser.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '12345', description: 'Password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/Createuser.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class LoginUserdto{\n\t@ApiProperty({example: 'user@gmail.com', description: 'Unique email'},)\n\treadonly email: string;\n\t@ApiProperty({example: '12345', description: 'Password'})\n\treadonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MongooseConfigService.html":{"url":"injectables/MongooseConfigService.html","title":"injectable - MongooseConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MongooseConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/Mongoose.ConfigService.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMongooseOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMongooseOptions\n                        \n                    \n                \n            \n            \n                \ncreateMongooseOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/config/Mongoose.ConfigService.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     MongooseModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport {MongooseModuleOptions, MongooseOptionsFactory } from '@nestjs/mongoose';\n// import { MongooseOptions } from \"mongoose\";\n\n@Injectable()\n\nexport class MongooseConfigService implements MongooseOptionsFactory{\n\tcreateMongooseOptions(): MongooseModuleOptions {\n\t\treturn{\n\t\t\turi: process.env.SERVER_URL,\n\t\t\tdbName: process.env.DATABESE_NAME\n\t\t\n\t\t}\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsUserdto.html":{"url":"classes/NewsUserdto.html","title":"class - NewsUserdto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsUserdto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/newsuser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                City\n                            \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        City\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Rīga', description: 'City'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/newsuser.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@gmail.com', description: 'Unique email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/newsuser.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'users', description: 'Users name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/newsuser.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '12345', description: 'Password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/newsuser.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '+37129994512', description: 'Phone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/newsuser.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiTags } from \"@nestjs/swagger\";\n\n@ApiTags('fhg')\nexport class NewsUserdto{\n\t@ApiProperty({example: 'users', description: 'Users name'})\n\tname: string; \n\t@ApiProperty({example: 'user@gmail.com', description: 'Unique email'})\n\temail: string;\n\t@ApiProperty({example: '12345', description: 'Password'})\n\tpassword: string;\n\t@ApiProperty({example: '+37129994512', description: 'Phone'})\n\tphone: string;\n\t@ApiProperty({example: 'Rīga', description: 'City'})\n\tCity: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Receipt.html":{"url":"classes/Receipt.html","title":"class - Receipt","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Receipt\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/receipt/schemas/receipt.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                purc_date\n                            \n                            \n                                recfile\n                            \n                            \n                                shop_name\n                            \n                            \n                                tags\n                            \n                            \n                                user\n                            \n                            \n                                val_period\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Id', description: 'receiptsId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/schemas/receipt.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Sony tv ', description: 'Name receipts'})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/schemas/receipt.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '50', description: 'Price'})@Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/schemas/receipt.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        purc_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '21.12.2022', description: 'Date of purchase'})@Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/schemas/receipt.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'receipts.file.jpg', description: 'purchase document'})@Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/schemas/receipt.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shop_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1a.lv', description: 'Shop'})@Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/schemas/receipt.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tags[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/schemas/receipt.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Users[]', description: 'Users'})@Prop({type: undefined, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/schemas/receipt.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        val_period\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '21.12.2024', description: 'date of warranty lines'})@Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/schemas/receipt.schema.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { Document } from 'mongoose';\nimport { Tags } from './tags.schema';\nimport { User } from '../../user/schemas/user.schema';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport type ReceptDocument = Receipt & mongoose.Document;\n\n@Schema()\nexport class Receipt {\n\t@ApiProperty({example: 'Id', description: 'receiptsId'})\n  id:mongoose.Types.ObjectId;\n\n\t@ApiProperty({example: 'Sony tv ', description: 'Name receipts'})\n  @Prop()\n  name: string;\n\n\t@ApiProperty({example: '1a.lv', description: 'Shop'})\n  @Prop({required: false})\n  shop_name: string;\n  \n\t@ApiProperty({example: '50', description: 'Price'})\n  @Prop({required: false})\n  price: number;\n\n\t@ApiProperty({example: 'receipts.file.jpg', description: 'purchase document'})\n  @Prop({required: false})\n  recfile: string;\n\n\t@ApiProperty({example: '21.12.2022', description: 'Date of purchase'})\n  @Prop({required: false}) \n  purc_date: string;\n  \n\t@ApiProperty({example: '21.12.2024', description: 'date of warranty lines'})\n  @Prop({required: false})\n  val_period: string;\n  \n  @Prop({type: [{type: mongoose.Schema.Types.ObjectId, ref:'Tags'}]})\n  tags: Tags[];\n  \n\t@ApiProperty({example: 'Users[]', description: 'Users'})\n  @Prop({type: mongoose.Schema.Types.Array, ref:'User'})\n  user: User\n  \n\n}\n\nexport const ReceiptSchema = SchemaFactory.createForClass(Receipt);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ReceiptController.html":{"url":"controllers/ReceiptController.html","title":"controller - ReceiptController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ReceiptController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/receipt/receipt.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /receipt\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addreceiptusers\n                            \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                getOne\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addreceiptusers\n                        \n                    \n                \n            \n            \n                \naddreceiptusers(req, dto: CreateReceiptDto, recfile)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('users')@ApiOperation({summary: 'Add receipt users'})@ApiResponse({status: 200, type: Receipt})@UseGuards(jwtGuard.Auth)@Roles('Shop')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/receipt/receipt.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateReceiptDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    recfile\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(req, dto: CreateReceiptDto, recfile)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('')@ApiOperation({summary: 'Add receipt'})@ApiResponse({status: 200, type: Receipt})@UseGuards(jwtGuard.Auth)@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/receipt/receipt.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateReceiptDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    recfile\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: ObjectId)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete receipt'})@ApiResponse({status: 200, type: Receipt})@Delete(':id')@UseGuards(jwtGuard.Auth)\n                \n            \n\n            \n                \n                    Defined in src/receipt/receipt.controller.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(count: number, offset: number, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all users receipt'})@ApiResponse({status: 200, type: Receipt})@Get()@UseGuards(jwtGuard.Auth)\n                \n            \n\n            \n                \n                    Defined in src/receipt/receipt.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(id: ObjectId)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get receipt'})@ApiResponse({status: 200, type: Receipt})@Get(':id')@UseGuards(jwtGuard.Auth)\n                \n            \n\n            \n                \n                    Defined in src/receipt/receipt.controller.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n            \n                \nsearch(query: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Search receipt'})@ApiResponse({status: 200, type: Receipt})@Get('/search')\n                \n            \n\n            \n                \n                    Defined in src/receipt/receipt.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Query,\n  Req,\n  Res,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { CreateReceiptDto } from './dto/create_receipt.dto';\nimport { ReceiptService } from './receipt.service';\nimport { FileFieldsInterceptor, FileInterceptor } from '@nestjs/platform-express';\nimport { ObjectId } from 'mongoose';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport * as jwtGuard from './../auth/guards/jwt.guard';\nimport { AuthService } from './../auth/auth.service';\nimport { TagsDto } from './dto/tags.dto';\nimport { Receipt } from './schemas/receipt.schema';\nimport { Roles } from '../auth/guards/roles-auth.decorator';\n\n@ApiTags('Receipt')\n@Controller('/receipt')\nexport default class ReceiptController {\n  constructor(\n    private receiptService: ReceiptService,\n    private authService: AuthService,\n  ) {}\n  @Post('')\n  @ApiOperation({summary:'Add receipt'})\n  @ApiResponse({status: 200, type: Receipt })\n  @UseGuards(jwtGuard.Auth)\n  @UseInterceptors(FileInterceptor('recfile'))\n  // [\n      // {name:'recfile',maxCount: 1}\n      // ]/\n      \n      create(@Req() req, @Body() dto: CreateReceiptDto, @UploadedFile() recfile ) {\n        // const {recfile} = files\n        return this.receiptService.create(req.user.email, dto, recfile);\n      }\n      \n      @Post('users')\n      @ApiOperation({summary:'Add receipt users'})\n      @ApiResponse({status: 200, type: Receipt })\n      @UseGuards(jwtGuard.Auth)\n      @Roles('Shop')\n      @UseInterceptors(FileInterceptor(\n    // [\n      // {name:'recfile',maxCount: 1}\n      // ]\n      'recfile'\n      ))\n\n  addreceiptusers(@Req() req, @Body() dto: CreateReceiptDto, @UploadedFile() recfile ) {\n    // const {recfile} = files\n    return this.receiptService.addreceiptusers(dto, recfile);\n  }\n  \n  @ApiOperation({summary:'Get all users receipt'})\n  @ApiResponse({status: 200, type: Receipt })\n  @Get()\n  @UseGuards(jwtGuard.Auth)\n  async getAll(\n    @Query('count') count: number,\n    @Query('offset') offset: number,\n    @Req() req,\n    // @Res() res,\n    ) {\n      // const token = req.token;\n      const receipt = await this.receiptService.getAll(req.user);\n      return receipt;\n    }\n    @ApiOperation({summary:'Search receipt'})\n    @ApiResponse({status: 200, type: Receipt })\n    @Get('/search')\n    search(@Query('query') query: string) {\n      return this.receiptService.searh(query);\n    }\n    @ApiOperation({summary:'Get receipt'})\n    @ApiResponse({status: 200, type: Receipt })\n    @Get(':id')\n    @UseGuards(jwtGuard.Auth)\n    getOne(@Param('id') id: ObjectId) {\n      return this.receiptService.getOne(id);\n    }\n  @ApiOperation({summary:'Delete receipt'})\n  @ApiResponse({status: 200, type: Receipt })\n  @Delete(':id')\n  @UseGuards(jwtGuard.Auth)\n  delete(@Param('id') id: ObjectId) {\n    return this.receiptService.delete(id);\n  }\n  // @Post('/tags')\n  // // @UseGuards(jwtGuard.Auth)\n  // createTags(@Req() req, @Body() dto: TagsDto) {\n  //   console.log(dto.receptid)\n  //   return this.receiptService.createTag(dto);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReceiptModule.html":{"url":"modules/ReceiptModule.html","title":"module - ReceiptModule","body":"\n                   \n\n\n\n\n    Modules\n    ReceiptModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ReceiptModule\n\n\n\ncluster_ReceiptModule_providers\n\n\n\n\nFileService\n\nFileService\n\n\n\nReceiptModule\n\nReceiptModule\n\nReceiptModule -->\n\nFileService->ReceiptModule\n\n\n\n\n\nReceiptService\n\nReceiptService\n\nReceiptModule -->\n\nReceiptService->ReceiptModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/receipt/receipt.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FileService\n                        \n                        \n                            ReceiptService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ReceiptController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport ReceiptController from \"./receipt.controller\";\nimport { ReceiptService } from \"./receipt.service\";\n// import { FileService } from \"../file/file.service\";\nimport { Receipt,  ReceiptSchema } from './schemas/receipt.schema';\nimport { Tags, TagsSchema } from \"./schemas/tags.schema\";\nimport { JwtService } from '@nestjs/jwt';\nimport { UserModule } from './../user/user.module';\nimport { AuthModule } from \"../auth/auth.module\";\nimport { FileService } from \"../file/file.service\";\nimport { User, UserSchema } from \"../user/schemas/user.schema\";\n  \n@Module({\n    imports: [\n    forwardRef(()=>UserModule),\n    forwardRef(()=>AuthModule),\n\n    MongooseModule.forFeature([{name: Receipt.name, schema:ReceiptSchema}]),\n    MongooseModule.forFeature([{name: Tags.name, schema:TagsSchema}]),\n    MongooseModule.forFeature([{name: User.name, schema:UserSchema}]),\n    \n    ],\n    controllers:[ReceiptController],\n    providers:[ReceiptService, FileService] \n})\nexport class ReceiptModule{}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReceiptService.html":{"url":"injectables/ReceiptService.html","title":"injectable - ReceiptService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReceiptService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/receipt/receipt.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addreceiptusers\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createTag\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getOne\n                            \n                            \n                                    Async\n                                searh\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(receiptModel: Model, tagModel: Model, userModel: Model, fileServise: FileService, UserServise: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/receipt/receipt.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        receiptModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tagModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileServise\n                                                  \n                                                        \n                                                                        FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserServise\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addreceiptusers\n                        \n                    \n                \n            \n            \n                \n                    \n                    addreceiptusers(dto: CreateReceiptDto, recfile)\n                \n            \n\n\n            \n                \n                    Defined in src/receipt/receipt.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateReceiptDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    recfile\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(email: string, dto: CreateReceiptDto, recfile: any)\n                \n            \n\n\n            \n                \n                    Defined in src/receipt/receipt.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateReceiptDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    recfile\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createTag\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTag(dto: TagsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/receipt/receipt.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                TagsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in src/receipt/receipt.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(user: string)\n                \n            \n\n\n            \n                \n                    Defined in src/receipt/receipt.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOne(id: ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in src/receipt/receipt.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        searh\n                        \n                    \n                \n            \n            \n                \n                    \n                    searh(query: string)\n                \n            \n\n\n            \n                \n                    Defined in src/receipt/receipt.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model, ObjectId, Types } from \"mongoose\";\nimport { FileService, FileType} from \"../file/file.service\";\nimport { User, UserDocument } from \"../user/schemas/user.schema\";\n// import { FileService, FileType } from \"../file/file.service\";\nimport { CreateReceiptDto } from \"./dto/create_receipt.dto\";\nimport { Receipt, ReceptDocument } from \"./schemas/receipt.schema\";\n// import { Tag, TagDocument } from \"./schemas/tag.schema\";\nimport { UserService } from './../user/user.service';\nimport { Tags, TagsDocument } from \"./schemas/tags.schema\";\nimport { TagsDto } from \"./dto/tags.dto\";\n// import { Tags, TagsDocument } from \"../tags/tags.schema\";\n\n@Injectable()\nexport class ReceiptService{\n        \n  constructor(@InjectModel(Receipt.name) private receiptModel: Model,\n              @InjectModel(Tags.name) private tagModel:   Model, \n              @InjectModel(User.name) private userModel:   Model, \n              // @InjectModel(User.name) private UserModel:   Model, \n              private fileServise: FileService, \n              private UserServise: UserService, \n  ) {}\n    \n    async create(email:string, dto: CreateReceiptDto, recfile:any):Promise {\n      const user = await this.UserServise.findByEmail(email)  \n      const Uplfile = await this.fileServise.createFile(recfile)\n      console.log(Uplfile)\n      const recepts = await this.receiptModel.create({...dto, recfile:Uplfile})\n      await recepts.$set('user', user); \n      user.receipt.push(recepts)\n      recepts.save();\n      user.save();\n      \n      return recepts\n    }\n\n    async getAll( user:string): Promise{\n      const receipt= await this.receiptModel.find({user})\n      return receipt;\n    }\n\n\n    async getOne(id: ObjectId): Promise{\n      const receips= await this.receiptModel.findById(id);\n      return receips; \n    }\n\n    async delete(id: ObjectId): Promise{\n      const receips = await this.receiptModel.findByIdAndDelete(id)        \n      return receips._id;\n    }\n    async searh(query:string): Promise{\n      const receip = await this.receiptModel.find({\n         name: {$regax: new RegExp(query, 'i')} \n      })\n      return receip    }\n    \n    async createTag( dto:TagsDto){\n        const receip = await this.receiptModel.findById(dto)\n        console.log(receip,\"in\")\n        \n        // const receip = await this.receiptModel.findById(id)\n        const tags = await this.tagModel.create({...dto})\n        // await tags.$set('receiptid',[receip])\n        // receip.tags.push(tags.id)\n        // receip.save();\n        tags.save();\n        console.log(tags)\n        return tags\n      }\n    async addreceiptusers(dto: CreateReceiptDto, recfile){\n      const user =  await this.UserServise.findByEmail(dto.UsersEmail)\n      console.log(user.email)\n      if(user.email == dto.UsersEmail){\n          const sendreceipt = await this.create(dto.UsersEmail, dto ,recfile)\n          return 'Send OK'  \n          // } else{\n            // }\n      }else{\n        throw new HttpException('User not found', HttpStatus.INTERNAL_SERVER_ERROR)\n      }\n      }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/schema/role.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                user\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'users is', description: 'Description role'})@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/schema/role.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'usersId', description: 'Which user this role belongs to'})@Prop({type: undefined, ref: 'user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/schema/role.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'users', description: 'Name role'})@Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/schema/role.schema.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport mongoose, { Document} from \"mongoose\";\nimport { User } from '../../user/schemas/user.schema';\n\nexport type RoleDocument = Role & Document;\n\n@Schema()\nexport class Role{\n\t\n\t@ApiProperty({example: 'users', description: 'Name role'})\n\t@Prop({required: true, unique: true})\n\tvalue: string; \n\t\n\t\n\t@ApiProperty({example: 'users is', description: 'Description role'})\n\t@Prop({required: true})\n\tdescription: string;\n\t\n\t@ApiProperty({example: 'usersId', description: 'Which user this role belongs to'})\n\t@Prop({type: mongoose.Schema.Types.Array, ref: 'user'})\n\tuser: User;\n\n}\nexport const RoleSchema = SchemaFactory.createForClass(Role);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoleController.html":{"url":"controllers/RoleController.html","title":"controller - RoleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/role.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                getAllRole\n                            \n                            \n                                getByValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Add news role'})@ApiResponse({status: 201, type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/role/role.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllRole\n                        \n                    \n                \n            \n            \n                \ngetAllRole()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all role'})@ApiResponse({status: 200, type: Role})@Get()\n                \n            \n\n            \n                \n                    Defined in src/role/role.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByValue\n                        \n                    \n                \n            \n            \n                \ngetByValue(value: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:value')@ApiOperation({summary: 'Get parametr role'})@ApiResponse({status: 200, type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/role/role.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post } from '@nestjs/common';\nimport { RoleService } from './role.service';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { Role } from './schema/role.schema';\n@ApiTags('Role')\n@Controller('/roles')\nexport class RoleController {\n\n\tconstructor(private roleService:RoleService){}\n\n\t@Post()\n\t@ApiOperation({summary:'Add news role'})\n\t@ApiResponse({status: 201, type: [Role]  })\n\tcreate(@Body() dto: CreateRoleDto){\n\t\treturn this.roleService.createRole(dto)\n\t}\n\t\n\t@Get('/:value')\n\t@ApiOperation({summary:'Get parametr role'})\n\t@ApiResponse({status: 200, type: [Role]  })\n\tgetByValue(@Param('value') value: string){\n\t\treturn this.roleService.getRoleByValue(value)\n\t}\n\t@ApiOperation({summary:'Get all role'})\n\t@ApiResponse({status: 200, type: Role})\n\t@Get()\n\tgetAllRole(){\n\t\treturn this.roleService.getAllRole()\n\t}\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleModule.html":{"url":"modules/RoleModule.html","title":"module - RoleModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_RoleModule_exports\n\n\n\n\nRoleService \n\nRoleService \n\n\n\nRoleModule\n\nRoleModule\n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/role/role.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RoleController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RoleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RoleService } from './role.service';\nimport { RoleController } from './role.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { RoleSchema } from './schema/role.schema';\nimport { UserSchema } from '../user/schemas/user.schema';\nimport { UserModule } from './../user/user.module';\n\n@Module({\n  imports:[\n  MongooseModule.forFeature([{name: 'Role', schema:RoleSchema}]),\n    MongooseModule.forFeature([{name: 'User', schema:UserSchema}]),\n    // UserModule\n  ],\n  providers: [RoleService],\n  controllers: [RoleController],\n  exports: [RoleService]\n})\nexport class RoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/role.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createRole\n                            \n                            \n                                    Async\n                                getAllRole\n                            \n                            \n                                    Async\n                                getRoleByValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepository: Model)\n                    \n                \n                        \n                            \n                                Defined in src/role/role.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    createRole(dto: CreateRoleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllRole()\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRoleByValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoleByValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Model } from 'mongoose';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { RoleDocument } from './schema/role.schema';\n@Injectable()\nexport class RoleService {\n\n\tconstructor(@InjectModel('Role') private roleRepository: Model){}\n\tasync getAllRole(){\n\t\tconst role = await this.roleRepository.find();\n\t\treturn role;\n\t}\n\tasync createRole(dto: CreateRoleDto){\n\t\tconst role = await this.roleRepository.create(dto)\n\t\treturn role\n\t}\n\tasync getRoleByValue(value: string){\n\t\tconst role = await this.roleRepository.findOne({value})\n\t\treturn role\n\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleUser.html":{"url":"classes/RoleUser.html","title":"class - RoleUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/schema/roleuser.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                roleId\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        roleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'role'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/schema/roleuser.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/schema/roleuser.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { Document} from \"mongoose\";\nimport { User } from '../../user/schemas/user.schema';\nimport { Role } from './role.schema';\n// import { User } from '@nextui-org/react';\n\nexport type RoleUserDocument = RoleUser & Document;\n\n@Schema()\nexport class RoleUser{\n\t\n\t\n\t@Prop({type: mongoose.Schema.Types.Array, ref: 'User'})\n\tuserId :User;\n\t\n\t\n\t@Prop({type: mongoose.Schema.Types.Array, ref: 'role'})\n\troleId: Role;\n\n\n}\nexport const RoleUserSchema = SchemaFactory.createForClass(RoleUser);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/roles.guard.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/roles.guard.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n    CanActivate,\n    ExecutionContext,\n    HttpException,\n    HttpStatus,\n    Injectable,\n    UnauthorizedException\n} from \"@nestjs/common\";\nimport {Observable} from \"rxjs\";\nimport {JwtService} from \"@nestjs/jwt\";\nimport {Reflector} from \"@nestjs/core\";\nimport {ROLES_KEY} from \"./roles-auth.decorator\";\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n    constructor(private jwtService: JwtService,\n                private reflector: Reflector) {\n    }\n\n    canActivate(context: ExecutionContext): boolean | Promise | Observable {\n        try {\n            const requiredRoles = this.reflector.getAllAndOverride(ROLES_KEY, [\n                context.getHandler(),\n                context.getClass(),\n            ])\n            if (!requiredRoles) {\n                return true;\n            }\n            const req = context.switchToHttp().getRequest();\n            const authHeader = req.headers.authorization;\n            const bearer = authHeader.split(' ')[0]\n            const token = authHeader.split(' ')[1]\n\n            if (bearer !== 'Bearer' || !token) {\n                throw new UnauthorizedException({message: 'Users not autorization'})\n            }\n\n            const user = this.jwtService.verify(token);\n            req.user = user;\n            return user.role.some(role => requiredRoles.includes(role.value));\n        } catch (e) {\n            console.log(e)\n            throw new HttpException( 'Not access', HttpStatus.FORBIDDEN)\n        }\n    }\n\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tags.html":{"url":"classes/Tags.html","title":"class - Tags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/receipt/schemas/tags.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                receptid\n                            \n                            \n                                tagsname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/schemas/tags.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        receptid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Receipt\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Receipt'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/schemas/tags.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tagsname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/schemas/tags.schema.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document} from \"mongoose\";\nimport * as mongoose from \"mongoose\";\nimport { Timestamp } from 'typeorm';\nimport { Receipt } from './receipt.schema';\n// import { Receipt } from '../receipt/schemas/receipt.schema';\n\n\nexport type TagsDocument = Tags & mongoose.Document;\n\n@Schema()\nexport class Tags {\n\t\n\t\n\t@Prop()\n\ttagsname: string;\n\n\t@Prop({required: false})\n\tdescription: string;\n\n\t@Prop({type: mongoose.Schema.Types.ObjectId, ref:'Receipt'})\n\treceptid: Receipt;\n\t\n\t\n\n}\nexport const TagsSchema = SchemaFactory.createForClass(Tags);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagsDto.html":{"url":"classes/TagsDto.html","title":"class - TagsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/receipt/dto/tags.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                receptid\n                            \n                            \n                                    Readonly\n                                tagsname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/receipt/dto/tags.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        receptid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                    \n                        \n                                Defined in src/receipt/dto/tags.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        tagsname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/receipt/dto/tags.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectId } from 'mongoose';\n\nexport class TagsDto{\n\treadonly tagsname: string;\n\treadonly description: string;\n\treadonly receptid: ObjectId\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatarPath\n                            \n                            \n                                city\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                phone\n                            \n                            \n                                receipt\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        avatarPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'users.icons.jpg', description: 'Users avatar'})@Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Rīga', description: 'City'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@gmail.com', description: 'Unique email'})@Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Types.ObjectId\n\n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Users', description: 'Users name'})@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1234567', description: 'Users password'})@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '+37129994512', description: 'Phone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        receipt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Receipt[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'receipt', description: 'All users receipt[]'})@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'role', description: 'Users role[]'})@Prop({type: undefined, ref: 'role'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document} from \"mongoose\";\nimport * as mongoose from \"mongoose\";\nimport { Role } from '../../role/schema/role.schema';\nimport { Timestamp } from 'typeorm';\nimport { Receipt } from '../../receipt/schemas/receipt.schema';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport type UserDocument = User & mongoose.Document;\n\n@Schema()\nexport class User {\n\t\n\tid: mongoose.Types.ObjectId;\n\t@ApiProperty({example: 'user@gmail.com', description: 'Unique email'})\n\t@Prop({required: true, unique: true})\n\temail: string;\n\t\n\t@ApiProperty({example: 'Users', description: 'Users name'})\n\t@Prop({required: true})\n\tname: string;\n\t\n\t@ApiProperty({example: '1234567', description: 'Users password'})\n\t@Prop({required: true})\n\tpassword: string;\n\t\n\t@ApiProperty({example: 'users.icons.jpg', description: 'Users avatar'})\n\t@Prop({required\n\t\t: false,})\n\tavatarPath: string;\n\t\n\t@ApiProperty({example: '+37129994512', description: 'Phone'})\n\tphone: string;\n\t@ApiProperty({example: 'Rīga', description: 'City'})\n\tcity: string;\n\t\n\t@ApiProperty({example: 'role', description: 'Users role[]'})\n\t@Prop({type: mongoose.Schema.Types.Array, ref: 'role'})\n\trole: Role[];\n\t\n\t@ApiProperty({example: 'receipt', description: 'All users receipt[]'})\n\t@Prop({type:[{ type: mongoose.Schema.Types.ObjectId, ref:'Receipt'}]})\n\treceipt: Receipt[];\n\t\n\t\n\n}\nexport const UserSchema = SchemaFactory.createForClass(User);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addroles\n                            \n                            \n                                delete\n                            \n                            \n                                getAllUser\n                            \n                            \n                                getUser\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addroles\n                        \n                    \n                \n            \n            \n                \naddroles(dto: AddRolleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/roles')@Roles('Admin')@ApiOperation({summary: 'Distribute roles'})@ApiResponse({status: 200})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AddRolleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/delete')@ApiOperation({summary: 'Delete users'})@ApiResponse({status: 200, type: User})@UseGuards(jwtGuard.Auth)\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUser\n                        \n                    \n                \n            \n            \n                \ngetAllUser()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all users'})@ApiResponse({status: 200, type: undefined})@Roles('Admin')@UseGuards(RolesGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('profil')@ApiOperation({summary: 'Get users date'})@ApiResponse({status: 200, type: User})@UseGuards(jwtGuard.Auth)\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(req, dto: NewsUserdto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('update')@ApiOperation({summary: 'Users update date'})@ApiResponse({status: 200, type: undefined})@UseGuards(jwtGuard.Auth)@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                NewsUserdto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, Param, Post, Req, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserDetails } from './user-details.interface';\nimport { ObjectId } from 'mongoose';\nimport * as jwtGuard from './../auth/guards/jwt.guard';\nimport { Auth } from '../auth/guards/jwt.guard';\n// import {Userdto} from './dto/Createuser.dto'\nimport { NewsUserdto } from './dto/newsuser.dto';\nimport { Role } from '../role/schema/role.schema';\nimport { Roles } from '../auth/guards/roles-auth.decorator';\nimport { RolesGuard } from './../auth/guards/roles.guard';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { User } from './schemas/user.schema';\nimport { AddRolleDto } from './dto/add-role.dto';\n\n@ApiTags('Users')\n@Controller('/user')\nexport class UserController {\n\n\tconstructor(private  usersService: UserService){}\n\t@Get('profil')\n\t@ApiOperation({summary: 'Get users date'})\n\t@ApiResponse({status: 200, type: User})\n    @UseGuards(jwtGuard.Auth)\t\n\tgetUser(@Req() req){\n\t\tconst users = this.usersService.findByIdd(req.user.id)\n\t\t// console.log(users)\n\t\treturn users\n\t}\n\t\n\t@ApiOperation({summary: 'Get all users'})\n\t@ApiResponse({status: 200, type:[User]})\n\t@Roles('Admin')\n\t@UseGuards(RolesGuard)\n\t@Get()\n\tgetAllUser(){\n\t\treturn this.usersService.getAllUser();\n\t}\n\t@Post('/roles')\n\t@Roles('Admin')\n\t@ApiOperation({summary: 'Distribute roles'})\n\t@ApiResponse({status: 200,})\n\t// @UseGuards(RolesGuard)\n\taddroles(@Body() dto: AddRolleDto){\n\t\treturn this.usersService.Addroles(dto);\n\t}\n\t\n\t@Delete('/delete')\n\t@ApiOperation({summary: 'Delete users'})\n\t@ApiResponse({status: 200, type:User})\n\t@UseGuards(jwtGuard.Auth)\n\tdelete(@Req() req) {\n\t\treturn this.usersService.delete(req.user.id);\n    }\n\t\n\t@Post('update')\n\t@ApiOperation({summary: 'Users update date'})\n\t@ApiResponse({status: 200, type:[User]})\n\t@UseGuards(jwtGuard.Auth)\n\t@HttpCode(200)\n\t// @UseInterceptors(FileInterceptor('aatar'))\n\t// async updateUser(@UploadedFile() files, @Param('id') id:string, @Body() dto: UserDto){\n\tasync updateUser(@Req() req, @Body() dto: NewsUserdto){\n\t  // const {avatar} = files\n\t  return this.usersService.updateProfile(req.user.id,dto)\n\t}\n  \n} \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserDetails.html":{"url":"interfaces/UserDetails.html","title":"interface - UserDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user-details.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserDetails {\n\tid: string;\n\tname: string;\n\temail: string;\n\t// roles: string;\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\n\nRoleModule\n\nRoleModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nRoleModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RoleModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { RoleSchema } from './../role/schema/role.schema';\nimport { User, UserSchema } from './schemas/user.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { RoleModule } from './../role/role.module';\nimport { AuthModule } from './../auth/auth.module';\nimport { ReceiptSchema, Receipt } from '../receipt/schemas/receipt.schema';\n@Module({\n  imports:[\n  MongooseModule.forFeature([{name: 'User', schema:UserSchema},\n                            {name: 'Role', schema:RoleSchema},\n                            {name: 'Recept', schema:ReceiptSchema}]),\n  // AuthModule,\n  RoleModule,\n  forwardRef(()=>AuthModule)\n  ],\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [\n          UserService,\n        ],\n\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _getUserDetails\n                            \n                            \n                                    Async\n                                Addroles\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByIdd\n                            \n                            \n                                    Async\n                                getAllUser\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, receptModel: Model, roleService: RoleService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        receptModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        _getUserDetails\n                        \n                    \n                \n            \n            \n                \n_getUserDetails(user: UserDocument)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserDetails\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        Addroles\n                        \n                    \n                \n            \n            \n                \n                    \n                    Addroles(dto: AddRolleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AddRolleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userDto: NewsUserdto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                NewsUserdto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByIdd\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdd(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUser()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfile(id: string, dto: NewsUserdto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                NewsUserdto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, HttpException, HttpStatus, Inject, Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport * as bcrypt from 'bcrypt';\nimport { Model } from 'mongoose';\nimport { UserDocument } from './schemas/user.schema';\nimport { UserDetails } from './user-details.interface';\nimport { RoleService } from './../role/role.service';\nimport { Delete } from '@nestjs/common';\nimport { ObjectId } from 'mongoose';\nimport { NewsUserdto } from './dto/newsuser.dto';\n// import {UserDto} from './dto/Createuser.dto'\nimport { AddRolleDto } from './dto/add-role.dto';\nimport { AuthService } from '../auth/auth.service';\nimport { ReceptDocument } from '../receipt/schemas/receipt.schema';\n// import { users } from './../../../client/server/data/users';\n\n\n@Injectable()\nexport class UserService {\n\tconstructor(@InjectModel('User') private readonly  userModel: Model,\n\t\t\t\t@InjectModel('Recept') private readonly  receptModel: Model,\n\t\t\t\tprivate roleService:  RoleService,\n\t// private authservice: AuthService\n\t// private roleService:  RoleService\n\t){}\n\n\tasync create(userDto: NewsUserdto):\n\tPromise{\n\t\tconst role = await this.roleService.getRoleByValue(\"User\");\n\t\tconst user= await this.userModel.create(userDto);\n\t\tawait user.$set('role', [role.id]);\n\t\tuser.role=[role];\n\t\treturn user.save()\n\t}\n\n\tasync getAllUser(){\n\t\tconst user = await this.userModel.find({include:{all:true}});\n\t\treturn user;\n\t}\n\t\n\tasync getUser(id: string){\n\t\tconst user = await this.userModel.findById(id)\n\t\treturn user;\n\t}\n\n\tasync delete(id: string): Promise{\n\t\tconst user = await this.userModel.findByIdAndDelete(id)\n\t\treturn user._id\n\t}\n\t\n\t_getUserDetails(user: UserDocument):UserDetails{\n\t\t\treturn{\n\t\t\t\tid: user.id,\n\t\t\t\tname: user.name,\n\t\t\t\temail: user.email,\n\t\t};\n\t}\n\t\n\tasync findByEmail(email: string): Promise{\n\t\treturn this.userModel.findOne({email});\n\t}\n\tasync findByIdd(id: string): Promise{\n\t\treturn await this.userModel.findById(id).populate('receipt');\n\t}\n\n\n\tasync findById(id: string): Promise{\n\t\tconst user = await this.userModel.findById(id).exec();\n\t\tif(!user) return null;  \n\t\treturn this._getUserDetails(user)\n\t}\n\n\tasync updateProfile(id:string, dto: NewsUserdto){\n\t\tconst users = await this.userModel.findById(id);\n\t\tconst isSamwUser = await this.findByEmail(dto.email)  \n\t\tif (isSamwUser&& id !== isSamwUser.id) throw new BadRequestException('email is busy')\n\n\t\t// if(users.password !== dto.password){\n\t\t// \tusers.password = await bcrypt.compare(\n\t\t// \t\tdto.password,\n\t\t// \t\tusers.password,\n\t\t// \t\t);\n\t\t// } \n\n\t\tusers.email = dto.email\n\t\tusers.name = dto.name\n\t\t \n\t\treturn users \n\n\t\t// const hashedPassword = await this.authservice.hashedPassword(password: dto)\t\n\t}\n\n\tasync Addroles(dto:AddRolleDto){\n\t\tconst user = await this.userModel.findById(dto.Userid)\n\t\tconsole.log(user)\n\t\tconst role = await this.roleService.getRoleByValue(dto.value)\n\t\tconsole.log()\n\t\tif (role && user){\n\t\t\tawait user.$set('role', role.id);\n\t\t\tuser.role=[role];\n\t\t\tuser.save()\n\t\t\treturn user\n\t\t}else{\n\t\t\tthrow new HttpException('Users or roles not found', HttpStatus.NOT_FOUND);\n\t\t}\t\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt.guard.ts\n            \n            guard\n            Auth\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/roles-auth.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/roles-auth.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/Mongoose.ConfigService.ts\n            \n            injectable\n            MongooseConfigService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/file/file.service.ts\n            \n            injectable\n            FileService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            start\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/receipt/dto/create_receipt.dto.ts\n            \n            class\n            CreateReceiptDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/receipt/dto/tags.dto.ts\n            \n            class\n            TagsDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/receipt/receipt.controller.ts\n            \n            controller\n            ReceiptController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/receipt/receipt.service.ts\n            \n            injectable\n            ReceiptService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/receipt/schemas/receipt.schema.ts\n            \n            class\n            Receipt\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/receipt/schemas/receipt.schema.ts\n            \n            variable\n            ReceiptSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/receipt/schemas/tags.schema.ts\n            \n            class\n            Tags\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/receipt/schemas/tags.schema.ts\n            \n            variable\n            TagsSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/role/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/role/role.controller.ts\n            \n            controller\n            RoleController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/role/role.service.ts\n            \n            injectable\n            RoleService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/role/schema/role.schema.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/role/schema/role.schema.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/role/schema/roleuser.schema.ts\n            \n            class\n            RoleUser\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/role/schema/roleuser.schema.ts\n            \n            variable\n            RoleUserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/Createuser.dto.ts\n            \n            class\n            LoginUserdto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/add-role.dto.ts\n            \n            class\n            AddRolleDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/newsuser.dto.ts\n            \n            class\n            NewsUserdto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/user/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user-details.interface.ts\n            \n            interface\n            UserDetails\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/user/users.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/mongoose : ^9.2.0\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/serve-static : ^3.0.0\n        \n            @nestjs/swagger : ^6.1.2\n        \n            atob : ^2.1.2\n        \n            bcrypt : ^5.1.0\n        \n            buffer : ^6.0.3\n        \n            class-validator : ^0.13.2\n        \n            minimist : ^1.2.7\n        \n            mongoose : ^6.6.5\n        \n            multer : ^1.4.5-lts.1\n        \n            passport : ^0.6.0\n        \n            pcrypt : ^0.2.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-spec-to-pdf : ^1.1.0\n        \n            swagger-ui-dist : ^4.15.5\n        \n            typeorm : ^0.3.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FileType   (src/.../file.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/file/file.service.ts\n    \n        \n            \n                \n                    \n                        \n                        FileType\n                    \n                \n                        \n                            \n                                 RECEIPT\n                            \n                        \n                        \n                            \n                                Value : recfile\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReceiptModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_FileModule\n\n\n\ncluster_FileModule_providers\n\n\n\ncluster_ReceiptModule\n\n\n\ncluster_ReceiptModule_providers\n\n\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nFileModule\n\nFileModule\n\nAppModule -->\n\nFileModule->AppModule\n\n\n\n\n\nReceiptModule\n\nReceiptModule\n\nAppModule -->\n\nReceiptModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nRoleModule->UserModule\n\n\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nRoleService \n\nRoleService \n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nFileService\n\nFileService\n\nFileModule -->\n\nFileService->FileModule\n\n\n\nReceiptModule -->\n\nFileService->ReceiptModule\n\n\n\n\n\nReceiptService\n\nReceiptService\n\nReceiptModule -->\n\nReceiptService->ReceiptModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ReceptDocument   (src/.../receipt.schema.ts)\n                        \n                        \n                            RoleDocument   (src/.../role.schema.ts)\n                        \n                        \n                            RoleUserDocument   (src/.../roleuser.schema.ts)\n                        \n                        \n                            TagsDocument   (src/.../tags.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/receipt/schemas/receipt.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ReceptDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/role/schema/role.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/role/schema/roleuser.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RoleUserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/receipt/schemas/tags.schema.ts\n    \n    \n        \n            \n                \n                    \n                    TagsDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/user/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CurrentUser   (src/.../users.decorator.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            ReceiptSchema   (src/.../receipt.schema.ts)\n                        \n                        \n                            Roles   (src/.../roles-auth.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../roles-auth.decorator.ts)\n                        \n                        \n                            RoleSchema   (src/.../role.schema.ts)\n                        \n                        \n                            RoleUserSchema   (src/.../roleuser.schema.ts)\n                        \n                        \n                            start   (src/.../main.ts)\n                        \n                        \n                            TagsSchema   (src/.../tags.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/user/users.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: string, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user = request.user;\n\n    return data ? user[data] : user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/auth/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tsecret: 'secretKey',\n  }\n                    \n                \n\n\n        \n    \n\n    src/receipt/schemas/receipt.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ReceiptSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Receipt)\n                    \n                \n\n\n        \n    \n\n    src/auth/guards/roles-auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: string[]) => SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'role'\n                    \n                \n\n\n        \n    \n\n    src/role/schema/role.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    src/role/schema/roleuser.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleUserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(RoleUser)\n                    \n                \n\n\n        \n    \n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n    try {\n        const PORT = process.env.PORT ||3500;  // input porst\n        const app = await NestFactory.create(AppModule);\n        app.enableCors()        \n        // app.setGlobalPrefix('api');\n        // app.useGlobalPipes(new ValidationPipe());\n        const config = new DocumentBuilder()\n        .setTitle('Warranty card digitizing system')\n        .setDescription('Documentation API ')\n        .setVersion('1.0')\n        .build();\n      const document = SwaggerModule.createDocument(app, config);\n      SwaggerModule.setup('api/docs', app, document);\n    \n        await app.listen(PORT, () => console.log('server started on PORT - '+ PORT ))\n    } catch (e) {\n        console.log(e)\n    }\n}\n                    \n                \n\n\n        \n    \n\n    src/receipt/schemas/tags.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TagsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Tags)\n                    \n                \n\n\n        \n    \n\n    src/user/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
