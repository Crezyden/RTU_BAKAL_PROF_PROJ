var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddRolleDto.html",[0,0.058,1,2.068]],["body/classes/AddRolleDto.html",[0,0.069,1,3.184,2,1.471,3,0.326,4,0.288,5,0.288,6,4.889,7,3.048,8,0.408,9,1.647,10,3.309,11,4.889,12,2.969,13,0.692,14,0.025,15,1.369,16,1.647,17,2.899,18,4.433,19,2.189,20,1.466,21,2.317,22,6.095,23,1.792,24,0.816,25,3.465,26,1.883,27,3.465,28,0.366,29,1.949,30,1.287,31,0.326,32,0.019,33,0.019]],["title/modules/AppModule.html",[34,1.223,35,2.274]],["body/modules/AppModule.html",[0,0.057,3,0.271,4,0.239,5,0.239,14,0.026,28,0.594,31,0.271,32,0.017,33,0.017,34,1.663,35,4.494,36,1.502,37,2.048,38,2.873,39,2.873,40,3.139,41,3.713,42,3.713,43,3.404,44,2.908,45,2.379,46,1.744,47,1.744,48,3.397,49,2.813,50,0.712,51,2.269,52,1.067,53,3.397,54,2.527,55,2.063,56,3.397,57,2.269,58,2.873,59,4.632,60,3.397,61,2.873,62,3.446,63,2.269,64,3.397,65,3.094,66,3.397,67,4.632,68,3.397,69,3.397,70,3.397,71,3.397,72,3.397,73,3.397]],["title/guards/Auth.html",[74,2.533,75,1.896]],["body/guards/Auth.html",[0,0.056,3,0.263,4,0.232,5,0.232,8,0.328,13,0.599,14,0.026,20,1.092,24,0.707,28,0.524,31,0.362,32,0.017,33,0.017,50,0.951,75,2.89,76,2.454,77,2.79,78,1.525,79,4.728,80,1.569,81,2.79,82,4.047,83,3.299,84,1.63,85,0.951,86,1.426,87,3.839,88,4.16,89,3.299,90,2.79,91,1.108,92,3.839,93,2.159,94,4.389,95,1.168,96,2.454,97,3.299,98,2.454,99,2.454,100,2.003,101,2.454,102,1.667,103,3.299,104,2.454,105,2.003,106,2.203,107,2.79,108,2.203,109,2.79,110,2.79,111,4.389,112,3.839,113,2.454,114,3.467,115,2.203,116,2.528,117,2.159,118,3.839,119,2.79,120,2.79,121,1.037,122,2.79,123,2.203,124,2.203]],["title/controllers/AuthController.html",[125,1.505,126,2.274]],["body/controllers/AuthController.html",[0,0.06,3,0.285,4,0.251,5,0.251,8,0.355,13,0.632,14,0.026,16,1.506,20,1.45,24,0.746,28,0.539,30,1.122,31,0.285,32,0.018,33,0.018,50,0.748,75,1.989,78,1.609,84,1.721,85,1.004,86,1.506,91,1.609,93,2.279,105,2.169,121,1.506,125,1.579,126,3.2,127,1.579,128,3.02,129,2.386,130,4.052,131,4.052,132,3.02,133,3.509,134,3.612,135,5.779,136,3.572,137,3.572,138,3.2,139,3.572,140,2.967,141,4.792,142,4.792,143,3.572,144,2.386,145,3.02,146,1.989,147,2.386,148,2.386,149,1.989,150,3.02,151,3.02,152,2.39,153,2.657,154,3.572,155,3.572,156,3.572,157,3.572,158,3.572,159,3.572,160,3.572,161,3.572,162,3.572]],["title/modules/AuthModule.html",[34,1.223,40,1.749]],["body/modules/AuthModule.html",[0,0.062,3,0.291,4,0.257,5,0.257,14,0.026,28,0.579,31,0.291,32,0.018,33,0.018,34,1.747,36,1.616,37,2.151,40,3.366,44,2.315,45,2.499,46,1.877,47,1.877,49,2.219,50,0.766,57,2.441,61,4.115,62,2.719,63,2.441,75,2.709,100,2.219,126,3.654,127,2.151,152,2.951,153,2.719,163,3.091,164,3.091,165,3.091,166,3.793,167,3.655,168,2.955,169,3.25,170,2.719,171,3.655,172,3.655,173,3.655,174,3.655,175,3.091,176,3.655,177,3.655,178,3.655,179,3.655,180,3.655,181,3.655]],["title/injectables/AuthService.html",[95,0.876,152,1.505]],["body/injectables/AuthService.html",[0,0.037,3,0.176,4,0.155,5,0.155,8,0.22,10,2.118,13,0.695,14,0.026,15,1.121,20,1.449,23,0.997,24,0.82,26,1.481,28,0.506,31,0.176,32,0.013,33,0.013,50,0.463,78,1.139,80,1.962,82,3.662,84,1.891,85,1.103,86,1.655,91,1.676,93,2.374,95,0.873,96,2.523,100,1.342,102,1.596,114,2.755,116,1.888,117,1.613,121,1.655,130,2.867,131,3.489,132,2.867,133,3.329,138,3.09,140,1.135,146,1.231,150,1.869,151,1.869,152,1.499,182,1.051,183,1.869,184,2.814,185,3.391,186,4.453,187,2.778,188,3.391,189,2.211,190,2.505,191,2.211,192,3.391,193,2.211,194,2.297,195,3.391,196,2.211,197,3.09,198,2.211,199,3.391,200,2.211,201,3.391,202,3.391,203,3.391,204,2.211,205,2.059,206,2.523,207,1.869,208,1.231,209,2.211,210,1.644,211,1.135,212,1.476,213,2.211,214,3.391,215,2.932,216,3.391,217,2.211,218,2.211,219,2.211,220,2.211,221,2.211,222,2.211,223,2.211,224,2.211,225,2.211,226,4.126,227,2.211,228,2.211,229,2.211,230,2.211,231,2.211,232,1.869,233,2.211,234,2.211,235,2.211,236,2.211,237,1.613,238,1.869,239,2.211,240,1.869,241,2.211,242,2.211,243,2.211,244,2.211,245,2.211]],["title/classes/CreateReceiptDto.html",[0,0.058,246,2.068]],["body/classes/CreateReceiptDto.html",[0,0.054,2,1.148,3,0.255,4,0.225,5,0.225,8,0.318,9,1.396,10,3.523,14,0.025,16,1.934,17,3.173,19,2.395,24,0.958,26,1.595,28,0.286,29,1.521,30,1.005,31,0.255,32,0.016,33,0.016,85,1.215,237,2.114,246,2.698,247,2.704,248,4.903,249,4.318,250,2.843,251,4.318,252,5.106,253,4.318,254,3.757,255,3.757,256,3.757,257,3.198,258,3.757,259,3.198,260,3.757,261,4.105,262,4.666,263,3.198,264,3.757,265,2.282,266,3.198,267,3.757,268,3.757,269,3.198,270,4.443,271,3.198,272,3.757,273,3.757,274,3.757,275,3.198]],["title/classes/CreateRoleDto.html",[0,0.058,276,2.068]],["body/classes/CreateRoleDto.html",[0,0.07,2,1.496,3,0.332,4,0.293,5,0.293,7,3.098,8,0.414,9,1.665,10,3.323,12,2.992,13,0.699,14,0.025,15,1.378,16,1.665,17,2.917,19,2.413,23,1.803,24,0.825,25,3.522,26,2.202,27,3.522,28,0.373,29,1.981,30,1.309,31,0.332,32,0.02,33,0.02,85,1.11,86,1.665,276,3.217,277,4.927]],["title/modules/FileModule.html",[34,1.223,41,2.068]],["body/modules/FileModule.html",[0,0.077,3,0.363,4,0.32,5,0.32,14,0.025,28,0.501,31,0.363,32,0.021,33,0.021,34,2.013,36,2.015,37,2.478,41,4.02,45,2.879,46,2.341,47,2.341,50,0.955,168,3.404,169,3.045,278,3.855,279,3.855,280,3.444,281,4.559,282,4.559]],["title/injectables/FileService.html",[95,0.876,280,1.749]],["body/injectables/FileService.html",[0,0.056,3,0.266,4,0.235,5,0.395,8,0.333,13,0.604,14,0.026,15,1.174,24,0.713,28,0.503,31,0.365,32,0.017,33,0.017,50,0.7,78,1.538,84,1.645,85,0.96,86,1.44,91,1.538,93,2.179,95,1.179,102,1.547,108,2.233,116,1.861,117,1.59,121,1.44,123,2.233,124,2.233,146,1.861,182,1.59,184,2.31,205,2.03,250,1.861,280,2.353,283,2.487,284,4.581,285,4.581,286,5.227,287,3.343,288,4.581,289,3.343,290,6.23,291,3.343,292,4.581,293,4.581,294,4.581,295,3.343,296,2.487,297,1.285,298,3.343,299,4.581,300,3.343,301,4.581,302,3.343,303,3.343,304,3.343,305,2.827,306,3.343,307,3.343,308,3.343,309,2.233,310,4.581,311,4.581,312,3.343,313,3.343,314,2.827]],["title/injectables/JwtStrategy.html",[95,0.876,166,2.068]],["body/injectables/JwtStrategy.html",[0,0.063,3,0.297,4,0.262,5,0.262,8,0.371,13,0.651,14,0.026,24,0.768,28,0.547,31,0.297,32,0.018,33,0.018,50,0.782,62,4.673,63,2.492,78,1.657,80,2.347,84,1.771,85,1.034,86,1.55,91,1.253,93,2.347,95,1.27,98,2.776,102,1.027,121,1.55,152,2.832,153,2.776,166,2.996,182,1.775,184,2.443,238,4.673,315,3.155,316,4.933,317,3.731,318,3.731,319,3.731,320,3.731,321,3.155,322,3.731,323,3.731,324,3.731,325,3.155,326,3.731,327,3.731,328,3.731,329,3.731,330,3.731,331,3.731,332,2.492,333,3.731,334,3.731,335,3.731,336,3.731,337,3.731,338,4.171]],["title/classes/LoginUserdto.html",[0,0.058,133,2.068]],["body/classes/LoginUserdto.html",[0,0.072,2,1.531,3,0.34,4,0.3,5,0.3,8,0.424,9,1.69,10,3.343,13,0.709,14,0.025,15,1.389,16,1.69,17,2.942,19,2.221,24,0.837,28,0.381,29,2.028,30,1.34,31,0.34,32,0.02,33,0.02,133,3.266,197,4.259,237,3.033,339,3.606,340,4,341,3.592,342,4.265,343,4.547,344,4.265]],["title/injectables/MongooseConfigService.html",[65,2.274,95,0.876]],["body/injectables/MongooseConfigService.html",[0,0.076,3,0.357,4,0.314,5,0.314,8,0.446,14,0.026,24,0.697,28,0.539,31,0.357,32,0.021,33,0.021,50,0.938,52,1.407,65,3.703,78,1.862,91,1.504,95,1.427,104,3.331,121,1.407,182,2.13,345,3.786,346,6.294,347,4.478,348,6.023,349,5.544,350,4.478,351,1.504,352,4.478,353,4.478,354,4.478,355,4.478]],["title/classes/NewsUserdto.html",[0,0.058,140,1.749]],["body/classes/NewsUserdto.html",[0,0.06,2,1.268,3,0.281,4,0.248,5,0.248,8,0.351,9,1.494,13,0.792,14,0.025,15,1.478,16,1.886,17,3.13,19,2.363,24,0.934,26,2.065,28,0.316,29,1.68,30,1.11,31,0.281,32,0.018,33,0.018,85,1.258,86,1.943,140,2.442,149,1.966,197,4.01,237,2.856,340,3.537,341,3.176,343,4.021,356,2.986,357,5.077,358,5.077,359,4.021,360,3.531,361,3.531,362,3.531,363,3.531,364,4.021,365,3.531,366,3.531]],["title/classes/Receipt.html",[0,0.058,297,1.309]],["body/classes/Receipt.html",[0,0.043,2,0.92,3,0.204,4,0.18,5,0.18,8,0.255,9,1.191,13,0.823,14,0.026,15,1.381,16,1.899,17,3.105,19,2.344,20,1.386,21,2.204,24,0.941,26,1.62,28,0.476,29,1.219,30,0.805,31,0.359,32,0.014,33,0.014,52,0.805,85,1.115,102,0.705,211,1.316,248,4.216,249,3.815,250,2.512,251,3.815,253,3.815,254,3.206,255,3.206,256,2.168,258,3.206,260,3.206,261,3.709,262,3.815,264,3.206,265,1.947,267,3.206,268,2.168,272,3.206,273,3.206,274,2.168,297,1.734,332,4.106,351,1.273,367,1.712,368,3.101,369,1.907,370,3.791,371,2.563,372,2.563,373,2.563,374,3.206,375,2.563,376,2.563,377,2.563,378,2.563,379,2.563,380,2.563,381,2.563,382,2.563,383,2.74,384,2.111,385,2.563,386,2.563,387,1.557,388,2.563,389,2.563,390,2.563,391,2.302,392,2.302,393,1.557,394,2.563,395,1.712,396,1.907,397,2.563,398,3.554,399,1.907,400,2.563,401,1.712,402,2.563,403,1.557,404,2.168]],["title/controllers/ReceiptController.html",[125,1.505,405,2.274]],["body/controllers/ReceiptController.html",[0,0.032,3,0.151,4,0.133,5,0.133,8,0.189,13,0.83,14,0.026,15,0.841,16,1.553,21,1.883,24,0.77,26,1.344,28,0.518,30,0.597,31,0.151,32,0.011,33,0.011,50,0.398,78,1.011,80,0.903,84,1.775,85,1.036,86,1.553,91,1.66,99,1.413,102,1.172,106,3.788,114,1.268,115,2.012,121,1.628,122,1.606,125,0.839,127,0.839,129,1.268,134,2.846,144,2.846,147,2.012,148,1.268,149,1.057,152,1.655,184,1.655,187,1.677,194,1.057,212,1.268,215,1.057,246,3.146,250,3.222,297,2.397,338,3.165,351,0.638,374,4.181,405,2.012,406,1.606,407,2.547,408,2.012,409,2.846,410,3.165,411,2.547,412,3.743,413,1.899,414,2.992,415,1.899,416,2.547,417,1.606,418,4.38,419,1.899,420,1.899,421,1.899,422,1.899,423,4.646,424,1.899,425,1.899,426,1.413,427,2.885,428,1.899,429,1.899,430,1.899,431,3.743,432,1.899,433,1.899,434,3.012,435,1.606,436,1.899,437,1.899,438,1.899,439,1.899,440,1.899,441,3.165,442,3.743,443,1.899,444,1.606,445,2.084,446,1.606,447,1.899,448,1.899,449,1.606,450,1.606,451,1.413,452,1.606,453,1.606,454,1.606,455,1.829,456,1.606,457,1.413,458,0.903,459,1.606,460,1.413,461,1.899,462,1.899,463,1.606,464,2.547,465,3.678,466,4.181,467,1.899,468,3.012,469,1.899,470,2.547,471,1.899,472,1.899,473,1.899,474,1.899,475,1.899,476,1.899,477,2.547,478,1.899,479,1.899,480,1.899,481,1.899,482,1.899,483,1.899,484,1.899,485,1.899,486,1.899,487,1.899,488,1.899,489,1.899,490,1.899,491,1.899,492,1.899,493,1.899,494,1.899,495,1.899]],["title/modules/ReceiptModule.html",[34,1.223,42,2.068]],["body/modules/ReceiptModule.html",[0,0.061,3,0.287,4,0.253,5,0.253,14,0.026,20,0.867,28,0.6,31,0.287,32,0.018,33,0.018,34,1.73,36,1.592,37,2.13,40,1.85,42,3.92,44,1.714,45,2.475,46,1.85,47,1.85,49,2.188,50,0.755,51,2.406,52,1.132,54,2.68,57,2.406,82,2.406,100,2.188,127,1.592,168,2.188,170,2.68,175,3.046,211,1.85,280,3.262,297,1.384,368,2.006,403,2.188,405,3.219,445,3.365,446,3.046,457,2.68,496,3.046,497,3.046,498,3.602,499,3.602,500,4.075,501,2.406,502,3.046,503,2.006,504,3.046,505,4.04,506,3.602,507,3.046,508,3.602,509,3.602,510,3.602,511,2.68,512,3.602,513,3.602]],["title/injectables/ReceiptService.html",[95,0.876,445,1.896]],["body/injectables/ReceiptService.html",[0,0.032,3,0.152,4,0.134,5,0.134,8,0.19,13,0.71,14,0.026,15,1.113,20,1.12,21,1.336,24,0.838,28,0.535,31,0.152,32,0.011,33,0.011,50,0.4,52,0.599,78,1.015,80,0.907,84,1.933,85,1.162,86,1.692,91,1.743,93,2.637,95,0.778,102,1.622,116,1.062,117,1.438,121,1.631,146,1.062,182,0.907,184,2.837,187,2.758,190,2.032,194,1.683,205,1.158,207,1.613,211,0.98,215,3.374,237,0.907,246,3.152,250,2.758,280,2.391,296,2.249,297,1.443,314,1.613,351,0.641,368,2.378,395,1.274,407,2.556,408,2.019,409,2.019,410,3.175,411,2.556,414,2.758,426,2.249,427,2.89,435,2.556,441,1.613,444,1.613,445,1.683,455,2.28,456,1.613,457,1.419,500,2.556,502,1.613,514,1.613,515,3.755,516,3.023,517,1.908,518,4.311,519,3.755,520,3.612,521,3.755,522,3.755,523,1.908,524,3.023,525,3.023,526,1.908,527,1.908,528,1.908,529,1.908,530,1.908,531,1.908,532,1.908,533,1.908,534,1.908,535,1.908,536,1.908,537,1.419,538,1.908,539,1.274,540,1.908,541,1.908,542,1.908,543,2.249,544,1.908,545,1.908,546,1.908,547,3.023,548,1.908,549,1.908,550,1.908,551,1.908,552,1.908,553,1.908,554,3.023,555,1.908,556,1.908,557,1.908,558,1.908,559,1.908,560,1.613,561,1.908,562,1.908,563,3.755,564,3.023,565,1.908,566,1.908,567,1.908,568,4.272,569,1.908,570,1.908,571,1.908,572,1.908,573,1.908,574,1.908,575,1.908,576,1.908,577,1.908,578,1.908,579,1.908,580,1.908,581,1.908,582,1.908,583,1.908,584,1.908,585,1.908,586,1.908,587,1.908,588,1.908,589,1.908,590,1.613]],["title/classes/Role.html",[0,0.058,23,1.001]],["body/classes/Role.html",[0,0.055,2,1.178,3,0.261,4,0.23,5,0.23,8,0.327,9,1.421,12,2.658,13,0.772,14,0.026,15,1.253,16,1.627,17,2.949,18,3.825,19,2.373,20,1.561,21,2.288,23,1.857,24,0.868,26,2.101,28,0.499,29,1.561,30,1.031,31,0.412,32,0.017,33,0.017,52,1.031,85,1.085,102,0.903,211,1.685,265,2.323,309,4.219,341,3.457,351,1.519,369,3.365,383,1.993,384,1.827,387,2.747,391,1.993,392,2.747,393,1.993,398,3.457,401,2.192,427,1.827,591,2.192,592,4.524,593,3.282,594,3.282,595,4.524,596,3.282,597,3.282,598,3.282,599,2.441,600,1.993,601,2.775]],["title/controllers/RoleController.html",[125,1.505,602,2.274]],["body/controllers/RoleController.html",[0,0.055,3,0.261,4,0.23,5,0.23,8,0.327,12,2.323,13,0.833,14,0.026,15,1.163,16,1.627,23,1.823,24,0.806,28,0.523,30,1.031,31,0.261,32,0.017,33,0.017,50,0.688,78,1.519,84,1.624,85,0.948,86,1.421,91,1.738,105,1.993,121,1.627,125,1.451,127,1.451,129,2.192,134,2.192,144,2.192,147,3.021,148,2.192,149,1.827,212,2.192,276,3.388,384,2.518,408,3.021,414,2.518,416,2.775,418,4.15,451,2.441,458,1.561,464,2.775,465,3.851,477,3.825,602,3.021,603,2.775,604,4.718,605,4.524,606,3.282,607,3.282,608,4.524,609,5.177,610,4.524,611,3.282,612,3.282,613,3.282,614,3.282,615,3.282,616,4.524,617,3.282,618,1.685,619,2.775,620,2.775,621,2.192,622,2.441,623,3.282,624,3.282,625,3.282,626,3.282,627,3.282,628,3.282,629,3.282,630,3.282,631,3.282]],["title/modules/RoleModule.html",[34,1.223,43,1.896]],["body/modules/RoleModule.html",[0,0.066,3,0.31,4,0.273,5,0.273,14,0.026,20,0.937,23,1.145,28,0.579,31,0.31,32,0.019,33,0.019,34,1.822,36,1.721,37,2.242,43,3.604,44,2.413,45,2.605,46,1.999,47,1.999,49,2.364,50,0.816,51,2.6,52,1.223,57,2.6,127,2.242,168,3.081,169,3.388,211,1.999,503,2.168,505,3.774,511,2.896,600,2.364,602,3.769,618,3.485,619,3.292,622,2.896,632,3.292,633,3.292,634,3.292,635,3.894,636,3.894,637,3.292]],["title/injectables/RoleService.html",[95,0.876,618,1.749]],["body/injectables/RoleService.html",[0,0.057,3,0.27,4,0.238,5,0.238,8,0.337,12,1.74,13,0.694,14,0.026,15,1.182,23,1.796,24,0.88,28,0.546,30,1.065,31,0.27,32,0.017,33,0.017,50,0.71,52,1.065,78,1.553,80,1.612,84,1.89,85,1.103,86,1.654,91,1.768,95,1.19,102,1.448,121,1.654,149,1.886,182,1.612,184,2.853,187,1.886,194,2.93,215,2.93,276,3.434,351,1.138,414,1.886,518,4.206,537,2.52,599,2.52,604,4.782,618,2.374,620,2.865,621,2.263,622,2.52,638,2.865,639,4.624,640,4.624,641,3.388,642,3.388,643,4.624,644,4.624,645,3.388,646,3.388,647,4.624,648,3.388,649,3.388,650,3.388,651,3.388,652,3.388]],["title/classes/RoleUser.html",[0,0.058,653,2.533]],["body/classes/RoleUser.html",[0,0.066,2,1.394,3,0.309,4,0.273,5,0.273,8,0.386,9,1.591,11,4.764,13,0.743,14,0.026,16,1.591,20,1.528,23,1.821,24,0.788,28,0.554,31,0.449,32,0.019,33,0.019,52,1.22,102,1.068,211,1.993,265,2.6,351,1.7,383,3.626,384,2.819,387,3.626,391,2.357,392,3.074,393,2.357,401,3.381,653,4.191,654,2.592,655,5.634,656,3.881,657,3.881,658,3.881,659,3.881,660,3.881,661,3.282,662,2.887,663,3.282]],["title/guards/RolesGuard.html",[74,2.533,664,2.274]],["body/guards/RolesGuard.html",[0,0.054,3,0.256,4,0.226,5,0.226,8,0.32,13,0.588,14,0.026,20,1.073,24,0.694,26,1.154,28,0.52,31,0.256,32,0.017,33,0.017,50,0.673,76,2.391,78,1.497,79,4.676,80,1.529,81,2.718,82,4.015,84,1.601,85,0.934,86,1.401,87,3.771,88,4.114,90,2.718,91,1.079,92,3.771,93,2.121,94,4.33,95,1.148,96,2.391,100,1.952,101,2.391,102,1.654,104,2.391,105,1.952,106,2.147,107,2.718,108,2.147,109,2.718,110,2.718,111,4.33,112,3.771,113,2.391,114,2.978,115,2.147,116,2.483,117,2.121,118,2.718,119,2.718,120,2.718,121,1.401,123,2.147,124,2.147,146,1.79,187,1.79,205,2.708,309,2.147,458,1.529,460,2.391,664,2.978,665,2.718,666,6.165,667,3.214,668,3.214,669,2.718,670,2.391,671,4.459,672,3.214,673,3.214,674,3.214,675,3.214,676,3.214,677,3.214,678,2.718,679,3.214,680,3.214]],["title/classes/Tags.html",[0,0.058,368,1.896]],["body/classes/Tags.html",[0,0.063,2,1.348,3,0.299,4,0.264,5,0.264,8,0.374,9,1.556,13,0.778,14,0.026,15,1.324,16,1.742,19,1.99,24,0.863,28,0.563,31,0.442,32,0.018,33,0.018,52,1.179,102,1.033,265,1.927,297,2.355,332,3.308,351,1.861,368,3.086,383,3.008,384,2.09,387,2.279,391,3.366,392,3.008,393,2.279,396,2.792,398,3.308,399,2.792,501,2.507,543,2.792,681,2.507,682,4.687,683,4.687,684,3.754,685,3.754,686,3.754,687,3.174,688,2.792,689,3.754,690,2.507,691,3.174,692,3.174]],["title/classes/TagsDto.html",[0,0.058,455,2.068]],["body/classes/TagsDto.html",[0,0.075,2,1.585,3,0.352,4,0.31,5,0.31,8,0.439,9,1.727,10,3.486,13,0.789,14,0.025,15,1.407,19,2.149,24,0.931,28,0.395,31,0.352,32,0.02,33,0.02,351,1.483,427,3.332,455,3.337,682,5.06,683,5.06,693,3.733,694,4.415,695,4.415,696,4.415]],["title/classes/User.html",[0,0.058,20,0.819]],["body/classes/User.html",[0,0.043,2,0.911,3,0.202,4,0.178,5,0.178,8,0.252,9,1.182,13,0.821,14,0.026,15,1.415,16,1.854,17,3.1,19,2.34,20,1.079,21,1.982,23,1.829,24,0.938,26,2.261,28,0.514,29,1.207,30,0.797,31,0.357,32,0.014,33,0.014,52,0.797,85,1.039,102,0.698,197,3.313,237,2.36,265,1.303,297,2.316,309,3.707,332,3.313,340,2.799,341,3.313,351,1.506,357,4.48,358,4.48,359,3.182,364,3.182,369,2.799,383,2.285,384,2.095,387,2.285,391,1.541,392,2.285,393,1.541,396,1.887,398,3.313,399,1.887,401,1.695,503,1.413,539,1.695,687,2.146,688,1.887,690,1.695,691,2.146,697,1.695,698,4.485,699,3.763,700,2.537,701,2.537,702,2.537,703,2.537,704,2.537,705,2.537,706,2.537,707,2.537,708,3.763,709,2.537,710,2.537,711,2.537,712,2.537,713,2.537,714,2.537,715,2.537,716,1.887,717,2.146,718,2.146]],["title/controllers/UserController.html",[55,2.068,125,1.505]],["body/controllers/UserController.html",[0,0.036,1,2.749,3,0.169,4,0.149,5,0.149,8,0.211,13,0.786,14,0.026,15,1.163,16,1.627,20,1.178,21,1.777,23,0.624,24,0.806,26,2.173,28,0.56,30,0.666,31,0.169,32,0.012,33,0.012,50,0.444,55,1.994,75,2.238,78,1.103,84,1.758,85,1.026,86,1.539,91,1.739,99,1.578,102,1.106,105,1.288,106,2.685,121,1.627,125,0.937,127,0.937,129,1.416,134,3.608,138,2.194,140,2.324,144,2.685,145,1.793,147,1.416,148,1.416,149,1.181,184,2.001,190,1.562,194,1.181,208,1.181,210,1.578,212,1.416,261,2.99,351,0.712,409,3.27,414,2.883,417,2.777,418,4.502,427,1.181,451,1.578,452,1.793,453,2.777,458,1.562,459,1.793,460,1.578,465,3.852,466,3.827,470,2.777,621,1.416,664,1.416,716,1.578,717,1.793,719,1.793,720,2.777,721,3.827,722,3.284,723,2.777,724,2.777,725,1.793,726,2.121,727,3.284,728,2.121,729,2.121,730,2.121,731,2.121,732,4.02,733,2.121,734,2.121,735,2.121,736,2.121,737,2.121,738,4.02,739,2.121,740,1.793,741,3.284,742,2.121,743,2.121,744,1.793,745,2.121,746,3.284,747,2.121,748,2.121,749,2.121,750,1.793,751,1.793,752,1.793,753,1.793,754,2.121,755,1.578,756,1.793,757,1.578,758,2.121,759,2.121,760,2.121,761,2.121,762,2.121,763,2.121,764,4.526,765,3.284,766,3.284,767,2.121,768,2.121,769,3.284,770,3.284,771,3.284,772,2.121,773,2.121,774,2.121,775,2.121,776,2.121,777,2.121,778,2.121,779,2.121,780,2.121,781,2.121,782,2.121,783,2.121,784,2.121,785,2.121,786,2.121]],["title/interfaces/UserDetails.html",[208,1.896,787,2.274]],["body/interfaces/UserDetails.html",[3,0.363,4,0.32,5,0.32,8,0.454,9,1.762,13,0.801,14,0.025,15,1.543,21,2.8,31,0.363,32,0.021,33,0.021,85,1.327,208,3.121,237,3.013,458,2.169,787,3.045,788,4.559,789,3.855,790,3.855]],["title/modules/UserModule.html",[34,1.223,44,1.62]],["body/modules/UserModule.html",[0,0.06,3,0.285,4,0.251,5,0.251,14,0.026,20,1.153,23,1.05,28,0.584,31,0.285,32,0.018,33,0.018,34,1.721,36,1.579,37,2.118,40,2.46,43,3.454,44,3.104,45,2.46,46,1.834,47,1.834,49,2.91,50,0.748,51,2.386,52,1.122,54,2.657,55,3.284,58,3.02,85,1.004,127,2.118,168,2.91,169,3.2,170,2.657,190,3.186,297,1.373,403,2.169,503,1.989,504,3.02,505,2.657,507,3.02,511,2.657,600,2.169,637,3.02,690,2.386,716,2.657,751,3.02,755,2.657,791,3.02,792,3.02,793,3.572,794,3.02,795,3.572,796,3.572,797,3.572]],["title/injectables/UserService.html",[95,0.876,190,1.62]],["body/injectables/UserService.html",[0,0.029,1,2.139,3,0.138,4,0.122,5,0.122,8,0.172,10,1.438,13,0.727,14,0.026,15,1.376,20,1.382,21,2.208,23,1.036,24,0.878,26,1.265,28,0.536,31,0.138,32,0.01,33,0.01,50,0.587,52,0.545,78,0.94,80,0.825,84,1.98,85,1.181,86,1.733,91,1.852,93,2.623,95,0.721,102,1.551,116,1.559,117,1.332,121,1.772,138,1.87,140,2.565,146,0.965,152,1.557,182,0.825,184,2.876,186,1.466,187,2.471,190,1.332,194,2.252,205,1.053,206,2.083,208,1.559,210,1.29,215,3.34,232,1.466,237,1.332,240,2.368,321,1.466,351,0.94,395,1.158,408,1.87,409,2.353,414,2.471,426,2.083,427,0.965,454,1.466,458,0.825,518,3.716,520,2.368,537,1.29,539,2.353,560,2.368,590,1.466,618,2.757,621,1.158,690,1.158,720,2.368,721,3.42,723,2.368,724,2.368,725,1.466,740,2.368,744,1.466,752,1.466,753,1.466,755,1.29,756,1.466,798,1.466,799,2.8,800,2.8,801,2.8,802,2.8,803,1.733,804,3.522,805,1.733,806,2.8,807,1.733,808,1.733,809,2.8,810,1.733,811,1.733,812,2.8,813,1.733,814,2.8,815,1.733,816,2.8,817,1.733,818,1.733,819,1.733,820,1.733,821,1.733,822,1.733,823,1.733,824,1.733,825,1.733,826,1.733,827,1.733,828,1.733,829,2.8,830,2.8,831,2.8,832,1.733,833,2.8,834,1.733,835,1.733,836,1.733,837,1.733,838,1.733,839,1.733,840,1.733,841,1.733,842,1.733,843,1.733,844,1.733,845,2.8,846,1.733,847,1.733,848,1.733,849,1.733,850,1.733,851,2.8,852,2.8,853,1.733,854,1.733,855,1.733,856,1.733,857,1.733,858,1.733,859,1.733,860,1.733,861,1.733,862,1.733,863,1.733,864,1.733]],["title/coverage.html",[865,3.451]],["body/coverage.html",[0,0.107,1,1.677,5,0.194,6,2.335,7,2.978,13,0.364,14,0.026,20,0.664,23,0.812,32,0.015,33,0.015,55,1.677,65,1.844,74,2.978,75,1.537,77,2.335,95,1.518,113,5.165,117,1.313,125,2.283,126,1.844,128,2.335,133,1.677,140,1.418,152,1.22,166,1.677,183,2.335,190,1.313,208,1.537,246,1.677,247,2.335,276,1.677,277,2.335,280,1.418,283,2.054,297,1.061,315,2.335,339,2.335,345,2.335,356,2.335,367,2.674,368,1.537,403,1.677,405,1.844,406,2.335,445,1.537,455,1.677,458,1.313,501,1.844,503,1.537,514,2.335,591,2.674,600,1.677,602,1.844,603,2.335,618,1.418,638,2.335,653,2.054,654,2.674,662,2.054,664,1.844,665,2.335,670,2.054,681,2.674,693,2.335,697,2.674,719,2.335,757,2.054,787,1.844,789,2.335,790,2.335,798,2.335,865,2.054,866,2.761,867,2.761,868,2.761,869,6.158,870,2.761,871,2.761,872,2.335,873,6.255,874,2.335,875,6.255,876,3.385,877,3.385,878,2.761,879,2.335,880,2.054,881,2.761,882,5.165,883,4.003,884,2.761,885,4.003,886,4.003,887,2.761,888,2.335,889,2.761,890,2.761,891,2.761]],["title/dependencies.html",[37,1.809,892,2.408]],["body/dependencies.html",[0,0.067,14,0.026,30,1.247,32,0.019,33,0.019,37,1.754,50,0.831,52,1.247,63,2.65,98,2.951,101,2.951,206,2.951,305,3.355,325,3.355,351,1.332,449,3.355,450,3.355,669,3.355,688,2.951,893,6.022,894,3.967,895,3.967,896,3.967,897,3.967,898,3.967,899,3.967,900,3.967,901,3.967,902,3.967,903,3.967,904,3.967,905,3.967,906,3.967,907,3.967,908,3.967,909,3.967,910,3.967,911,3.967,912,3.355,913,5.135,914,3.967,915,3.967,916,3.967,917,3.967,918,3.967,919,3.967,920,3.967,921,3.967,922,3.967,923,3.967,924,3.967,925,5.135,926,3.967,927,3.967,928,3.967,929,3.967,930,3.967,931,3.967,932,3.967]],["title/miscellaneous/enumerations.html",[933,1.585,934,3.461]],["body/miscellaneous/enumerations.html",[8,0.518,12,2.672,14,0.024,32,0.023,33,0.023,250,2.897,283,3.87,296,4.514,297,1.999,933,2.897,934,4.4,935,5.203]],["title/index.html",[8,0.283,936,2.848,937,2.408]],["body/index.html",[4,0.273,14,0.026,19,1.398,32,0.019,33,0.019,865,2.896,880,2.896,912,4.772,938,3.894,939,3.894,940,5.073,941,3.894,942,3.894,943,3.894,944,3.894,945,3.894,946,3.894,947,3.894,948,3.894,949,3.894,950,3.894,951,6.474,952,3.894,953,3.292,954,3.894,955,6.357,956,3.894,957,5.073,958,3.894,959,3.894,960,3.894,961,3.894,962,5.073,963,5.073,964,3.894,965,3.894,966,3.894,967,5.073,968,5.073,969,3.894,970,3.894,971,3.894,972,3.894,973,3.894,974,3.292,975,3.894,976,3.894,977,3.894,978,3.894,979,3.894,980,3.894,981,3.894,982,3.894,983,3.894,984,3.894,985,3.292,986,3.894,987,3.894,988,3.894,989,3.894,990,3.894,991,3.894,992,3.292]],["title/modules.html",[36,2.051]],["body/modules.html",[14,0.021,32,0.021,33,0.021,35,3.209,36,2.124,40,2.467,41,2.917,42,2.917,43,2.675,44,2.285,974,5.668,993,6.703,994,6.703,995,6.703]],["title/overview.html",[996,3.923]],["body/overview.html",[2,1.257,14,0.025,32,0.018,33,0.018,35,4.46,36,1.548,37,2.09,38,2.961,39,2.961,40,3.293,41,3.635,42,3.829,43,3.511,44,3.051,45,2.428,46,1.798,47,1.798,76,2.605,115,2.339,127,1.548,152,2.788,163,2.961,164,2.961,165,2.961,166,3.251,182,1.666,190,3,278,2.961,279,2.961,280,2.944,445,2.981,496,2.961,497,2.961,618,3.238,632,2.961,633,2.961,634,2.961,787,2.339,791,2.961,792,2.961,794,2.961,996,2.961,997,3.502,998,3.502,999,3.502,1000,3.502,1001,3.502]],["title/properties.html",[9,1.286,892,2.408]],["body/properties.html",[9,1.635,14,0.025,19,1.868,32,0.023,33,0.023,985,4.4,992,4.4,1002,5.203,1003,5.203,1004,5.203]],["title/miscellaneous/typealiases.html",[933,1.585,1005,4.093]],["body/miscellaneous/typealiases.html",[8,0.491,13,0.651,14,0.022,32,0.022,33,0.022,367,3.297,395,3.929,539,3.929,543,4.376,591,3.297,599,4.376,654,3.297,661,4.974,681,3.297,697,3.297,933,2.748,1006,4.937,1007,4.174,1008,4.174,1009,4.174,1010,4.174,1011,4.174]],["title/miscellaneous/variables.html",[933,1.585,1012,3.461]],["body/miscellaneous/variables.html",[8,0.303,12,3.28,13,0.566,14,0.026,15,1.117,20,1.032,23,0.895,32,0.016,33,0.016,88,2.263,102,1.625,108,2.032,117,1.447,121,0.956,123,2.032,124,2.032,184,1.345,215,2.389,265,2.203,367,2.032,403,2.606,404,2.573,458,2.568,463,5.402,501,2.866,503,2.389,591,2.032,600,2.606,601,2.573,654,2.032,662,3.192,663,2.573,670,3.192,678,2.573,681,2.032,692,2.573,697,2.032,718,2.573,750,2.573,757,3.192,872,2.573,874,3.629,876,2.573,877,4.204,879,2.573,880,3.192,888,2.573,933,1.694,937,2.573,953,3.629,1007,2.573,1008,2.573,1009,2.573,1010,2.573,1011,2.573,1012,2.573,1013,3.043,1014,3.043,1015,4.291,1016,3.043,1017,3.043,1018,4.291,1019,3.043,1020,3.043,1021,3.043,1022,3.043,1023,3.043,1024,3.043,1025,3.043,1026,3.043,1027,3.043,1028,4.971,1029,3.043,1030,3.043,1031,3.043,1032,3.043,1033,3.043,1034,3.043,1035,3.043,1036,3.043,1037,4.291,1038,3.043,1039,3.043,1040,3.043,1041,3.043,1042,3.043,1043,3.043,1044,3.043,1045,3.043,1046,3.043,1047,3.043,1048,3.043,1049,3.043,1050,3.043]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"classes/AddRolleDto.html":{},"modules/AppModule.html":{},"guards/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserdto.html":{},"injectables/MongooseConfigService.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"guards/RolesGuard.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserDetails.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":113,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1003,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":921,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":918,"title":{},"body":{"dependencies.html":{}}}],["0.3.10",{"_index":932,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":916,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":885,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":889,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":878,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":869,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":882,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":886,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":887,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":883,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":884,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":115,"title":{},"body":{"guards/Auth.html":{},"controllers/ReceiptController.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["1.1.0",{"_index":928,"title":{},"body":{"dependencies.html":{}}}],["1.2.7",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":910,"title":{},"body":{"dependencies.html":{}}}],["1/7",{"_index":871,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":914,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":1000,"title":{},"body":{"overview.html":{}}}],["12",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["12345",{"_index":343,"title":{},"body":{"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{}}}],["1234567",{"_index":708,"title":{},"body":{"classes/User.html":{}}}],["13.1.1",{"_index":915,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":870,"title":{},"body":{"coverage.html":{}}}],["1a.lv",{"_index":267,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["2",{"_index":1001,"title":{},"body":{"overview.html":{}}}],["2.1.2",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":894,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":418,"title":{},"body":{"controllers/ReceiptController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["201",{"_index":610,"title":{},"body":{"controllers/RoleController.html":{}}}],["21.12.2022",{"_index":260,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["21.12.2024",{"_index":272,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["3.0.0",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":923,"title":{},"body":{"dependencies.html":{}}}],["3500",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37129994512",{"_index":364,"title":{},"body":{"classes/NewsUserdto.html":{},"classes/User.html":{}}}],["4",{"_index":998,"title":{},"body":{"overview.html":{}}}],["4.15.5",{"_index":931,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":258,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["6",{"_index":997,"title":{},"body":{"overview.html":{}}}],["6.0.3",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["6.6.5",{"_index":908,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":999,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":924,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":893,"title":{},"body":{"dependencies.html":{}}}],["9.2.0",{"_index":895,"title":{},"body":{"dependencies.html":{}}}],["_getuserdetails",{"_index":799,"title":{},"body":{"injectables/UserService.html":{}}}],["_getuserdetails(user",{"_index":806,"title":{},"body":{"injectables/UserService.html":{}}}],["access",{"_index":679,"title":{},"body":{"guards/RolesGuard.html":{}}}],["accestoken:await",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["add",{"_index":416,"title":{},"body":{"controllers/ReceiptController.html":{},"controllers/RoleController.html":{}}}],["addreceiptusers",{"_index":407,"title":{},"body":{"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{}}}],["addreceiptusers(@req",{"_index":475,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["addreceiptusers(dto",{"_index":525,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["addreceiptusers(req",{"_index":413,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["addroles",{"_index":720,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["addroles(@body",{"_index":774,"title":{},"body":{"controllers/UserController.html":{}}}],["addroles(dto",{"_index":725,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["addroles(dto:addrolledto",{"_index":858,"title":{},"body":{"injectables/UserService.html":{}}}],["addrolledto",{"_index":1,"title":{"classes/AddRolleDto.html":{}},"body":{"classes/AddRolleDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["aliases",{"_index":1006,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":975,"title":{},"body":{"index.html":{}}}],["api",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apioperation",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ReceiptController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["apioperation({summary",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ReceiptController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["apioperation({summary:'add",{"_index":464,"title":{},"body":{"controllers/ReceiptController.html":{},"controllers/RoleController.html":{}}}],["apioperation({summary:'delete",{"_index":488,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["apioperation({summary:'get",{"_index":477,"title":{},"body":{"controllers/ReceiptController.html":{},"controllers/RoleController.html":{}}}],["apioperation({summary:'search",{"_index":481,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["apioperation({summary:'user",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiproperty",{"_index":29,"title":{},"body":{"classes/AddRolleDto.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["apiproperty({example",{"_index":17,"title":{},"body":{"classes/AddRolleDto.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["apiresponse",{"_index":451,"title":{},"body":{"controllers/ReceiptController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["apiresponse({status",{"_index":465,"title":{},"body":{"controllers/ReceiptController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["apitags",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"classes/NewsUserdto.html":{},"controllers/ReceiptController.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{}}}],["apitags('autorization",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('fhg",{"_index":366,"title":{},"body":{"classes/NewsUserdto.html":{}}}],["apitags('receipt",{"_index":461,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["apitags('role",{"_index":623,"title":{},"body":{"controllers/RoleController.html":{}}}],["apitags('users",{"_index":759,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":953,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["app.enablecors",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.listen(port",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.setglobalprefix('api",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.useglobalpipes(new",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applications",{"_index":946,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":35,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["assign",{"_index":22,"title":{},"body":{"classes/AddRolleDto.html":{}}}],["async",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["atob",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["auth",{"_index":75,"title":{"guards/Auth.html":{}},"body":{"guards/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["auth.controller",{"_index":171,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.decorator",{"_index":460,"title":{},"body":{"controllers/ReceiptController.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{}}}],["auth.decorator.ts",{"_index":877,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth.service",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["auth/auth.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/ReceiptModule.html":{},"modules/UserModule.html":{}}}],["auth/auth.service",{"_index":454,"title":{},"body":{"controllers/ReceiptController.html":{},"injectables/UserService.html":{}}}],["auth/guards/jwt.guard",{"_index":453,"title":{},"body":{"controllers/ReceiptController.html":{},"controllers/UserController.html":{}}}],["auth/guards/roles",{"_index":459,"title":{},"body":{"controllers/ReceiptController.html":{},"controllers/UserController.html":{}}}],["auth/guards/roles.guard",{"_index":754,"title":{},"body":{"controllers/UserController.html":{}}}],["authcontroller",{"_index":126,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":97,"title":{},"body":{"guards/Auth.html":{}}}],["authheader",{"_index":109,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{}}}],["authheader.split",{"_index":112,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ReceiptModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":985,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":152,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ReceiptController.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["authservice,jwtmodule",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{}}}],["autorization",{"_index":675,"title":{},"body":{"guards/RolesGuard.html":{}}}],["avatar",{"_index":717,"title":{},"body":{"classes/User.html":{},"controllers/UserController.html":{}}}],["avatar'})@prop({required",{"_index":700,"title":{},"body":{"classes/User.html":{}}}],["avatarpath",{"_index":698,"title":{},"body":{"classes/User.html":{}}}],["await",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":976,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":821,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('email",{"_index":848,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["bcrypt.compare(password",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(password",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["bearer",{"_index":111,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{}}}],["belongs",{"_index":595,"title":{},"body":{"classes/Role.html":{}}}],["body",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ReceiptController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":92,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{}}}],["browse",{"_index":995,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":993,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":941,"title":{},"body":{"index.html":{}}}],["busy",{"_index":849,"title":{},"body":{"injectables/UserService.html":{}}}],["canactivate",{"_index":79,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":87,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{}}}],["card",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch",{"_index":123,"title":{},"body":{"guards/Auth.html":{},"injectables/FileService.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["city",{"_index":357,"title":{},"body":{"classes/NewsUserdto.html":{},"classes/User.html":{}}}],["class",{"_index":0,"title":{"classes/AddRolleDto.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"classes/Role.html":{},"classes/RoleUser.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{}},"body":{"classes/AddRolleDto.html":{},"modules/AppModule.html":{},"guards/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserdto.html":{},"injectables/MongooseConfigService.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"guards/RolesGuard.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddRolleDto.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"classes/Role.html":{},"classes/RoleUser.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"overview.html":{}}}],["client/server/data/users",{"_index":824,"title":{},"body":{"injectables/UserService.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_filemodule",{"_index":278,"title":{},"body":{"modules/FileModule.html":{},"overview.html":{}}}],["cluster_filemodule_providers",{"_index":279,"title":{},"body":{"modules/FileModule.html":{},"overview.html":{}}}],["cluster_receiptmodule",{"_index":496,"title":{},"body":{"modules/ReceiptModule.html":{},"overview.html":{}}}],["cluster_receiptmodule_providers",{"_index":497,"title":{},"body":{"modules/ReceiptModule.html":{},"overview.html":{}}}],["cluster_rolemodule",{"_index":632,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_exports",{"_index":634,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_providers",{"_index":633,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":791,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":794,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":793,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":792,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["config",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/configuration",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["config/mongoose.configservice",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('jwt_secret",{"_index":334,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["configuration",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log",{"_index":862,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('server",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(dto.receptid",{"_index":494,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["console.log(e",{"_index":678,"title":{},"body":{"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["console.log(id",{"_index":765,"title":{},"body":{"controllers/UserController.html":{}}}],["console.log(receip,\"in",{"_index":574,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["console.log(tags",{"_index":580,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["console.log(token",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(uplfile",{"_index":553,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["console.log(user",{"_index":860,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(user.email",{"_index":582,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["const",{"_index":102,"title":{},"body":{"guards/Auth.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"guards/RolesGuard.html":{},"classes/Tags.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":80,"title":{},"body":{"guards/Auth.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{}}}],["constructor(@injectmodel('role",{"_index":649,"title":{},"body":{"injectables/RoleService.html":{}}}],["constructor(@injectmodel('user",{"_index":825,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(@injectmodel(receipt.name",{"_index":545,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["constructor(configservice",{"_index":317,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(jwtservice",{"_index":81,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{}}}],["constructor(private",{"_index":105,"title":{},"body":{"guards/Auth.html":{},"controllers/AuthController.html":{},"controllers/RoleController.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{}}}],["constructor(receiptmodel",{"_index":517,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["constructor(rolerepository",{"_index":641,"title":{},"body":{"injectables/RoleService.html":{}}}],["constructor(usermodel",{"_index":803,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["context",{"_index":90,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{}}}],["context.getclass",{"_index":674,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":673,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":107,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{}}}],["controller",{"_index":125,"title":{"controllers/AuthController.html":{},"controllers/ReceiptController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/ReceiptController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('/auth",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('/receipt",{"_index":462,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["controller('/roles",{"_index":624,"title":{},"body":{"controllers/RoleController.html":{}}}],["controller('user",{"_index":760,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["controllers:[receiptcontroller",{"_index":512,"title":{},"body":{"modules/ReceiptModule.html":{}}}],["count",{"_index":434,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["coverage",{"_index":865,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":408,"title":{},"body":{"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"controllers/RoleController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":626,"title":{},"body":{"controllers/RoleController.html":{}}}],["create(@req",{"_index":469,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["create(dto",{"_index":606,"title":{},"body":{"controllers/RoleController.html":{}}}],["create(email",{"_index":527,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["create(email:string",{"_index":548,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["create(req",{"_index":421,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["create(userdto",{"_index":809,"title":{},"body":{"injectables/UserService.html":{}}}],["createfile",{"_index":284,"title":{},"body":{"injectables/FileService.html":{}}}],["createfile(file",{"_index":286,"title":{},"body":{"injectables/FileService.html":{}}}],["createfile(type:filetype",{"_index":298,"title":{},"body":{"injectables/FileService.html":{}}}],["createmongooseoptions",{"_index":346,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["createparamdecorator",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createreceiptdto",{"_index":246,"title":{"classes/CreateReceiptDto.html":{}},"body":{"classes/CreateReceiptDto.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"coverage.html":{}}}],["createrole",{"_index":639,"title":{},"body":{"injectables/RoleService.html":{}}}],["createrole(dto",{"_index":644,"title":{},"body":{"injectables/RoleService.html":{}}}],["createroledto",{"_index":276,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["createtag",{"_index":515,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["createtag(dto",{"_index":529,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["createtags(@req",{"_index":493,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["ctx",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentuser",{"_index":757,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":261,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{},"controllers/UserController.html":{}}}],["date'})@apiresponse({status",{"_index":738,"title":{},"body":{"controllers/UserController.html":{}}}],["dbname",{"_index":354,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["decorators",{"_index":16,"title":{},"body":{"classes/AddRolleDto.html":{},"controllers/AuthController.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"classes/RoleUser.html":{},"classes/Tags.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["default",{"_index":463,"title":{},"body":{"controllers/ReceiptController.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":24,"title":{},"body":{"classes/AddRolleDto.html":{},"guards/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserdto.html":{},"injectables/MongooseConfigService.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"guards/RolesGuard.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":409,"title":{},"body":{"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete(':id",{"_index":489,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["delete('delete",{"_index":776,"title":{},"body":{"controllers/UserController.html":{}}}],["delete('delete')@apioperation({summary",{"_index":731,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(@param('id",{"_index":490,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["delete(@req",{"_index":778,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(id",{"_index":426,"title":{},"body":{"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"injectables/UserService.html":{}}}],["delete(req",{"_index":730,"title":{},"body":{"controllers/UserController.html":{}}}],["dependencies",{"_index":37,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/ReceiptModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":19,"title":{},"body":{"classes/AddRolleDto.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"classes/Role.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"index.html":{},"properties.html":{}}}],["details.interface",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["details.interface.ts",{"_index":790,"title":{},"body":{"interfaces/UserDetails.html":{},"coverage.html":{}}}],["development",{"_index":954,"title":{},"body":{"index.html":{}}}],["digitizing",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist",{"_index":930,"title":{},"body":{"dependencies.html":{}}}],["distribute",{"_index":727,"title":{},"body":{"controllers/UserController.html":{}}}],["document",{"_index":265,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{},"classes/Role.html":{},"classes/RoleUser.html":{},"classes/Tags.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["document'})@prop({required",{"_index":379,"title":{},"body":{"classes/Receipt.html":{}}}],["documentation",{"_index":866,"title":{},"body":{"coverage.html":{}}}],["documentbuilder",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doespasswordmatch",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto",{"_index":414,"title":{},"body":{"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto.email",{"_index":854,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.name",{"_index":856,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.password",{"_index":851,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.usersemail",{"_index":584,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["dto/add",{"_index":756,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/create",{"_index":620,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["dto/create_receipt.dto",{"_index":444,"title":{},"body":{"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{}}}],["dto/createuser.dto",{"_index":752,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/newsuser.dto",{"_index":753,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/tags.dto",{"_index":456,"title":{},"body":{"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{}}}],["dto:tagsdto",{"_index":572,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["e",{"_index":124,"title":{},"body":{"guards/Auth.html":{},"injectables/FileService.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":964,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":942,"title":{},"body":{"index.html":{}}}],["email",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{},"injectables/ReceiptService.html":{},"classes/User.html":{},"interfaces/UserDetails.html":{},"injectables/UserService.html":{}}}],["email'})@prop({required",{"_index":703,"title":{},"body":{"classes/User.html":{}}}],["enum",{"_index":295,"title":{},"body":{"injectables/FileService.html":{}}}],["enumerations",{"_index":934,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["executioncontext",{"_index":88,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["existinguser",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["exp",{"_index":337,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["expiresin:'3600s",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":31,"title":{},"body":{"classes/AddRolleDto.html":{},"modules/AppModule.html":{},"guards/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserdto.html":{},"injectables/MongooseConfigService.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"guards/RolesGuard.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserDetails.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{}}}],["express",{"_index":450,"title":{},"body":{"controllers/ReceiptController.html":{},"dependencies.html":{}}}],["extends",{"_index":327,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt",{"_index":323,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":332,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/Receipt.html":{},"classes/Tags.html":{},"classes/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddRolleDto.html":{},"modules/AppModule.html":{},"guards/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserdto.html":{},"injectables/MongooseConfigService.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"guards/RolesGuard.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserDetails.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["file.buffer",{"_index":311,"title":{},"body":{"injectables/FileService.html":{}}}],["file.originalname.splits('.').pop",{"_index":300,"title":{},"body":{"injectables/FileService.html":{}}}],["file.service",{"_index":282,"title":{},"body":{"modules/FileModule.html":{}}}],["file/file.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["file/file.service",{"_index":500,"title":{},"body":{"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{}}}],["fileextension",{"_index":299,"title":{},"body":{"injectables/FileService.html":{}}}],["filefieldsinterceptor",{"_index":447,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["fileinterceptor",{"_index":448,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["filemodule",{"_index":41,"title":{"modules/FileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FileModule.html":{},"modules.html":{},"overview.html":{}}}],["filename",{"_index":290,"title":{},"body":{"injectables/FileService.html":{}}}],["filepath",{"_index":303,"title":{},"body":{"injectables/FileService.html":{}}}],["files",{"_index":470,"title":{},"body":{"controllers/ReceiptController.html":{},"controllers/UserController.html":{}}}],["fileservice",{"_index":280,"title":{"injectables/FileService.html":{}},"body":{"modules/FileModule.html":{},"injectables/FileService.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"coverage.html":{},"overview.html":{}}}],["fileservise",{"_index":521,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["filetype",{"_index":296,"title":{},"body":{"injectables/FileService.html":{},"injectables/ReceiptService.html":{},"miscellaneous/enumerations.html":{}}}],["findbyemail",{"_index":800,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyemail(email",{"_index":812,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid",{"_index":801,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid(id",{"_index":814,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyidd",{"_index":802,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyidd(id",{"_index":816,"title":{},"body":{"injectables/UserService.html":{}}}],["forwardref",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{},"modules/ReceiptModule.html":{},"modules/UserModule.html":{}}}],["forwardref(()=>authmodule",{"_index":504,"title":{},"body":{"modules/ReceiptModule.html":{},"modules/UserModule.html":{}}}],["forwardref(()=>usermodule",{"_index":175,"title":{},"body":{"modules/AuthModule.html":{},"modules/ReceiptModule.html":{}}}],["found",{"_index":590,"title":{},"body":{"injectables/ReceiptService.html":{},"injectables/UserService.html":{}}}],["framework",{"_index":940,"title":{},"body":{"index.html":{}}}],["fs",{"_index":293,"title":{},"body":{"injectables/FileService.html":{}}}],["fs.mkdirsync(filepath",{"_index":307,"title":{},"body":{"injectables/FileService.html":{}}}],["fs.writefilesync(path.join(filepath",{"_index":310,"title":{},"body":{"injectables/FileService.html":{}}}],["generatetoken",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetoken(user",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["get('/:value",{"_index":628,"title":{},"body":{"controllers/RoleController.html":{}}}],["get('/:value')@apioperation({summary",{"_index":615,"title":{},"body":{"controllers/RoleController.html":{}}}],["get('/search",{"_index":482,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["get(':id",{"_index":485,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["get('by",{"_index":741,"title":{},"body":{"controllers/UserController.html":{}}}],["get('profil",{"_index":762,"title":{},"body":{"controllers/UserController.html":{}}}],["get('profil')@apioperation({summary",{"_index":737,"title":{},"body":{"controllers/UserController.html":{}}}],["getall",{"_index":410,"title":{},"body":{"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{}}}],["getall(count",{"_index":430,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["getall(user",{"_index":532,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["getallrole",{"_index":604,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["getalluser",{"_index":721,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getbyvalue",{"_index":605,"title":{},"body":{"controllers/RoleController.html":{}}}],["getbyvalue(@param('value",{"_index":629,"title":{},"body":{"controllers/RoleController.html":{}}}],["getbyvalue(value",{"_index":614,"title":{},"body":{"controllers/RoleController.html":{}}}],["getone",{"_index":411,"title":{},"body":{"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{}}}],["getone(@param('id",{"_index":486,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["getone(id",{"_index":435,"title":{},"body":{"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{}}}],["getprofil",{"_index":722,"title":{},"body":{"controllers/UserController.html":{}}}],["getprofil(@currentuser('id",{"_index":763,"title":{},"body":{"controllers/UserController.html":{}}}],["getprofil(id",{"_index":736,"title":{},"body":{"controllers/UserController.html":{}}}],["getrolebyvalue",{"_index":640,"title":{},"body":{"injectables/RoleService.html":{}}}],["getrolebyvalue(value",{"_index":647,"title":{},"body":{"injectables/RoleService.html":{}}}],["getting",{"_index":936,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":723,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getuser(@param('id",{"_index":768,"title":{},"body":{"controllers/UserController.html":{}}}],["getuser(id",{"_index":740,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["grow",{"_index":971,"title":{},"body":{"index.html":{}}}],["guard",{"_index":74,"title":{"guards/Auth.html":{},"guards/RolesGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":76,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["guards/jwt.guard",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{}}}],["guards/jwt.strategy",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{}}}],["hashedpassword",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["hashedpassword(password",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["here",{"_index":982,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["httpcode(200",{"_index":781,"title":{},"body":{"controllers/UserController.html":{}}}],["httpcode(httpstatus.ok",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/ReceiptService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{}}}],["httpexception('not",{"_index":312,"title":{},"body":{"injectables/FileService.html":{}}}],["httpexception('user",{"_index":589,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["httpexception('users",{"_index":863,"title":{},"body":{"injectables/UserService.html":{}}}],["https://nestjs.com",{"_index":989,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/ReceiptService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{}}}],["httpstatus.bad_request",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.forbidden",{"_index":680,"title":{},"body":{"guards/RolesGuard.html":{}}}],["httpstatus.internal_server_error",{"_index":314,"title":{},"body":{"injectables/FileService.html":{},"injectables/ReceiptService.html":{}}}],["httpstatus.not_found",{"_index":864,"title":{},"body":{"injectables/UserService.html":{}}}],["iat",{"_index":336,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["id",{"_index":21,"title":{},"body":{"classes/AddRolleDto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserDetails.html":{},"injectables/UserService.html":{}}}],["id/:id",{"_index":767,"title":{},"body":{"controllers/UserController.html":{}}}],["id/:id')@apioperation({summary",{"_index":742,"title":{},"body":{"controllers/UserController.html":{}}}],["id:mongoose.types.objectid",{"_index":397,"title":{},"body":{"classes/Receipt.html":{}}}],["id:string",{"_index":764,"title":{},"body":{"controllers/UserController.html":{}}}],["id:user.id",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["identifier",{"_index":867,"title":{},"body":{"coverage.html":{}}}],["if(!fs.existssync(filepath",{"_index":306,"title":{},"body":{"injectables/FileService.html":{}}}],["if(!user",{"_index":841,"title":{},"body":{"injectables/UserService.html":{}}}],["if(user.email",{"_index":583,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["if(users.password",{"_index":850,"title":{},"body":{"injectables/UserService.html":{}}}],["ignoreexpiration",{"_index":331,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":104,"title":{},"body":{"guards/Auth.html":{},"injectables/MongooseConfigService.html":{},"guards/RolesGuard.html":{}}}],["import",{"_index":28,"title":{},"body":{"classes/AddRolleDto.html":{},"modules/AppModule.html":{},"guards/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserdto.html":{},"injectables/MongooseConfigService.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"guards/RolesGuard.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ReceiptModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{}}}],["imports:[configmodule",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["in'})@post('/login')@httpcode(httpstatus.ok",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["incorrect",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AddRolleDto.html":{},"guards/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserdto.html":{},"injectables/MongooseConfigService.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"guards/RolesGuard.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserDetails.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddRolleDto.html":{},"modules/AppModule.html":{},"guards/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserdto.html":{},"injectables/MongooseConfigService.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"guards/RolesGuard.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserDetails.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":321,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":95,"title":{"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/ReceiptService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}},"body":{"guards/Auth.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/ReceiptService.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"injectables/ReceiptService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectmodel",{"_index":537,"title":{},"body":{"injectables/ReceiptService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["injectmodel('recept",{"_index":826,"title":{},"body":{"injectables/UserService.html":{}}}],["injectmodel(tags.name",{"_index":546,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["injectmodel(user.name",{"_index":547,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["input",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["installation",{"_index":950,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":952,"title":{},"body":{"index.html":{}}}],["interface",{"_index":787,"title":{"interfaces/UserDetails.html":{}},"body":{"interfaces/UserDetails.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":788,"title":{},"body":{"interfaces/UserDetails.html":{}}}],["issamwuser",{"_index":845,"title":{},"body":{"injectables/UserService.html":{}}}],["issamwuser.id",{"_index":847,"title":{},"body":{"injectables/UserService.html":{}}}],["join",{"_index":978,"title":{},"body":{"index.html":{}}}],["jpg",{"_index":302,"title":{},"body":{"injectables/FileService.html":{}}}],["json[\"stringify\"](user.role",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt",{"_index":326,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtconstants",{"_index":874,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtfromrequest:extractjwt.fromauthheaderasbearertoken",{"_index":330,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtguard",{"_index":452,"title":{},"body":{"controllers/ReceiptController.html":{},"controllers/UserController.html":{}}}],["jwtmodule",{"_index":172,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":82,"title":{},"body":{"guards/Auth.html":{},"injectables/AuthService.html":{},"modules/ReceiptModule.html":{},"guards/RolesGuard.html":{}}}],["jwtstrategy",{"_index":166,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":986,"title":{},"body":{"index.html":{}}}],["license",{"_index":992,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":968,"title":{},"body":{"index.html":{}}}],["lines",{"_index":274,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["lines'})@prop({required",{"_index":389,"title":{},"body":{"classes/Receipt.html":{}}}],["load",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(userdto",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["loginuserdto",{"_index":133,"title":{"classes/LoginUserdto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginUserdto.html":{},"coverage.html":{}}}],["lts.1",{"_index":911,"title":{},"body":{"dependencies.html":{}}}],["matching",{"_index":33,"title":{},"body":{"classes/AddRolleDto.html":{},"modules/AppModule.html":{},"guards/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserdto.html":{},"injectables/MongooseConfigService.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"guards/RolesGuard.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserDetails.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["metadata",{"_index":920,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":78,"title":{},"body":{"guards/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minimist",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["miscellaneous",{"_index":933,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":967,"title":{},"body":{"index.html":{}}}],["mode",{"_index":957,"title":{},"body":{"index.html":{}}}],["model",{"_index":518,"title":{},"body":{"injectables/ReceiptService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["module",{"_index":34,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/ReceiptModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/ReceiptModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":36,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/ReceiptModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":351,"title":{},"body":{"injectables/MongooseConfigService.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["mongoose.document",{"_index":396,"title":{},"body":{"classes/Receipt.html":{},"classes/Tags.html":{},"classes/User.html":{}}}],["mongoose.schema.types.array",{"_index":401,"title":{},"body":{"classes/Receipt.html":{},"classes/Role.html":{},"classes/RoleUser.html":{},"classes/User.html":{}}}],["mongoose.schema.types.objectid",{"_index":399,"title":{},"body":{"classes/Receipt.html":{},"classes/Tags.html":{},"classes/User.html":{}}}],["mongoose.types.objectid",{"_index":369,"title":{},"body":{"classes/Receipt.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["mongooseconfigservice",{"_index":65,"title":{"injectables/MongooseConfigService.html":{}},"body":{"modules/AppModule.html":{},"injectables/MongooseConfigService.html":{},"coverage.html":{}}}],["mongoosemodule",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/ReceiptModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature([{name",{"_index":505,"title":{},"body":{"modules/ReceiptModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemoduleoptions",{"_index":348,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["mongooseoptions",{"_index":350,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["mongooseoptionsfactory",{"_index":349,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["more",{"_index":981,"title":{},"body":{"index.html":{}}}],["multer",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":987,"title":{},"body":{"index.html":{}}}],["name",{"_index":85,"title":{},"body":{"guards/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserDetails.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["name'})@prop({required",{"_index":706,"title":{},"body":{"classes/User.html":{}}}],["name:'recfile',maxcount",{"_index":468,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["nest",{"_index":912,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestfactory.create(appmodule",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestframework",{"_index":991,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"guards/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":669,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":100,"title":{},"body":{"guards/Auth.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ReceiptModule.html":{},"guards/RolesGuard.html":{}}}],["nestjs/mongoose",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"injectables/MongooseConfigService.html":{},"classes/Receipt.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"classes/Tags.html":{},"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":98,"title":{},"body":{"guards/Auth.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":449,"title":{},"body":{"controllers/ReceiptController.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":896,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":30,"title":{},"body":{"classes/AddRolleDto.html":{},"controllers/AuthController.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":117,"title":{},"body":{"guards/Auth.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/ReceiptService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news",{"_index":608,"title":{},"body":{"controllers/RoleController.html":{}}}],["newsuserdto",{"_index":140,"title":{"classes/NewsUserdto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/NewsUserdto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newuser",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["next",{"_index":913,"title":{},"body":{"dependencies.html":{}}}],["nextui",{"_index":659,"title":{},"body":{"classes/RoleUser.html":{}}}],["nexxs",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["node.js",{"_index":939,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":822,"title":{},"body":{"injectables/UserService.html":{}}}],["npm",{"_index":951,"title":{},"body":{"index.html":{}}}],["null",{"_index":842,"title":{},"body":{"injectables/UserService.html":{}}}],["number",{"_index":374,"title":{},"body":{"classes/Receipt.html":{},"controllers/ReceiptController.html":{}}}],["object",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objectid",{"_index":427,"title":{},"body":{"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"classes/TagsDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["observable",{"_index":94,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{}}}],["offset",{"_index":431,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["ok",{"_index":588,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["open",{"_index":969,"title":{},"body":{"index.html":{}}}],["optional",{"_index":86,"title":{},"body":{"guards/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/NewsUserdto.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["org/react",{"_index":660,"title":{},"body":{"classes/RoleUser.html":{}}}],["out",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/ReceiptModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":996,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":892,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ReceiptController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["param('id",{"_index":784,"title":{},"body":{"controllers/UserController.html":{}}}],["parameters",{"_index":84,"title":{},"body":{"guards/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["parametr",{"_index":616,"title":{},"body":{"controllers/RoleController.html":{}}}],["passport",{"_index":325,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":322,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":328,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{},"classes/User.html":{}}}],["password'})@prop({required",{"_index":709,"title":{},"body":{"classes/User.html":{}}}],["path",{"_index":292,"title":{},"body":{"injectables/FileService.html":{}}}],["path.resolve(__dirname",{"_index":304,"title":{},"body":{"injectables/FileService.html":{}}}],["payload",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["pcrypt",{"_index":917,"title":{},"body":{"dependencies.html":{}}}],["pdf",{"_index":927,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":358,"title":{},"body":{"classes/NewsUserdto.html":{},"classes/User.html":{}}}],["please",{"_index":979,"title":{},"body":{"index.html":{}}}],["porst",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["port",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ReceiptController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["post('')@apioperation({summary",{"_index":422,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["post('/login",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/tags",{"_index":492,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["post('roles",{"_index":773,"title":{},"body":{"controllers/UserController.html":{}}}],["post('roles')@roles('admin')@apioperation({summary",{"_index":726,"title":{},"body":{"controllers/UserController.html":{}}}],["post('update",{"_index":780,"title":{},"body":{"controllers/UserController.html":{}}}],["post('update')@apioperation({summary",{"_index":745,"title":{},"body":{"controllers/UserController.html":{}}}],["post('users",{"_index":472,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["post('users')@apioperation({summary",{"_index":415,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["post()@apioperation({summary",{"_index":607,"title":{},"body":{"controllers/RoleController.html":{}}}],["poyload",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["prefix",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ReceiptController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["price",{"_index":248,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["price'})@prop({required",{"_index":375,"title":{},"body":{"classes/Receipt.html":{}}}],["private",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{}}}],["process.env.databese_name",{"_index":355,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["process.env.port",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.server_url",{"_index":353,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["production",{"_index":959,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":938,"title":{},"body":{"index.html":{}}}],["project",{"_index":970,"title":{},"body":{"index.html":{}}}],["promise",{"_index":93,"title":{},"body":{"guards/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/ReceiptService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{}}}],["prop",{"_index":391,"title":{},"body":{"classes/Receipt.html":{},"classes/Role.html":{},"classes/RoleUser.html":{},"classes/Tags.html":{},"classes/User.html":{}}}],["prop({required",{"_index":398,"title":{},"body":{"classes/Receipt.html":{},"classes/Role.html":{},"classes/Tags.html":{},"classes/User.html":{}}}],["prop({type",{"_index":383,"title":{},"body":{"classes/Receipt.html":{},"classes/Role.html":{},"classes/RoleUser.html":{},"classes/Tags.html":{},"classes/User.html":{}}}],["properties",{"_index":9,"title":{"properties.html":{}},"body":{"classes/AddRolleDto.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"classes/Role.html":{},"classes/RoleUser.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"interfaces/UserDetails.html":{},"properties.html":{}}}],["providers",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/ReceiptModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{}}}],["providers:[receiptservice",{"_index":513,"title":{},"body":{"modules/ReceiptModule.html":{}}}],["purc_date",{"_index":249,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["purchase",{"_index":262,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["purchase'})@prop({required",{"_index":377,"title":{},"body":{"classes/Receipt.html":{}}}],["query",{"_index":441,"title":{},"body":{"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{}}}],["query('count",{"_index":478,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["query('offset",{"_index":479,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["read",{"_index":980,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":10,"title":{},"body":{"classes/AddRolleDto.html":{},"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"classes/LoginUserdto.html":{},"classes/TagsDto.html":{},"injectables/UserService.html":{}}}],["receip",{"_index":568,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["receip.save",{"_index":578,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["receip.tags.push(tags.id",{"_index":577,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["receips",{"_index":563,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["receips._id",{"_index":566,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["receipt",{"_index":297,"title":{"classes/Receipt.html":{}},"body":{"injectables/FileService.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"classes/Tags.html":{},"classes/User.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["receipt'})@apiresponse({status",{"_index":423,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["receipt.controller",{"_index":499,"title":{},"body":{"modules/ReceiptModule.html":{}}}],["receipt.name",{"_index":506,"title":{},"body":{"modules/ReceiptModule.html":{}}}],["receipt.schema",{"_index":689,"title":{},"body":{"classes/Tags.html":{}}}],["receipt.service",{"_index":446,"title":{},"body":{"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{}}}],["receipt/receipt.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["receipt/schemas/receipt.schema",{"_index":690,"title":{},"body":{"classes/Tags.html":{},"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["receipt[]'})@prop({type",{"_index":712,"title":{},"body":{"classes/User.html":{}}}],["receiptcontroller",{"_index":405,"title":{"controllers/ReceiptController.html":{}},"body":{"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"coverage.html":{}}}],["receiptmodel",{"_index":524,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["receiptmodule",{"_index":42,"title":{"modules/ReceiptModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ReceiptModule.html":{},"modules.html":{},"overview.html":{}}}],["receipts",{"_index":256,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["receipts'})@prop",{"_index":372,"title":{},"body":{"classes/Receipt.html":{}}}],["receipts.file.jpg",{"_index":264,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["receiptschema",{"_index":403,"title":{},"body":{"classes/Receipt.html":{},"modules/ReceiptModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["receiptservice",{"_index":445,"title":{"injectables/ReceiptService.html":{}},"body":{"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"coverage.html":{},"overview.html":{}}}],["receiptsid",{"_index":370,"title":{},"body":{"classes/Receipt.html":{}}}],["receipt})@delete(':id')@useguards(jwtguard.auth",{"_index":428,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["receipt})@get('/search",{"_index":439,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["receipt})@get(':id')@useguards(jwtguard.auth",{"_index":436,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["receipt})@get()@useguards(jwtguard.auth",{"_index":432,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["receipt})@useguards(jwtguard.auth)@roles('shop')@useinterceptors(undefined",{"_index":419,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["receipt})@useguards(jwtguard.auth)@useinterceptors(undefined",{"_index":424,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["recept",{"_index":797,"title":{},"body":{"modules/UserModule.html":{}}}],["receptdocument",{"_index":395,"title":{},"body":{"classes/Receipt.html":{},"injectables/ReceiptService.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["receptid",{"_index":682,"title":{},"body":{"classes/Tags.html":{},"classes/TagsDto.html":{}}}],["receptmodel",{"_index":804,"title":{},"body":{"injectables/UserService.html":{}}}],["recepts",{"_index":554,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["recepts.$set('user",{"_index":557,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["recepts.save",{"_index":559,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["recfile",{"_index":250,"title":{},"body":{"classes/CreateReceiptDto.html":{},"injectables/FileService.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"miscellaneous/enumerations.html":{}}}],["recfile:any):promise",{"_index":549,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["recfile:uplfile",{"_index":556,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["recursive",{"_index":308,"title":{},"body":{"injectables/FileService.html":{}}}],["ref",{"_index":387,"title":{},"body":{"classes/Receipt.html":{},"classes/Role.html":{},"classes/RoleUser.html":{},"classes/Tags.html":{},"classes/User.html":{}}}],["ref:'receipt",{"_index":691,"title":{},"body":{"classes/Tags.html":{},"classes/User.html":{}}}],["ref:'tags",{"_index":400,"title":{},"body":{"classes/Receipt.html":{}}}],["ref:'user",{"_index":402,"title":{},"body":{"classes/Receipt.html":{}}}],["reflect",{"_index":919,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":666,"title":{},"body":{"guards/RolesGuard.html":{}}}],["regax",{"_index":570,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["regexp(query",{"_index":571,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["register",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(user",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(userdto",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["registered",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["registrattion",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["removefile",{"_index":285,"title":{},"body":{"injectables/FileService.html":{}}}],["removefile(filename",{"_index":288,"title":{},"body":{"injectables/FileService.html":{}}}],["repository",{"_index":949,"title":{},"body":{"index.html":{}}}],["req",{"_index":106,"title":{},"body":{"guards/Auth.html":{},"controllers/ReceiptController.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{}}}],["req.headers.authorization",{"_index":110,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{}}}],["req.token",{"_index":122,"title":{},"body":{"guards/Auth.html":{},"controllers/ReceiptController.html":{}}}],["req.user",{"_index":120,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{}}}],["request",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requiredroles",{"_index":671,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.includes(role.value",{"_index":677,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requst",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["res",{"_index":338,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/ReceiptController.html":{}}}],["reset",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/ReceiptModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["results",{"_index":32,"title":{},"body":{"classes/AddRolleDto.html":{},"modules/AppModule.html":{},"guards/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserdto.html":{},"injectables/MongooseConfigService.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"guards/RolesGuard.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserDetails.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":121,"title":{},"body":{"guards/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":91,"title":{},"body":{"guards/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/MongooseConfigService.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":922,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":23,"title":{"classes/Role.html":{}},"body":{"classes/AddRolleDto.html":{},"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role'})@apiresponse({status",{"_index":609,"title":{},"body":{"controllers/RoleController.html":{}}}],["role'})@prop({required",{"_index":592,"title":{},"body":{"classes/Role.html":{}}}],["role.controller",{"_index":636,"title":{},"body":{"modules/RoleModule.html":{}}}],["role.dto",{"_index":621,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["role.dto.ts",{"_index":7,"title":{},"body":{"classes/AddRolleDto.html":{},"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:5",{"_index":27,"title":{},"body":{"classes/AddRolleDto.html":{},"classes/CreateRoleDto.html":{}}}],["role.dto.ts:7",{"_index":25,"title":{},"body":{"classes/AddRolleDto.html":{},"classes/CreateRoleDto.html":{}}}],["role.id",{"_index":830,"title":{},"body":{"injectables/UserService.html":{}}}],["role.schema",{"_index":658,"title":{},"body":{"classes/RoleUser.html":{}}}],["role.service",{"_index":619,"title":{},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{}}}],["role/role.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["role/role.service",{"_index":823,"title":{},"body":{"injectables/UserService.html":{}}}],["role/schema/role.schema",{"_index":716,"title":{},"body":{"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["role[]'})@prop({type",{"_index":714,"title":{},"body":{"classes/User.html":{}}}],["rolecontroller",{"_index":602,"title":{"controllers/RoleController.html":{}},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{},"coverage.html":{}}}],["roledocument",{"_index":599,"title":{},"body":{"classes/Role.html":{},"injectables/RoleService.html":{},"miscellaneous/typealiases.html":{}}}],["roleid",{"_index":655,"title":{},"body":{"classes/RoleUser.html":{}}}],["rolemodule",{"_index":43,"title":{"modules/RoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["rolerepository",{"_index":643,"title":{},"body":{"injectables/RoleService.html":{}}}],["roles",{"_index":458,"title":{},"body":{"controllers/ReceiptController.html":{},"controllers/RoleController.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"interfaces/UserDetails.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles'})@apiresponse({status",{"_index":728,"title":{},"body":{"controllers/UserController.html":{}}}],["roles('admin",{"_index":770,"title":{},"body":{"controllers/UserController.html":{}}}],["roles('shop",{"_index":473,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["roles_key",{"_index":670,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roleschema",{"_index":600,"title":{},"body":{"classes/Role.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roleservice",{"_index":618,"title":{"injectables/RoleService.html":{}},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["roleservice:roleservice",{"_index":625,"title":{},"body":{"controllers/RoleController.html":{}}}],["rolesguard",{"_index":664,"title":{"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["roleuser",{"_index":653,"title":{"classes/RoleUser.html":{}},"body":{"classes/RoleUser.html":{},"coverage.html":{}}}],["roleuserdocument",{"_index":661,"title":{},"body":{"classes/RoleUser.html":{},"miscellaneous/typealiases.html":{}}}],["roleuserschema",{"_index":662,"title":{},"body":{"classes/RoleUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role})@get",{"_index":612,"title":{},"body":{"controllers/RoleController.html":{}}}],["run",{"_index":955,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":101,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["rīga",{"_index":359,"title":{},"body":{"classes/NewsUserdto.html":{},"classes/User.html":{}}}],["scalable",{"_index":943,"title":{},"body":{"index.html":{}}}],["schema",{"_index":392,"title":{},"body":{"classes/Receipt.html":{},"classes/Role.html":{},"classes/RoleUser.html":{},"classes/Tags.html":{},"classes/User.html":{}}}],["schema/role.schema",{"_index":622,"title":{},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{}}}],["schema:receiptschema",{"_index":507,"title":{},"body":{"modules/ReceiptModule.html":{},"modules/UserModule.html":{}}}],["schema:roleschema",{"_index":637,"title":{},"body":{"modules/RoleModule.html":{},"modules/UserModule.html":{}}}],["schema:tagsschema",{"_index":509,"title":{},"body":{"modules/ReceiptModule.html":{}}}],["schema:userschema",{"_index":511,"title":{},"body":{"modules/ReceiptModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{}}}],["schemafactory",{"_index":393,"title":{},"body":{"classes/Receipt.html":{},"classes/Role.html":{},"classes/RoleUser.html":{},"classes/Tags.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(receipt",{"_index":404,"title":{},"body":{"classes/Receipt.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(role",{"_index":601,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(roleuser",{"_index":663,"title":{},"body":{"classes/RoleUser.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(tags",{"_index":692,"title":{},"body":{"classes/Tags.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":718,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/receipt.schema",{"_index":457,"title":{},"body":{"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{}}}],["schemas/tag.schema",{"_index":542,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["schemas/tags.schema",{"_index":502,"title":{},"body":{"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{}}}],["schemas/user.schema",{"_index":755,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["search",{"_index":412,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["search(@query('query",{"_index":483,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["search(query",{"_index":438,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["searh",{"_index":516,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["searh(query",{"_index":535,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["searh(query:string",{"_index":567,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["secret",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret:'secret",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretkey",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":333,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["send",{"_index":587,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["sendreceipt",{"_index":585,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["server",{"_index":944,"title":{},"body":{"index.html":{}}}],["setdescription('documentation",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(roles_key",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settitle('warranty",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setversion('1.0",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shop",{"_index":268,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["shop'})@prop({required",{"_index":381,"title":{},"body":{"classes/Receipt.html":{}}}],["shop_name",{"_index":251,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["side",{"_index":945,"title":{},"body":{"index.html":{}}}],["sign",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["signoptions",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{}}}],["sony",{"_index":254,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddRolleDto.html":{},"modules/AppModule.html":{},"guards/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserdto.html":{},"injectables/MongooseConfigService.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"guards/RolesGuard.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserDetails.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["spec",{"_index":926,"title":{},"body":{"dependencies.html":{}}}],["sponsors",{"_index":973,"title":{},"body":{"index.html":{}}}],["src/.../constants.ts",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../file.service.ts",{"_index":935,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../receipt.schema.ts",{"_index":1007,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../role.schema.ts",{"_index":1008,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../roles",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roleuser.schema.ts",{"_index":1009,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../tags.schema.ts",{"_index":1010,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.decorator.ts",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":1011,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:13",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:19",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:26",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:41",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:51",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:60",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:73",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":872,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/guards/jwt.guard.ts",{"_index":77,"title":{},"body":{"guards/Auth.html":{},"coverage.html":{}}}],["src/auth/guards/jwt.guard.ts:13",{"_index":89,"title":{},"body":{"guards/Auth.html":{}}}],["src/auth/guards/jwt.guard.ts:9",{"_index":83,"title":{},"body":{"guards/Auth.html":{}}}],["src/auth/guards/jwt.strategy.ts",{"_index":315,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/guards/jwt.strategy.ts:20",{"_index":320,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/guards/jwt.strategy.ts:8",{"_index":318,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/guards/roles",{"_index":876,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/guards/roles.guard.ts",{"_index":665,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts:15",{"_index":667,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/guards/roles.guard.ts:20",{"_index":668,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/config/mongoose.configservice.ts",{"_index":345,"title":{},"body":{"injectables/MongooseConfigService.html":{},"coverage.html":{}}}],["src/config/mongoose.configservice.ts:8",{"_index":347,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["src/file/file.module.ts",{"_index":281,"title":{},"body":{"modules/FileModule.html":{}}}],["src/file/file.service.ts",{"_index":283,"title":{},"body":{"injectables/FileService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/file/file.service.ts:15",{"_index":287,"title":{},"body":{"injectables/FileService.html":{}}}],["src/file/file.service.ts:33",{"_index":289,"title":{},"body":{"injectables/FileService.html":{}}}],["src/main.ts",{"_index":879,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/receipt/dto/create_receipt.dto.ts",{"_index":247,"title":{},"body":{"classes/CreateReceiptDto.html":{},"coverage.html":{}}}],["src/receipt/dto/create_receipt.dto.ts:11",{"_index":259,"title":{},"body":{"classes/CreateReceiptDto.html":{}}}],["src/receipt/dto/create_receipt.dto.ts:13",{"_index":263,"title":{},"body":{"classes/CreateReceiptDto.html":{}}}],["src/receipt/dto/create_receipt.dto.ts:15",{"_index":275,"title":{},"body":{"classes/CreateReceiptDto.html":{}}}],["src/receipt/dto/create_receipt.dto.ts:17",{"_index":266,"title":{},"body":{"classes/CreateReceiptDto.html":{}}}],["src/receipt/dto/create_receipt.dto.ts:5",{"_index":271,"title":{},"body":{"classes/CreateReceiptDto.html":{}}}],["src/receipt/dto/create_receipt.dto.ts:7",{"_index":257,"title":{},"body":{"classes/CreateReceiptDto.html":{}}}],["src/receipt/dto/create_receipt.dto.ts:9",{"_index":269,"title":{},"body":{"classes/CreateReceiptDto.html":{}}}],["src/receipt/dto/tags.dto.ts",{"_index":693,"title":{},"body":{"classes/TagsDto.html":{},"coverage.html":{}}}],["src/receipt/dto/tags.dto.ts:4",{"_index":696,"title":{},"body":{"classes/TagsDto.html":{}}}],["src/receipt/dto/tags.dto.ts:5",{"_index":694,"title":{},"body":{"classes/TagsDto.html":{}}}],["src/receipt/dto/tags.dto.ts:6",{"_index":695,"title":{},"body":{"classes/TagsDto.html":{}}}],["src/receipt/receipt.controller.ts",{"_index":406,"title":{},"body":{"controllers/ReceiptController.html":{},"coverage.html":{}}}],["src/receipt/receipt.controller.ts:42",{"_index":425,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["src/receipt/receipt.controller.ts:59",{"_index":420,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["src/receipt/receipt.controller.ts:68",{"_index":433,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["src/receipt/receipt.controller.ts:81",{"_index":440,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["src/receipt/receipt.controller.ts:88",{"_index":437,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["src/receipt/receipt.controller.ts:95",{"_index":429,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["src/receipt/receipt.module.ts",{"_index":498,"title":{},"body":{"modules/ReceiptModule.html":{}}}],["src/receipt/receipt.service.ts",{"_index":514,"title":{},"body":{"injectables/ReceiptService.html":{},"coverage.html":{}}}],["src/receipt/receipt.service.ts:16",{"_index":523,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["src/receipt/receipt.service.ts:26",{"_index":528,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["src/receipt/receipt.service.ts:39",{"_index":533,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["src/receipt/receipt.service.ts:45",{"_index":534,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["src/receipt/receipt.service.ts:50",{"_index":531,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["src/receipt/receipt.service.ts:54",{"_index":536,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["src/receipt/receipt.service.ts:60",{"_index":530,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["src/receipt/receipt.service.ts:73",{"_index":526,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["src/receipt/schemas/receipt.schema.ts",{"_index":367,"title":{},"body":{"classes/Receipt.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/receipt/schemas/receipt.schema.ts:12",{"_index":371,"title":{},"body":{"classes/Receipt.html":{}}}],["src/receipt/schemas/receipt.schema.ts:16",{"_index":373,"title":{},"body":{"classes/Receipt.html":{}}}],["src/receipt/schemas/receipt.schema.ts:20",{"_index":382,"title":{},"body":{"classes/Receipt.html":{}}}],["src/receipt/schemas/receipt.schema.ts:24",{"_index":376,"title":{},"body":{"classes/Receipt.html":{}}}],["src/receipt/schemas/receipt.schema.ts:28",{"_index":380,"title":{},"body":{"classes/Receipt.html":{}}}],["src/receipt/schemas/receipt.schema.ts:32",{"_index":378,"title":{},"body":{"classes/Receipt.html":{}}}],["src/receipt/schemas/receipt.schema.ts:36",{"_index":390,"title":{},"body":{"classes/Receipt.html":{}}}],["src/receipt/schemas/receipt.schema.ts:39",{"_index":385,"title":{},"body":{"classes/Receipt.html":{}}}],["src/receipt/schemas/receipt.schema.ts:43",{"_index":388,"title":{},"body":{"classes/Receipt.html":{}}}],["src/receipt/schemas/tags.schema.ts",{"_index":681,"title":{},"body":{"classes/Tags.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/receipt/schemas/tags.schema.ts:16",{"_index":686,"title":{},"body":{"classes/Tags.html":{}}}],["src/receipt/schemas/tags.schema.ts:19",{"_index":684,"title":{},"body":{"classes/Tags.html":{}}}],["src/receipt/schemas/tags.schema.ts:22",{"_index":685,"title":{},"body":{"classes/Tags.html":{}}}],["src/role/dto/create",{"_index":277,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/role/role.controller.ts",{"_index":603,"title":{},"body":{"controllers/RoleController.html":{},"coverage.html":{}}}],["src/role/role.controller.ts:15",{"_index":611,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.controller.ts:22",{"_index":617,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.controller.ts:28",{"_index":613,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.module.ts",{"_index":635,"title":{},"body":{"modules/RoleModule.html":{}}}],["src/role/role.service.ts",{"_index":638,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["src/role/role.service.ts:11",{"_index":646,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:15",{"_index":645,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:19",{"_index":648,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:8",{"_index":642,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/schema/role.schema.ts",{"_index":591,"title":{},"body":{"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/role/schema/role.schema.ts:13",{"_index":594,"title":{},"body":{"classes/Role.html":{}}}],["src/role/schema/role.schema.ts:18",{"_index":598,"title":{},"body":{"classes/Role.html":{}}}],["src/role/schema/role.schema.ts:23",{"_index":593,"title":{},"body":{"classes/Role.html":{}}}],["src/role/schema/role.schema.ts:27",{"_index":597,"title":{},"body":{"classes/Role.html":{}}}],["src/role/schema/roleuser.schema.ts",{"_index":654,"title":{},"body":{"classes/RoleUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/role/schema/roleuser.schema.ts:14",{"_index":657,"title":{},"body":{"classes/RoleUser.html":{}}}],["src/role/schema/roleuser.schema.ts:18",{"_index":656,"title":{},"body":{"classes/RoleUser.html":{}}}],["src/user/dto/add",{"_index":6,"title":{},"body":{"classes/AddRolleDto.html":{},"coverage.html":{}}}],["src/user/dto/createuser.dto.ts",{"_index":339,"title":{},"body":{"classes/LoginUserdto.html":{},"coverage.html":{}}}],["src/user/dto/createuser.dto.ts:5",{"_index":342,"title":{},"body":{"classes/LoginUserdto.html":{}}}],["src/user/dto/createuser.dto.ts:7",{"_index":344,"title":{},"body":{"classes/LoginUserdto.html":{}}}],["src/user/dto/newsuser.dto.ts",{"_index":356,"title":{},"body":{"classes/NewsUserdto.html":{},"coverage.html":{}}}],["src/user/dto/newsuser.dto.ts:10",{"_index":363,"title":{},"body":{"classes/NewsUserdto.html":{}}}],["src/user/dto/newsuser.dto.ts:12",{"_index":365,"title":{},"body":{"classes/NewsUserdto.html":{}}}],["src/user/dto/newsuser.dto.ts:14",{"_index":360,"title":{},"body":{"classes/NewsUserdto.html":{}}}],["src/user/dto/newsuser.dto.ts:6",{"_index":362,"title":{},"body":{"classes/NewsUserdto.html":{}}}],["src/user/dto/newsuser.dto.ts:8",{"_index":361,"title":{},"body":{"classes/NewsUserdto.html":{}}}],["src/user/schemas/user.schema.ts",{"_index":697,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/user/schemas/user.schema.ts:14",{"_index":705,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:17",{"_index":704,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:21",{"_index":707,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:25",{"_index":710,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:30",{"_index":701,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:33",{"_index":711,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:35",{"_index":702,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:39",{"_index":715,"title":{},"body":{"classes/User.html":{}}}],["src/user/schemas/user.schema.ts:43",{"_index":713,"title":{},"body":{"classes/User.html":{}}}],["src/user/user",{"_index":789,"title":{},"body":{"interfaces/UserDetails.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":719,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:27",{"_index":739,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:37",{"_index":743,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:48",{"_index":735,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:56",{"_index":729,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:64",{"_index":733,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:75",{"_index":748,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.decorator.ts",{"_index":888,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/user/user.module.ts",{"_index":795,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":798,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:19",{"_index":805,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:27",{"_index":810,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:36",{"_index":818,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:41",{"_index":819,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:46",{"_index":811,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:51",{"_index":807,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:59",{"_index":813,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:62",{"_index":817,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:67",{"_index":815,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:73",{"_index":820,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:93",{"_index":808,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":880,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["start:dev",{"_index":958,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":960,"title":{},"body":{"index.html":{}}}],["started",{"_index":937,"title":{"index.html":{}},"body":{"miscellaneous/variables.html":{}}}],["starter",{"_index":948,"title":{},"body":{"index.html":{}}}],["statements",{"_index":868,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":305,"title":{},"body":{"injectables/FileService.html":{},"dependencies.html":{}}}],["stay",{"_index":983,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":324,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"classes/AddRolleDto.html":{},"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"injectables/FileService.html":{},"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserDetails.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":329,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":974,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":994,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":925,"title":{},"body":{"dependencies.html":{}}}],["swaggermodule.createdocument(app",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup('api/docs",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":891,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":890,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":540,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["tagdocument",{"_index":541,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["tagmodel",{"_index":519,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["tags",{"_index":368,"title":{"classes/Tags.html":{}},"body":{"classes/Receipt.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"classes/Tags.html":{},"coverage.html":{}}}],["tags.$set('receiptid',[receip",{"_index":576,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["tags.name",{"_index":508,"title":{},"body":{"modules/ReceiptModule.html":{}}}],["tags.save",{"_index":579,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["tags.schema",{"_index":394,"title":{},"body":{"classes/Receipt.html":{}}}],["tags/tags.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["tags/tags.schema",{"_index":544,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["tagsdocument",{"_index":543,"title":{},"body":{"injectables/ReceiptService.html":{},"classes/Tags.html":{},"miscellaneous/typealiases.html":{}}}],["tagsdto",{"_index":455,"title":{"classes/TagsDto.html":{}},"body":{"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"classes/TagsDto.html":{},"coverage.html":{}}}],["tagsmodule",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["tagsname",{"_index":683,"title":{},"body":{"classes/Tags.html":{},"classes/TagsDto.html":{}}}],["tagsschema",{"_index":501,"title":{},"body":{"modules/ReceiptModule.html":{},"classes/Tags.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["test",{"_index":963,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":966,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":965,"title":{},"body":{"index.html":{}}}],["tests",{"_index":962,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":972,"title":{},"body":{"index.html":{}}}],["this._getuserdetails(user",{"_index":843,"title":{},"body":{"injectables/UserService.html":{}}}],["this.authservice.hashedpassword(password",{"_index":857,"title":{},"body":{"injectables/UserService.html":{}}}],["this.authservice.login(userdto",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(user",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.create(dto.usersemail",{"_index":586,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["this.fileservise.createfile(recfile",{"_index":552,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["this.findbyemail(dto.email",{"_index":846,"title":{},"body":{"injectables/UserService.html":{}}}],["this.generatetoken(user",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.hashedpassword(userdto.password",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(token",{"_index":119,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{}}}],["this.receiptmodel.create({...dto",{"_index":555,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["this.receiptmodel.find",{"_index":569,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["this.receiptmodel.find({user",{"_index":562,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["this.receiptmodel.findbyid(dto",{"_index":573,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["this.receiptmodel.findbyid(id",{"_index":564,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["this.receiptmodel.findbyidanddelete(id",{"_index":565,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["this.receiptservice.addreceiptusers(dto",{"_index":476,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["this.receiptservice.create(req.user.email",{"_index":471,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["this.receiptservice.createtag(dto",{"_index":495,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["this.receiptservice.delete(id",{"_index":491,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["this.receiptservice.getall(req.user",{"_index":480,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["this.receiptservice.getone(id",{"_index":487,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["this.receiptservice.searh(query",{"_index":484,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["this.reflector.getallandoverride(roles_key",{"_index":672,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.rolerepository.create(dto",{"_index":651,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.find",{"_index":650,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.findone({value",{"_index":652,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.roleservice.createrole(dto",{"_index":627,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.getallrole",{"_index":631,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.getrolebyvalue(\"users",{"_index":827,"title":{},"body":{"injectables/UserService.html":{}}}],["this.roleservice.getrolebyvalue(dto.value",{"_index":861,"title":{},"body":{"injectables/UserService.html":{}}}],["this.roleservice.getrolebyvalue(value",{"_index":630,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.tagmodel.create({...dto",{"_index":575,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["this.usermodel.create(userdto",{"_index":828,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.find({include:{all:true",{"_index":832,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyid(dto.userid",{"_index":859,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyid(id",{"_index":833,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyid(id).exec",{"_index":840,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyid(id).populate('receipt",{"_index":839,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyidanddelete(id",{"_index":834,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findone({email",{"_index":838,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice._getuserdetails(newuser",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice._getuserdetails(user",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.create",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findbyemail(userdto.email",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservise.findbyemail(dto.usersemail",{"_index":581,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["this.userservise.findbyemail(email",{"_index":550,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["this.usersservice.addroles(dto",{"_index":775,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice.delete(req.user.id",{"_index":779,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice.getalluser",{"_index":772,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice.getuser(id",{"_index":766,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice.updateprofile(id,dto",{"_index":786,"title":{},"body":{"controllers/UserController.html":{}}}],["this.validateuser(userdto",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":116,"title":{},"body":{"guards/Auth.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/ReceiptService.html":{},"guards/RolesGuard.html":{},"injectables/UserService.html":{}}}],["timestamp",{"_index":687,"title":{},"body":{"classes/Tags.html":{},"classes/User.html":{}}}],["to'})@prop({type",{"_index":596,"title":{},"body":{"classes/Role.html":{}}}],["token",{"_index":114,"title":{},"body":{"guards/Auth.html":{},"injectables/AuthService.html":{},"controllers/ReceiptController.html":{},"guards/RolesGuard.html":{}}}],["touch",{"_index":984,"title":{},"body":{"index.html":{}}}],["true",{"_index":309,"title":{},"body":{"injectables/FileService.html":{},"classes/Role.html":{},"guards/RolesGuard.html":{},"classes/User.html":{}}}],["try",{"_index":108,"title":{},"body":{"guards/Auth.html":{},"injectables/FileService.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["tv",{"_index":255,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["twitter",{"_index":990,"title":{},"body":{"index.html":{}}}],["type",{"_index":13,"title":{},"body":{"classes/AddRolleDto.html":{},"guards/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/RoleUser.html":{},"guards/RolesGuard.html":{},"classes/Tags.html":{},"classes/TagsDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"interfaces/UserDetails.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type:[user",{"_index":769,"title":{},"body":{"controllers/UserController.html":{}}}],["type:user",{"_index":777,"title":{},"body":{"controllers/UserController.html":{}}}],["typealiases",{"_index":1005,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":688,"title":{},"body":{"classes/Tags.html":{},"classes/User.html":{},"dependencies.html":{}}}],["types",{"_index":538,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["typescript",{"_index":947,"title":{},"body":{"index.html":{}}}],["ui",{"_index":929,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":96,"title":{},"body":{"guards/Auth.html":{},"injectables/AuthService.html":{},"guards/RolesGuard.html":{}}}],["unauthorizedexception({message",{"_index":118,"title":{},"body":{"guards/Auth.html":{},"guards/RolesGuard.html":{}}}],["undefined",{"_index":384,"title":{},"body":{"classes/Receipt.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"classes/RoleUser.html":{},"classes/Tags.html":{},"classes/User.html":{}}}],["undefined})@roles('admin')@useguards(rolesguard)@get",{"_index":734,"title":{},"body":{"controllers/UserController.html":{}}}],["undefined})@useguards(jwtguard.auth)@httpcode(200",{"_index":747,"title":{},"body":{"controllers/UserController.html":{}}}],["unique",{"_index":341,"title":{},"body":{"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["unit",{"_index":961,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ReceiptController.html":{},"injectables/ReceiptService.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":1004,"title":{},"body":{"properties.html":{}}}],["up",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["update",{"_index":746,"title":{},"body":{"controllers/UserController.html":{}}}],["updateprofile",{"_index":724,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateprofile(@currentuser('id",{"_index":785,"title":{},"body":{"controllers/UserController.html":{}}}],["updateprofile(id",{"_index":744,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateprofile(id:string",{"_index":844,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(@uploadedfile",{"_index":783,"title":{},"body":{"controllers/UserController.html":{}}}],["uplfile",{"_index":551,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["uploadd",{"_index":313,"title":{},"body":{"injectables/FileService.html":{}}}],["uploadedfile",{"_index":442,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["uri",{"_index":352,"title":{},"body":{"injectables/MongooseConfigService.html":{}}}],["useclass",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{}}}],["useguards",{"_index":99,"title":{},"body":{"guards/Auth.html":{},"controllers/ReceiptController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard('jwt",{"_index":103,"title":{},"body":{"guards/Auth.html":{}}}],["useguards(jwtguard.auth",{"_index":466,"title":{},"body":{"controllers/ReceiptController.html":{},"controllers/UserController.html":{}}}],["useguards(rolesguard",{"_index":771,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors",{"_index":443,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["useinterceptors(fileinterceptor",{"_index":474,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["useinterceptors(fileinterceptor('aatar",{"_index":782,"title":{},"body":{"controllers/UserController.html":{}}}],["useinterceptors(fileinterceptor('recfile",{"_index":467,"title":{},"body":{"controllers/ReceiptController.html":{}}}],["usepipes",{"_index":749,"title":{},"body":{"controllers/UserController.html":{}}}],["user",{"_index":20,"title":{"classes/User.html":{}},"body":{"classes/AddRolleDto.html":{},"guards/Auth.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Receipt.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"classes/RoleUser.html":{},"guards/RolesGuard.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.$set('role",{"_index":829,"title":{},"body":{"injectables/UserService.html":{}}}],["user._id",{"_index":835,"title":{},"body":{"injectables/UserService.html":{}}}],["user.controller",{"_index":796,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator",{"_index":758,"title":{},"body":{"controllers/UserController.html":{}}}],["user.email",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.id",{"_index":837,"title":{},"body":{"injectables/UserService.html":{}}}],["user.name",{"_index":510,"title":{},"body":{"modules/ReceiptModule.html":{}}}],["user.password",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.receipt.push(recepts",{"_index":558,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["user.role",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role.some(role",{"_index":676,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user.role=[role",{"_index":831,"title":{},"body":{"injectables/UserService.html":{}}}],["user.save",{"_index":560,"title":{},"body":{"injectables/ReceiptService.html":{},"injectables/UserService.html":{}}}],["user.service",{"_index":751,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/dto/createuser.dto",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user/dto/newsuser.dto",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user/schemas/user.schema",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"classes/Receipt.html":{},"modules/ReceiptModule.html":{},"injectables/ReceiptService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"classes/RoleUser.html":{}}}],["user/user",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/user.controller",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ReceiptModule.html":{},"modules/RoleModule.html":{}}}],["user/user.service",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ReceiptService.html":{}}}],["user:string",{"_index":561,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["user@gmail.com",{"_index":340,"title":{},"body":{"classes/LoginUserdto.html":{},"classes/NewsUserdto.html":{},"classes/User.html":{}}}],["user[data",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercontroller",{"_index":55,"title":{"controllers/UserController.html":{}},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdetails",{"_index":208,"title":{"interfaces/UserDetails.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"interfaces/UserDetails.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userdocument",{"_index":539,"title":{},"body":{"injectables/ReceiptService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["userdocument):userdetails",{"_index":836,"title":{},"body":{"injectables/UserService.html":{}}}],["userdto",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["userdto.password",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":11,"title":{},"body":{"classes/AddRolleDto.html":{},"classes/RoleUser.html":{}}}],["usermodel",{"_index":520,"title":{},"body":{"injectables/ReceiptService.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":44,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ReceiptModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":26,"title":{},"body":{"classes/AddRolleDto.html":{},"injectables/AuthService.html":{},"classes/CreateReceiptDto.html":{},"classes/CreateRoleDto.html":{},"classes/NewsUserdto.html":{},"classes/Receipt.html":{},"controllers/ReceiptController.html":{},"classes/Role.html":{},"guards/RolesGuard.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["users'})@apiresponse({status",{"_index":417,"title":{},"body":{"controllers/ReceiptController.html":{},"controllers/UserController.html":{}}}],["users'})@prop({type",{"_index":386,"title":{},"body":{"classes/Receipt.html":{}}}],["users.email",{"_index":853,"title":{},"body":{"injectables/UserService.html":{}}}],["users.icons.jpg",{"_index":699,"title":{},"body":{"classes/User.html":{}}}],["users.name",{"_index":855,"title":{},"body":{"injectables/UserService.html":{}}}],["users.password",{"_index":852,"title":{},"body":{"injectables/UserService.html":{}}}],["users@gmail.com",{"_index":270,"title":{},"body":{"classes/CreateReceiptDto.html":{}}}],["userschema",{"_index":503,"title":{},"body":{"modules/ReceiptModule.html":{},"modules/RoleModule.html":{},"classes/User.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usersemail",{"_index":252,"title":{},"body":{"classes/CreateReceiptDto.html":{}}}],["userservice",{"_index":190,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/ReceiptService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userservise",{"_index":522,"title":{},"body":{"injectables/ReceiptService.html":{}}}],["usersid",{"_index":18,"title":{},"body":{"classes/AddRolleDto.html":{},"classes/Role.html":{}}}],["usersservice",{"_index":761,"title":{},"body":{"controllers/UserController.html":{}}}],["user})@useguards(jwtguard.auth",{"_index":732,"title":{},"body":{"controllers/UserController.html":{}}}],["uuid",{"_index":294,"title":{},"body":{"injectables/FileService.html":{}}}],["uuid.v4",{"_index":301,"title":{},"body":{"injectables/FileService.html":{}}}],["val_period",{"_index":253,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["validate",{"_index":316,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":319,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload:any",{"_index":335,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(userdto",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationpipe",{"_index":750,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":12,"title":{},"body":{"classes/AddRolleDto.html":{},"classes/CreateRoleDto.html":{},"classes/Role.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":873,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1012,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1002,"title":{},"body":{"properties.html":{}}}],["void",{"_index":291,"title":{},"body":{"injectables/FileService.html":{}}}],["warranty",{"_index":273,"title":{},"body":{"classes/CreateReceiptDto.html":{},"classes/Receipt.html":{}}}],["watch",{"_index":956,"title":{},"body":{"index.html":{}}}],["website",{"_index":988,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":977,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/ReceiptModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddRolleDto.html":{"url":"classes/AddRolleDto.html","title":"class - AddRolleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddRolleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/add-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                Userid\n                            \n                            \n                                    Readonly\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        Userid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'UsersId', description: 'User ID to assign a role to'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/add-role.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Users', description: 'Assign a role to a user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/add-role.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class AddRolleDto {\n\t@ApiProperty({example: 'Users', description: 'Assign a role to a user'})\n\treadonly value: string;\n\t@ApiProperty({example: 'UsersId', description: 'User ID to assign a role to'})\n\treadonly Userid: string; \n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nFileModule\n\nFileModule\n\nAppModule -->\n\nFileModule->AppModule\n\n\n\n\n\nReceiptModule\n\nReceiptModule\n\nAppModule -->\n\nReceiptModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            FileModule\n                        \n                        \n                            ReceiptModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { ReceiptModule } from \"./receipt/receipt.module\";\nimport { AuthModule } from './auth/auth.module';\n// import { UserController } from './user/user.controller';\nimport { UserModule } from './user/user.module';\nimport { RoleModule } from './role/role.module';\n// import { TagsModule } from './tags/tags.module';\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { FileModule } from './file/file.module';\nimport { MongooseConfigService } from \"./config/Mongoose.ConfigService\";\nimport configuration from \"./config/configuration\";\n\n\n@Module({\n    imports: [\n        MongooseModule.forRootAsync({\n            imports:[ConfigModule],\n            useClass: MongooseConfigService, \n        }),\n        ConfigModule.forRoot({\n            load: [configuration]\n        }),\n        ReceiptModule,\n        AuthModule,\n        UserModule,\n        RoleModule,\n        // TagsModule,\n        FileModule,\n        // ConfigService\n    ],    \n})\nexport class AppModule{} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/Auth.html":{"url":"guards/Auth.html","title":"guard - Auth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    Auth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/jwt.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/jwt.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/jwt.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { UseGuards } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { Observable } from 'rxjs';\n\n@Injectable()\n// export const Auth =()=>UseGuards(AuthGuard('jwt'))\nexport class Auth implements CanActivate {\n\tconstructor(private jwtService: JwtService) {\n    }\n\n    canActivate(context: ExecutionContext): boolean | Promise | Observable {\n        const req = context.switchToHttp().getRequest() \n        try {\n            const authHeader = req.headers.authorization;\n            const bearer = authHeader.split(' ')[0]\n            const token = authHeader.split(' ')[1]\n\n            if (bearer !== 'Bearer' || !token) {\n                throw new UnauthorizedException({message: 'Пользователь не авторизован!'})\n            }\n\n            const user = this.jwtService.verify(token);\n            req.user = user;\n            return (req.token= token);\n        } catch (e) {\n            throw new UnauthorizedException({message: 'Пользователь не авторизован'})\n        }\n    }\n\n}\n\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(userDto: LoginUserdto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'User sign in'})@Post('/login')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                LoginUserdto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(user: NewsUserdto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'User sign up '})@Post('/register')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                NewsUserdto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post } from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { NewsUserdto } from '../user/dto/newsuser.dto';\nimport { LoginUserdto } from '../user/dto/Createuser.dto';\nimport { AuthService } from './auth.service';\n@ApiTags('Autorization')\n@Controller('/auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @ApiOperation({summary: 'User sign up '})\n  @Post('/register')\n  register(@Body() user: NewsUserdto): Promise {\n    return this.authService.register(user);\n  }\n  @ApiOperation({summary:'User sign in'})\n  @Post('/login')\n  @HttpCode(HttpStatus.OK)\n  login(@Body() userDto: LoginUserdto) {\n    return this.authService.login(userDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport {JwtModule} from '@nestjs/jwt'\nimport { UserModule } from './../user/user.module';\nimport { Auth } from './guards/jwt.guard';\nimport { JwtStrategy } from './guards/jwt.strategy';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n\n@Module({\n  imports:[ \n    ConfigModule,\n    // UserModule,    \n    forwardRef(()=>UserModule),\n    JwtModule.registerAsync({\n\t     useFactory: () =>({\n          secret:'secret',\n          signOptions: {\n            expiresIn:'3600s'\n          }\n      }),\n    })\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, \n              Auth, JwtStrategy],\n  exports: [AuthService,JwtModule]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateToken\n                            \n                            \n                                    Async\n                                hashedPassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Private\n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateToken(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        hashedPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    hashedPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(userDto: LoginUserdto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                LoginUserdto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(userDto: Readonly)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:26\n                \n            \n\n\n            \n                \n                    This requst for registrattion users\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                            Readonly\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(userDto: LoginUserdto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                LoginUserdto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpException,\n  Injectable,\n  UnauthorizedException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\nimport { UserService } from './../user/user.service';\nimport { NewsUserdto } from './../user/dto/newsuser.dto';\nimport { UserDetails } from '../user/user-details.interface';\nimport { LoginUserdto } from '../user/dto/Createuser.dto';\nimport { User } from '../user/schemas/user.schema';\n@Injectable()\nexport class AuthService {\n  // constructor(){},\n  constructor(\n    private userService: UserService,\n    private jwtService: JwtService,\n  ) {}\n    /**\n   * This requst for registrattion users\n   * @param register this is the poyload for user \n   *\n  **/ \n  async register(userDto: Readonly): Promise {\n    const existingUser = await this.userService.findByEmail(userDto.email);\n    if (existingUser) {\n      throw new HttpException(\n        'user already registered',\n        HttpStatus.BAD_REQUEST,\n        );\n      }\n      const hashedPassword = await this.hashedPassword(userDto.password);\n      const newUser = await this.userService.create({\n        ...userDto,\n        password: hashedPassword,\n      });\n      return this.userService._getUserDetails(newUser);\n  }\n  async hashedPassword(password: string): Promise {\n    return bcrypt.hash(password, 12);\n  }\n  \n  // async doesPasswordMatch(\n  //   password: string,\n  //   hashedPassword: string,\n  //   ): Promise {\n  //     return bcrypt.compare(password, hashedPassword);\n  //   }\n    async login(userDto: LoginUserdto) {\n      const user = await this.validateUser(userDto);\n\n     \n      return {\n        users:  this.userService._getUserDetails(user),\n        accesToken:await this.generateToken(user)\n      }\n    }\n    private async validateUser(userDto: LoginUserdto) {\n      const user = await this.userService.findByEmail(userDto.email);\n      const doesPasswordMatch = await bcrypt.compare(\n        userDto.password,\n        user.password,\n        );\n        if (user && doesPasswordMatch) {\n          return user;\n        } \n        throw new UnauthorizedException({\n          message: 'Incorrect email and password',\n        });\n      }\n    async generateToken(user: User) {\n    \n      const payload = {id:user.id, email: user.email, role: user.role };\n      \n      const token = this.jwtService.sign(payload)\n    //  const token= [..., role: JSON[\"stringify\"](user.role)]\n      console.log(token +'nexxs')\n      return token\n    }\n    \n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReceiptDto.html":{"url":"classes/CreateReceiptDto.html","title":"class - CreateReceiptDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReceiptDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/receipt/dto/create_receipt.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                price\n                            \n                            \n                                    Readonly\n                                purc_date\n                            \n                            \n                                    Readonly\n                                recfile\n                            \n                            \n                                    Readonly\n                                shop_name\n                            \n                            \n                                    Readonly\n                                UsersEmail\n                            \n                            \n                                    Readonly\n                                val_period\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Sony tv ', description: 'Name receipts'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/dto/create_receipt.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '50', description: 'Price'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/dto/create_receipt.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        purc_date\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '21.12.2022', description: 'Date of purchase'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/dto/create_receipt.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        recfile\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'receipts.file.jpg', description: 'purchase document'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/dto/create_receipt.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        shop_name\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1a.lv', description: 'Shop'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/dto/create_receipt.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        UsersEmail\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'users@gmail.com ', description: 'Users email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/dto/create_receipt.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        val_period\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '21.12.2024', description: 'date of warranty lines'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/dto/create_receipt.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreateReceiptDto{\n\t@ApiProperty({example: 'users@gmail.com ', description: 'Users email'})\n    readonly UsersEmail;\n\t@ApiProperty({example: 'Sony tv ', description: 'Name receipts'})\n    readonly name;\n\t@ApiProperty({example: '1a.lv', description: 'Shop'})\n    readonly shop_name;\n\t@ApiProperty({example: '50', description: 'Price'})\n    readonly price;\n\t@ApiProperty({example: '21.12.2022', description: 'Date of purchase'})\n    readonly purc_date;     \n\t@ApiProperty({example: '21.12.2024', description: 'date of warranty lines'})\n    readonly val_period;\n\t@ApiProperty({example: 'receipts.file.jpg', description: 'purchase document'})\n    readonly recfile;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                description\n                            \n                            \n                                    Readonly\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Users', description: 'Role description'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/dto/create-role.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Users', description: 'Role name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/dto/create-role.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreateRoleDto{\n\t@ApiProperty({example: 'Users', description: 'Role name'}) \n\treadonly value: string;\n\t@ApiProperty({example: 'Users', description: 'Role description'}) \n\treadonly description?: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileModule.html":{"url":"modules/FileModule.html","title":"module - FileModule","body":"\n                   \n\n\n\n\n    Modules\n    FileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FileModule\n\n\n\ncluster_FileModule_providers\n\n\n\n\nFileService\n\nFileService\n\n\n\nFileModule\n\nFileModule\n\nFileModule -->\n\nFileService->FileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/file/file.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FileService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FileService } from './file.service';\n\n@Module({\n  providers: [FileService],\n  // exports: [FileService]\n})\nexport class FileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/file/file.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createFile\n                            \n                            \n                                removeFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    createFile(file)\n                \n            \n\n\n            \n                \n                    Defined in src/file/file.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFile\n                        \n                    \n                \n            \n            \n                \nremoveFile(fileName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/file/file.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {HttpException, HttpStatus, Injectable} from \"@nestjs/common\";\nimport * as path from 'path'\nimport * as fs from 'fs'\nimport * as uuid from 'uuid'\n\nexport enum FileType {\n    RECEIPT = 'recfile'\n}\n\n@Injectable()\nexport class FileService{\n\n    //  createFile(type:FileType, file){\n    //  createFile(file){\n    async createFile(file): Promise {\n        try {\n            // const fileExtension = file.originalname.splits('.').pop()\n            // const fileName = uuid.v4() + '.' + fileExtension\n            const fileName = uuid.v4() + '.jpg' \n            const filePath = path.resolve(__dirname, '..', 'static')\n            if(!fs.existsSync(filePath)) {\n                fs.mkdirSync(filePath, {recursive: true})\n            }\n            fs.writeFileSync(path.join(filePath, fileName), file.buffer)\n            // fs.writeFileSync(path.join(filePath, fileName), file.buffer)\n            // return type + '/' + fileName\n            return fileName\n        } catch (e) {\n            throw new HttpException('Not uploadd file', HttpStatus.INTERNAL_SERVER_ERROR)\n        }\n    }\n\n    removeFile(fileName: string) {\n\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, AuthService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/jwt.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        AuthService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/jwt.strategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { AuthService } from './../auth.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy){\n\tconstructor(\n\t\tconfigService: ConfigService,\n\t\tAuthService: AuthService\n\t\t){\n\t\tsuper({\n\t\t\tjwtFromRequest:ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tignoreExpiration: false,\n\t\t\tsecretOrKey: configService.get('JWT_SECRET'), \t\t\n\t\t})\n\t}\n\n\tasync validate(payload:any): Promise{\n\t\t// const {iat, exp, ...res} = payload\n\t\t// return res\n\t\treturn {...payload}\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserdto.html":{"url":"classes/LoginUserdto.html","title":"class - LoginUserdto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserdto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/Createuser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@gmail.com', description: 'Unique email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/Createuser.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '12345', description: 'Password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/Createuser.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class LoginUserdto{\n\t@ApiProperty({example: 'user@gmail.com', description: 'Unique email'},)\n\treadonly email: string;\n\t@ApiProperty({example: '12345', description: 'Password'})\n\treadonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MongooseConfigService.html":{"url":"injectables/MongooseConfigService.html","title":"injectable - MongooseConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MongooseConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/Mongoose.ConfigService.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMongooseOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMongooseOptions\n                        \n                    \n                \n            \n            \n                \ncreateMongooseOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/config/Mongoose.ConfigService.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     MongooseModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport {MongooseModuleOptions, MongooseOptionsFactory } from '@nestjs/mongoose';\n// import { MongooseOptions } from \"mongoose\";\n\n@Injectable()\n\nexport class MongooseConfigService implements MongooseOptionsFactory{\n\tcreateMongooseOptions(): MongooseModuleOptions {\n\t\treturn{\n\t\t\turi: process.env.SERVER_URL,\n\t\t\tdbName: process.env.DATABESE_NAME\n\t\t\n\t\t}\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsUserdto.html":{"url":"classes/NewsUserdto.html","title":"class - NewsUserdto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsUserdto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/newsuser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                City\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        City\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Rīga', description: 'City'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/newsuser.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@gmail.com', description: 'Unique email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/newsuser.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'users', description: 'Users name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/newsuser.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '12345', description: 'Password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/newsuser.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '+37129994512', description: 'Phone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/newsuser.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiTags } from \"@nestjs/swagger\";\n\n@ApiTags('fhg')\nexport class NewsUserdto{\n\t@ApiProperty({example: 'users', description: 'Users name'})\n\tname?: string; \n\t@ApiProperty({example: 'user@gmail.com', description: 'Unique email'})\n\temail: string;\n\t@ApiProperty({example: '12345', description: 'Password'})\n\tpassword: string;\n\t@ApiProperty({example: '+37129994512', description: 'Phone'})\n\tphone?: string;\n\t@ApiProperty({example: 'Rīga', description: 'City'})\n\tCity?: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Receipt.html":{"url":"classes/Receipt.html","title":"class - Receipt","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Receipt\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/receipt/schemas/receipt.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                purc_date\n                            \n                            \n                                recfile\n                            \n                            \n                                shop_name\n                            \n                            \n                                tags\n                            \n                            \n                                user\n                            \n                            \n                                val_period\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Id', description: 'receiptsId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/schemas/receipt.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Sony tv ', description: 'Name receipts'})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/schemas/receipt.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '50', description: 'Price'})@Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/schemas/receipt.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        purc_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '21.12.2022', description: 'Date of purchase'})@Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/schemas/receipt.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'receipts.file.jpg', description: 'purchase document'})@Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/schemas/receipt.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shop_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1a.lv', description: 'Shop'})@Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/schemas/receipt.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tags[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/schemas/receipt.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Users[]', description: 'Users'})@Prop({type: undefined, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/schemas/receipt.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        val_period\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '21.12.2024', description: 'date of warranty lines'})@Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/schemas/receipt.schema.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { Document } from 'mongoose';\nimport { Tags } from './tags.schema';\nimport { User } from '../../user/schemas/user.schema';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport type ReceptDocument = Receipt & mongoose.Document;\n\n@Schema()\nexport class Receipt {\n\t@ApiProperty({example: 'Id', description: 'receiptsId'})\n  id:mongoose.Types.ObjectId;\n\n\t@ApiProperty({example: 'Sony tv ', description: 'Name receipts'})\n  @Prop()\n  name: string;\n\n\t@ApiProperty({example: '1a.lv', description: 'Shop'})\n  @Prop({required: false})\n  shop_name: string;\n  \n\t@ApiProperty({example: '50', description: 'Price'})\n  @Prop({required: false})\n  price: number;\n\n\t@ApiProperty({example: 'receipts.file.jpg', description: 'purchase document'})\n  @Prop({required: false})\n  recfile: string;\n\n\t@ApiProperty({example: '21.12.2022', description: 'Date of purchase'})\n  @Prop({required: false}) \n  purc_date: string;\n  \n\t@ApiProperty({example: '21.12.2024', description: 'date of warranty lines'})\n  @Prop({required: false})\n  val_period: string;\n  \n  @Prop({type: [{type: mongoose.Schema.Types.ObjectId, ref:'Tags'}]})\n  tags: Tags[];\n  \n\t@ApiProperty({example: 'Users[]', description: 'Users'})\n  @Prop({type: mongoose.Schema.Types.Array, ref:'User'})\n  user: User\n  \n\n}\n\nexport const ReceiptSchema = SchemaFactory.createForClass(Receipt);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ReceiptController.html":{"url":"controllers/ReceiptController.html","title":"controller - ReceiptController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ReceiptController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/receipt/receipt.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /receipt\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addreceiptusers\n                            \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                getOne\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addreceiptusers\n                        \n                    \n                \n            \n            \n                \naddreceiptusers(req, dto: CreateReceiptDto, recfile)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('users')@ApiOperation({summary: 'Add receipt users'})@ApiResponse({status: 200, type: Receipt})@UseGuards(jwtGuard.Auth)@Roles('Shop')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/receipt/receipt.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateReceiptDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    recfile\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(req, dto: CreateReceiptDto, recfile)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('')@ApiOperation({summary: 'Add receipt'})@ApiResponse({status: 200, type: Receipt})@UseGuards(jwtGuard.Auth)@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/receipt/receipt.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateReceiptDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    recfile\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: ObjectId)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Delete receipt'})@ApiResponse({status: 200, type: Receipt})@Delete(':id')@UseGuards(jwtGuard.Auth)\n                \n            \n\n            \n                \n                    Defined in src/receipt/receipt.controller.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(count: number, offset: number, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all users receipt'})@ApiResponse({status: 200, type: Receipt})@Get()@UseGuards(jwtGuard.Auth)\n                \n            \n\n            \n                \n                    Defined in src/receipt/receipt.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(id: ObjectId)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get receipt'})@ApiResponse({status: 200, type: Receipt})@Get(':id')@UseGuards(jwtGuard.Auth)\n                \n            \n\n            \n                \n                    Defined in src/receipt/receipt.controller.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n            \n                \nsearch(query: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Search receipt'})@ApiResponse({status: 200, type: Receipt})@Get('/search')\n                \n            \n\n            \n                \n                    Defined in src/receipt/receipt.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Query,\n  Req,\n  Res,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { CreateReceiptDto } from './dto/create_receipt.dto';\nimport { ReceiptService } from './receipt.service';\nimport { FileFieldsInterceptor, FileInterceptor } from '@nestjs/platform-express';\nimport { ObjectId } from 'mongoose';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport * as jwtGuard from './../auth/guards/jwt.guard';\nimport { AuthService } from './../auth/auth.service';\nimport { TagsDto } from './dto/tags.dto';\nimport { Receipt } from './schemas/receipt.schema';\nimport { Roles } from '../auth/guards/roles-auth.decorator';\n\n@ApiTags('Receipt')\n@Controller('/receipt')\nexport default class ReceiptController {\n  constructor(\n    private receiptService: ReceiptService,\n    private authService: AuthService,\n  ) {}\n  @Post('')\n  @ApiOperation({summary:'Add receipt'})\n  @ApiResponse({status: 200, type: Receipt })\n  @UseGuards(jwtGuard.Auth)\n  @UseInterceptors(FileInterceptor('recfile'))\n  // [\n      // {name:'recfile',maxCount: 1}\n      // ]/\n      \n      create(@Req() req, @Body() dto: CreateReceiptDto, @UploadedFile() recfile ) {\n        // const {recfile} = files\n        return this.receiptService.create(req.user.email, dto, recfile);\n      }\n      \n      @Post('users')\n      @ApiOperation({summary:'Add receipt users'})\n      @ApiResponse({status: 200, type: Receipt })\n      @UseGuards(jwtGuard.Auth)\n      @Roles('Shop')\n      @UseInterceptors(FileInterceptor(\n    // [\n      // {name:'recfile',maxCount: 1}\n      // ]\n      'recfile'\n      ))\n\n  addreceiptusers(@Req() req, @Body() dto: CreateReceiptDto, @UploadedFile() recfile ) {\n    // const {recfile} = files\n    return this.receiptService.addreceiptusers(dto, recfile);\n  }\n  \n  @ApiOperation({summary:'Get all users receipt'})\n  @ApiResponse({status: 200, type: Receipt })\n  @Get()\n  @UseGuards(jwtGuard.Auth)\n  async getAll(\n    @Query('count') count: number,\n    @Query('offset') offset: number,\n    @Req() req,\n    // @Res() res,\n    ) {\n      // const token = req.token;\n      const receipt = await this.receiptService.getAll(req.user);\n      return receipt;\n    }\n    @ApiOperation({summary:'Search receipt'})\n    @ApiResponse({status: 200, type: Receipt })\n    @Get('/search')\n    search(@Query('query') query: string) {\n      return this.receiptService.searh(query);\n    }\n    @ApiOperation({summary:'Get receipt'})\n    @ApiResponse({status: 200, type: Receipt })\n    @Get(':id')\n    @UseGuards(jwtGuard.Auth)\n    getOne(@Param('id') id: ObjectId) {\n      return this.receiptService.getOne(id);\n    }\n  @ApiOperation({summary:'Delete receipt'})\n  @ApiResponse({status: 200, type: Receipt })\n  @Delete(':id')\n  @UseGuards(jwtGuard.Auth)\n  delete(@Param('id') id: ObjectId) {\n    return this.receiptService.delete(id);\n  }\n  // @Post('/tags')\n  // // @UseGuards(jwtGuard.Auth)\n  // createTags(@Req() req, @Body() dto: TagsDto) {\n  //   console.log(dto.receptid)\n  //   return this.receiptService.createTag(dto);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReceiptModule.html":{"url":"modules/ReceiptModule.html","title":"module - ReceiptModule","body":"\n                   \n\n\n\n\n    Modules\n    ReceiptModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ReceiptModule\n\n\n\ncluster_ReceiptModule_providers\n\n\n\n\nFileService\n\nFileService\n\n\n\nReceiptModule\n\nReceiptModule\n\nReceiptModule -->\n\nFileService->ReceiptModule\n\n\n\n\n\nReceiptService\n\nReceiptService\n\nReceiptModule -->\n\nReceiptService->ReceiptModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/receipt/receipt.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FileService\n                        \n                        \n                            ReceiptService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ReceiptController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport ReceiptController from \"./receipt.controller\";\nimport { ReceiptService } from \"./receipt.service\";\n// import { FileService } from \"../file/file.service\";\nimport { Receipt,  ReceiptSchema } from './schemas/receipt.schema';\nimport { Tags, TagsSchema } from \"./schemas/tags.schema\";\nimport { JwtService } from '@nestjs/jwt';\nimport { UserModule } from './../user/user.module';\nimport { AuthModule } from \"../auth/auth.module\";\nimport { FileService } from \"../file/file.service\";\nimport { User, UserSchema } from \"../user/schemas/user.schema\";\n  \n@Module({\n    imports: [\n    forwardRef(()=>UserModule),\n    forwardRef(()=>AuthModule),\n\n    MongooseModule.forFeature([{name: Receipt.name, schema:ReceiptSchema}]),\n    MongooseModule.forFeature([{name: Tags.name, schema:TagsSchema}]),\n    MongooseModule.forFeature([{name: User.name, schema:UserSchema}]),\n    \n    ],\n    controllers:[ReceiptController],\n    providers:[ReceiptService, FileService] \n})\nexport class ReceiptModule{}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReceiptService.html":{"url":"injectables/ReceiptService.html","title":"injectable - ReceiptService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReceiptService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/receipt/receipt.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addreceiptusers\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createTag\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getOne\n                            \n                            \n                                    Async\n                                searh\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(receiptModel: Model, tagModel: Model, userModel: Model, fileServise: FileService, UserServise: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/receipt/receipt.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        receiptModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tagModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileServise\n                                                  \n                                                        \n                                                                        FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserServise\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addreceiptusers\n                        \n                    \n                \n            \n            \n                \n                    \n                    addreceiptusers(dto: CreateReceiptDto, recfile)\n                \n            \n\n\n            \n                \n                    Defined in src/receipt/receipt.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateReceiptDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    recfile\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(email: string, dto: CreateReceiptDto, recfile: any)\n                \n            \n\n\n            \n                \n                    Defined in src/receipt/receipt.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateReceiptDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    recfile\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createTag\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTag(dto: TagsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/receipt/receipt.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                TagsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in src/receipt/receipt.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(user: string)\n                \n            \n\n\n            \n                \n                    Defined in src/receipt/receipt.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOne(id: ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in src/receipt/receipt.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        searh\n                        \n                    \n                \n            \n            \n                \n                    \n                    searh(query: string)\n                \n            \n\n\n            \n                \n                    Defined in src/receipt/receipt.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model, ObjectId, Types } from \"mongoose\";\nimport { FileService, FileType} from \"../file/file.service\";\nimport { User, UserDocument } from \"../user/schemas/user.schema\";\n// import { FileService, FileType } from \"../file/file.service\";\nimport { CreateReceiptDto } from \"./dto/create_receipt.dto\";\nimport { Receipt, ReceptDocument } from \"./schemas/receipt.schema\";\n// import { Tag, TagDocument } from \"./schemas/tag.schema\";\nimport { UserService } from './../user/user.service';\nimport { Tags, TagsDocument } from \"./schemas/tags.schema\";\nimport { TagsDto } from \"./dto/tags.dto\";\n// import { Tags, TagsDocument } from \"../tags/tags.schema\";\n\n@Injectable()\nexport class ReceiptService{\n        \n  constructor(@InjectModel(Receipt.name) private receiptModel: Model,\n              @InjectModel(Tags.name) private tagModel:   Model, \n              @InjectModel(User.name) private userModel:   Model, \n              // @InjectModel(User.name) private UserModel:   Model, \n              private fileServise: FileService, \n              private UserServise: UserService, \n  ) {}\n    \n    async create(email:string, dto: CreateReceiptDto, recfile:any):Promise {\n      const user = await this.UserServise.findByEmail(email)  \n      const Uplfile = await this.fileServise.createFile(recfile)\n      console.log(Uplfile)\n      const recepts = await this.receiptModel.create({...dto, recfile:Uplfile})\n      await recepts.$set('user', user); \n      user.receipt.push(recepts)\n      recepts.save();\n      user.save();\n      \n      return recepts\n    }\n\n    async getAll( user:string): Promise{\n      const receipt= await this.receiptModel.find({user})\n      return receipt;\n    }\n\n\n    async getOne(id: ObjectId): Promise{\n      const receips= await this.receiptModel.findById(id);\n      return receips; \n    }\n\n    async delete(id: ObjectId): Promise{\n      const receips = await this.receiptModel.findByIdAndDelete(id)        \n      return receips._id;\n    }\n    async searh(query:string): Promise{\n      const receip = await this.receiptModel.find({\n         name: {$regax: new RegExp(query, 'i')} \n      })\n      return receip    }\n    \n    async createTag( dto:TagsDto){\n        const receip = await this.receiptModel.findById(dto)\n        console.log(receip,\"in\")\n        \n        // const receip = await this.receiptModel.findById(id)\n        const tags = await this.tagModel.create({...dto})\n        // await tags.$set('receiptid',[receip])\n        // receip.tags.push(tags.id)\n        // receip.save();\n        tags.save();\n        console.log(tags)\n        return tags\n      }\n    async addreceiptusers(dto: CreateReceiptDto, recfile){\n      const user =  await this.UserServise.findByEmail(dto.UsersEmail)\n      console.log(user.email)\n      if(user.email == dto.UsersEmail){\n          const sendreceipt = await this.create(dto.UsersEmail, dto ,recfile)\n          return 'Send OK'  \n          // } else{\n            // }\n      }else{\n        throw new HttpException('User not found', HttpStatus.INTERNAL_SERVER_ERROR)\n      }\n      }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/schema/role.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                user\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'users is', description: 'Description role'})@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/schema/role.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Types.ObjectId\n\n                    \n                \n                    \n                        \n                                Defined in src/role/schema/role.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'usersId', description: 'Which user this role belongs to'})@Prop({type: undefined, ref: 'user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/schema/role.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'users', description: 'Name role'})@Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/schema/role.schema.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport mongoose, { Document, ObjectId} from \"mongoose\";\nimport { User } from '../../user/schemas/user.schema';\n\nexport type RoleDocument = Role & Document;\n\n@Schema()\nexport class Role{\n\t\n\t// @ApiProperty({example: 'users', description: 'Name role'})\n\t// @Prop({required: true, unique: true})\n\tid: mongoose.Types.ObjectId; \n\t\n\t\n\t@ApiProperty({example: 'users', description: 'Name role'})\n\t@Prop({required: true, unique: true})\n\tvalue: string; \n\t\n\t\n\t@ApiProperty({example: 'users is', description: 'Description role'})\n\t@Prop({required: true})\n\tdescription: string;\n\t\n\t@ApiProperty({example: 'usersId', description: 'Which user this role belongs to'})\n\t@Prop({type: mongoose.Schema.Types.Array, ref: 'user'})\n\tuser: User;\n\n}\nexport const RoleSchema = SchemaFactory.createForClass(Role);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoleController.html":{"url":"controllers/RoleController.html","title":"controller - RoleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/role.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                getAllRole\n                            \n                            \n                                getByValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Add news role'})@ApiResponse({status: 201, type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/role/role.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllRole\n                        \n                    \n                \n            \n            \n                \ngetAllRole()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all role'})@ApiResponse({status: 200, type: Role})@Get()\n                \n            \n\n            \n                \n                    Defined in src/role/role.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByValue\n                        \n                    \n                \n            \n            \n                \ngetByValue(value: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:value')@ApiOperation({summary: 'Get parametr role'})@ApiResponse({status: 200, type: undefined})\n                \n            \n\n            \n                \n                    Defined in src/role/role.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post } from '@nestjs/common';\nimport { RoleService } from './role.service';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { Role } from './schema/role.schema';\n@ApiTags('Role')\n@Controller('/roles')\nexport class RoleController {\n\n\tconstructor(private roleService:RoleService){}\n\n\t@Post()\n\t@ApiOperation({summary:'Add news role'})\n\t@ApiResponse({status: 201, type: [Role]  })\n\tcreate(@Body() dto: CreateRoleDto){\n\t\treturn this.roleService.createRole(dto)\n\t}\n\t\n\t@Get('/:value')\n\t@ApiOperation({summary:'Get parametr role'})\n\t@ApiResponse({status: 200, type: [Role]  })\n\tgetByValue(@Param('value') value: string){\n\t\treturn this.roleService.getRoleByValue(value)\n\t}\n\t@ApiOperation({summary:'Get all role'})\n\t@ApiResponse({status: 200, type: Role})\n\t@Get()\n\tgetAllRole(){\n\t\treturn this.roleService.getAllRole()\n\t}\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleModule.html":{"url":"modules/RoleModule.html","title":"module - RoleModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_RoleModule_exports\n\n\n\n\nRoleService \n\nRoleService \n\n\n\nRoleModule\n\nRoleModule\n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/role/role.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RoleController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RoleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RoleService } from './role.service';\nimport { RoleController } from './role.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { RoleSchema } from './schema/role.schema';\nimport { UserSchema } from '../user/schemas/user.schema';\nimport { UserModule } from './../user/user.module';\n\n@Module({\n  imports:[\n  MongooseModule.forFeature([{name: 'Role', schema:RoleSchema}]),\n    MongooseModule.forFeature([{name: 'User', schema:UserSchema}]),\n    // UserModule\n  ],\n  providers: [RoleService],\n  controllers: [RoleController],\n  exports: [RoleService]\n})\nexport class RoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/role.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createRole\n                            \n                            \n                                    Async\n                                getAllRole\n                            \n                            \n                                    Async\n                                getRoleByValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepository: Model)\n                    \n                \n                        \n                            \n                                Defined in src/role/role.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    createRole(dto: CreateRoleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllRole()\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRoleByValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoleByValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Model } from 'mongoose';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { RoleDocument } from './schema/role.schema';\n@Injectable()\nexport class RoleService {\n\n\tconstructor(@InjectModel('Role') private roleRepository: Model){}\n\tasync getAllRole(){\n\t\tconst role = await this.roleRepository.find();\n\t\treturn role;\n\t}\n\tasync createRole(dto: CreateRoleDto){\n\t\tconst role = await this.roleRepository.create(dto)\n\t\treturn role\n\t}\n\tasync getRoleByValue(value: string){\n\t\tconst role = await this.roleRepository.findOne({value})\n\t\treturn role\n\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleUser.html":{"url":"classes/RoleUser.html","title":"class - RoleUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/schema/roleuser.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                roleId\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        roleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'role'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/schema/roleuser.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/schema/roleuser.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { Document} from \"mongoose\";\nimport { User } from '../../user/schemas/user.schema';\nimport { Role } from './role.schema';\n// import { User } from '@nextui-org/react';\n\nexport type RoleUserDocument = RoleUser & Document;\n\n@Schema()\nexport class RoleUser{\n\t\n\t\n\t@Prop({type: mongoose.Schema.Types.Array, ref: 'User'})\n\tuserId :User;\n\t\n\t\n\t@Prop({type: mongoose.Schema.Types.Array, ref: 'role'})\n\troleId: Role;\n\n\n}\nexport const RoleUserSchema = SchemaFactory.createForClass(RoleUser);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/roles.guard.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/roles.guard.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n    CanActivate,\n    ExecutionContext,\n    HttpException,\n    HttpStatus,\n    Injectable,\n    UnauthorizedException\n} from \"@nestjs/common\";\nimport {Observable} from \"rxjs\";\nimport {JwtService} from \"@nestjs/jwt\";\nimport {Reflector} from \"@nestjs/core\";\nimport {ROLES_KEY} from \"./roles-auth.decorator\";\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n    constructor(private jwtService: JwtService,\n                private reflector: Reflector) {\n    }\n\n    canActivate(context: ExecutionContext): boolean | Promise | Observable {\n        try {\n            const requiredRoles = this.reflector.getAllAndOverride(ROLES_KEY, [\n                context.getHandler(),\n                context.getClass(),\n            ])\n            if (!requiredRoles) {\n                return true;\n            }\n            const req = context.switchToHttp().getRequest();\n            const authHeader = req.headers.authorization;\n            const bearer = authHeader.split(' ')[0]\n            const token = authHeader.split(' ')[1]\n\n            if (bearer !== 'Bearer' || !token) {\n                throw new UnauthorizedException({message: 'Users not autorization'})\n            }\n\n            const user = this.jwtService.verify(token);\n            req.user = user;\n            return user.role.some(role => requiredRoles.includes(role.value));\n        } catch (e) {\n            console.log(e)\n            throw new HttpException( 'Not access', HttpStatus.FORBIDDEN)\n        }\n    }\n\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tags.html":{"url":"classes/Tags.html","title":"class - Tags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/receipt/schemas/tags.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                receptid\n                            \n                            \n                                tagsname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/schemas/tags.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        receptid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Receipt\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Receipt'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/schemas/tags.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tagsname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/receipt/schemas/tags.schema.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document} from \"mongoose\";\nimport * as mongoose from \"mongoose\";\nimport { Timestamp } from 'typeorm';\nimport { Receipt } from './receipt.schema';\n// import { Receipt } from '../receipt/schemas/receipt.schema';\n\n\nexport type TagsDocument = Tags & mongoose.Document;\n\n@Schema()\nexport class Tags {\n\t\n\t\n\t@Prop()\n\ttagsname: string;\n\n\t@Prop({required: false})\n\tdescription: string;\n\n\t@Prop({type: mongoose.Schema.Types.ObjectId, ref:'Receipt'})\n\treceptid: Receipt;\n\t\n\t\n\n}\nexport const TagsSchema = SchemaFactory.createForClass(Tags);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagsDto.html":{"url":"classes/TagsDto.html","title":"class - TagsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/receipt/dto/tags.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                receptid\n                            \n                            \n                                    Readonly\n                                tagsname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/receipt/dto/tags.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        receptid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                    \n                        \n                                Defined in src/receipt/dto/tags.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        tagsname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/receipt/dto/tags.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectId } from 'mongoose';\n\nexport class TagsDto{\n\treadonly tagsname: string;\n\treadonly description: string;\n\treadonly receptid: ObjectId\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatarPath\n                            \n                            \n                                city\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                phone\n                            \n                            \n                                receipt\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        avatarPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'users.icons.jpg', description: 'Users avatar'})@Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Rīga', description: 'City'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user@gmail.com', description: 'Unique email'})@Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Types.ObjectId\n\n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Users', description: 'Users name'})@Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1234567', description: 'Users password'})@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '+37129994512', description: 'Phone'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        receipt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Receipt[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'receipt', description: 'All users receipt[]'})@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'role', description: 'Users role[]'})@Prop({type: undefined, ref: 'role'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schemas/user.schema.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document} from \"mongoose\";\nimport * as mongoose from \"mongoose\";\nimport { Role } from '../../role/schema/role.schema';\nimport { Timestamp } from 'typeorm';\nimport { Receipt } from '../../receipt/schemas/receipt.schema';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport type UserDocument = User & mongoose.Document;\n\n@Schema()\nexport class User {\n\t\n\tid: mongoose.Types.ObjectId;\n\t@ApiProperty({example: 'user@gmail.com', description: 'Unique email'})\n\t@Prop({required: true, unique: true})\n\temail: string;\n\t\n\t@ApiProperty({example: 'Users', description: 'Users name'})\n\t@Prop({required: false})\n\tname: string;\n\t\n\t@ApiProperty({example: '1234567', description: 'Users password'})\n\t@Prop({required: true})\n\tpassword: string;\n\t\n\t@ApiProperty({example: 'users.icons.jpg', description: 'Users avatar'})\n\t@Prop({required\n\t\t: false,})\n\tavatarPath: string;\n\t\n\t@ApiProperty({example: '+37129994512', description: 'Phone'})\n\tphone: string;\n\t@ApiProperty({example: 'Rīga', description: 'City'})\n\tcity: string;\n\t\n\t@ApiProperty({example: 'role', description: 'Users role[]'})\n\t@Prop({type: mongoose.Schema.Types.Array, ref: 'role'})\n\trole: Role[];\n\t\n\t@ApiProperty({example: 'receipt', description: 'All users receipt[]'})\n\t@Prop({type:[{ type: mongoose.Schema.Types.ObjectId, ref:'Receipt'}]})\n\treceipt: Receipt[];\n\t\n\t\n\n}\nexport const UserSchema = SchemaFactory.createForClass(User);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addroles\n                            \n                            \n                                delete\n                            \n                            \n                                getAllUser\n                            \n                            \n                                getProfil\n                            \n                            \n                                getUser\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addroles\n                        \n                    \n                \n            \n            \n                \naddroles(dto: AddRolleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('roles')@Roles('Admin')@ApiOperation({summary: 'Distribute roles'})@ApiResponse({status: 200})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AddRolleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('delete')@ApiOperation({summary: 'Delete users'})@ApiResponse({status: 200, type: User})@UseGuards(jwtGuard.Auth)\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUser\n                        \n                    \n                \n            \n            \n                \ngetAllUser()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Get all users'})@ApiResponse({status: 200, type: undefined})@Roles('Admin')@UseGuards(RolesGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProfil\n                        \n                    \n                \n            \n            \n                \ngetProfil(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('profil')@ApiOperation({summary: 'Get users date'})@ApiResponse({status: 200, type: User})@UseGuards(jwtGuard.Auth)\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('by-id/:id')@ApiOperation({summary: 'Get users date'})@ApiResponse({status: 200, type: User})@UseGuards(jwtGuard.Auth)\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfile(id: string, dto: NewsUserdto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('update')@ApiOperation({summary: 'Users update date'})@ApiResponse({status: 200, type: undefined})@UseGuards(jwtGuard.Auth)@HttpCode(200)\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                NewsUserdto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, Param, Post, Req, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserDetails } from './user-details.interface';\nimport { ObjectId } from 'mongoose';\nimport * as jwtGuard from './../auth/guards/jwt.guard';\nimport { Auth } from '../auth/guards/jwt.guard';\n// import {Userdto} from './dto/Createuser.dto'\nimport { NewsUserdto } from './dto/newsuser.dto';\nimport { Role } from '../role/schema/role.schema';\nimport { Roles } from '../auth/guards/roles-auth.decorator';\nimport { RolesGuard } from './../auth/guards/roles.guard';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { User } from './schemas/user.schema';\nimport { AddRolleDto } from './dto/add-role.dto';\nimport { CurrentUser } from './user.decorator';\n\n@ApiTags('Users')\n@Controller('user')\nexport class UserController {\n\n\tconstructor(private  usersService: UserService){}\n\t@Get('profil')\n\t@ApiOperation({summary: 'Get users date'})\n\t@ApiResponse({status: 200, type: User})\n\t// @Auth()\n\t@UseGuards(jwtGuard.Auth)\t\n\tgetProfil(@CurrentUser('id') id:string){\n\t\t// console.log(id)\n\t\tconst users = this.usersService.getUser(id)\n\t\treturn users\n\t}\n\t@Get('by-id/:id')\n\t@ApiOperation({summary: 'Get users date'})\n\t@ApiResponse({status: 200, type: User})\n\t// @Auth()\n\t@UseGuards(jwtGuard.Auth)\t\n\tgetUser(@Param('id') id:string){\n\t\t// console.log(id)\n\t\tconst users = this.usersService.getUser(id)\n\t\treturn users\n\t}\n\t\n\t@ApiOperation({summary: 'Get all users'})\n\t@ApiResponse({status: 200, type:[User]})\n\t@Roles('Admin')\n\t@UseGuards(RolesGuard)\n\t@Get()\n\tgetAllUser(){\n\t\treturn this.usersService.getAllUser();\n\t}\n\t@Post('roles')\n\t@Roles('Admin')\n\t@ApiOperation({summary: 'Distribute roles'})\n\t@ApiResponse({status: 200,})\n\t// @UseGuards(RolesGuard)\n\taddroles(@Body() dto: AddRolleDto){\n\t\treturn this.usersService.Addroles(dto);\n\t}\n\t\n\t@Delete('delete')\n\t@ApiOperation({summary: 'Delete users'})\n\t@ApiResponse({status: 200, type:User})\n\t@UseGuards(jwtGuard.Auth)\n\tdelete(@Req() req) {\n\t\treturn this.usersService.delete(req.user.id);\n    }\n\t\n\t@Post('update')\n\t@ApiOperation({summary: 'Users update date'})\n\t@ApiResponse({status: 200, type:[User]})\n\t@UseGuards(jwtGuard.Auth)\n\t@HttpCode(200)\n\t// @UseInterceptors(FileInterceptor('aatar'))\n\t// async updateUser(@UploadedFile() files, @Param('id') id:string, @Body() dto: UserDto){\n\tasync updateProfile(@CurrentUser('id') id:string, @Body() dto: NewsUserdto){\n\t  // const {avatar} = files\n\t  return this.usersService.updateProfile(id,dto)\n\t}\n  \n} \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserDetails.html":{"url":"interfaces/UserDetails.html","title":"interface - UserDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user-details.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserDetails {\n\tid: string;\n\tname: string;\n\temail: string;\n\t// roles: string;\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\n\nRoleModule\n\nRoleModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nRoleModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RoleModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { RoleSchema } from './../role/schema/role.schema';\nimport { User, UserSchema } from './schemas/user.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { RoleModule } from './../role/role.module';\nimport { AuthModule } from './../auth/auth.module';\nimport { ReceiptSchema, Receipt } from '../receipt/schemas/receipt.schema';\n@Module({\n  imports:[\n  MongooseModule.forFeature([{name: 'User', schema:UserSchema},\n                            {name: 'Role', schema:RoleSchema},\n                            {name: 'Recept', schema:ReceiptSchema}]),\n  // AuthModule,\n  RoleModule,\n  forwardRef(()=>AuthModule)\n  ],\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [\n          UserService,\n        ],\n\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _getUserDetails\n                            \n                            \n                                    Async\n                                Addroles\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByIdd\n                            \n                            \n                                    Async\n                                getAllUser\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, receptModel: Model, roleService: RoleService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        receptModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        _getUserDetails\n                        \n                    \n                \n            \n            \n                \n_getUserDetails(user: UserDocument)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserDetails\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        Addroles\n                        \n                    \n                \n            \n            \n                \n                    \n                    Addroles(dto: AddRolleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AddRolleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userDto: NewsUserdto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                NewsUserdto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByIdd\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdd(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUser()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfile(id: string, dto: NewsUserdto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                NewsUserdto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, HttpException, HttpStatus, Inject, Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport * as bcrypt from 'bcrypt';\nimport { Model } from 'mongoose';\nimport { UserDocument } from './schemas/user.schema';\nimport { UserDetails } from './user-details.interface';\nimport { RoleService } from './../role/role.service';\nimport { Delete } from '@nestjs/common';\nimport { ObjectId } from 'mongoose';\nimport { NewsUserdto } from './dto/newsuser.dto';\n// import {UserDto} from './dto/Createuser.dto'\nimport { AddRolleDto } from './dto/add-role.dto';\nimport { AuthService } from '../auth/auth.service';\nimport { ReceptDocument } from '../receipt/schemas/receipt.schema';\n// import { users } from './../../../client/server/data/users';\n\n\n@Injectable()\nexport class UserService {\n\tconstructor(@InjectModel('User') private readonly  userModel: Model,\n\t\t\t\t@InjectModel('Recept') private readonly  receptModel: Model,\n\t\t\t\tprivate roleService:  RoleService,\n\t// private authservice: AuthService\n\t// private roleService:  RoleService\n\t){}\n\n\tasync create(userDto: NewsUserdto):\n\tPromise{\n\t\tconst role = await this.roleService.getRoleByValue(\"Users\");\n\t\tconst user= await this.userModel.create(userDto);\n\t\tawait user.$set('role', [role.id]);\n\t\tuser.role=[role];\n\t\treturn user.save()\n\t}\n\n\tasync getAllUser(){\n\t\tconst user = await this.userModel.find({include:{all:true}});\n\t\treturn user;\n\t}\n\t\n\tasync getUser(id: string){\n\t\tconst user = await this.userModel.findById(id)\n\t\treturn user;\n\t}\n\n\tasync delete(id: string): Promise{\n\t\tconst user = await this.userModel.findByIdAndDelete(id)\n\t\treturn user._id\n\t}\n\t\n\t_getUserDetails(user: UserDocument):UserDetails{\n\t\t\treturn{\n\t\t\t\tid: user.id,\n\t\t\t\tname: user.email,\n\t\t\t\temail: user.email,\n\t\t};\n\t}\n\t\n\tasync findByEmail(email: string): Promise{\n\t\treturn this.userModel.findOne({email});\n\t}\n\tasync findByIdd(id: string): Promise{\n\t\treturn await this.userModel.findById(id).populate('receipt');\n\t}\n\n\n\tasync findById(id: string): Promise{\n\t\tconst user = await this.userModel.findById(id).exec();\n\t\tif(!user) return null;  \n\t\treturn this._getUserDetails(user)\n\t}\n\n\tasync updateProfile(id:string, dto: NewsUserdto){\n\t\tconst users = await this.userModel.findById(id);\n\t\tconst isSamwUser = await this.findByEmail(dto.email)  \n\t\tif (isSamwUser&& id !== isSamwUser.id) throw new BadRequestException('email is busy')\n\n\t\t// if(users.password !== dto.password){\n\t\t// \tusers.password = await bcrypt.compare(\n\t\t// \t\tdto.password,\n\t\t// \t\tusers.password,\n\t\t// \t\t);\n\t\t// } \n\n\t\tusers.email = dto.email\n\t\tusers.name = dto.name\n\t\t \n\t\treturn users \n\n\t\t// const hashedPassword = await this.authservice.hashedPassword(password: dto)\t\n\t}\n\n\tasync Addroles(dto:AddRolleDto){\n\t\tconst user = await this.userModel.findById(dto.Userid)\n\t\tconsole.log(user)\n\t\tconst role = await this.roleService.getRoleByValue(dto.value)\n\t\tconsole.log()\n\t\tif (role && user){\n\t\t\tawait user.$set('role', role.id);\n\t\t\tuser.role=[role];\n\t\t\tuser.save()\n\t\t\treturn user\n\t\t}else{\n\t\t\tthrow new HttpException('Users or roles not found', HttpStatus.NOT_FOUND);\n\t\t}\t\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt.guard.ts\n            \n            guard\n            Auth\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/roles-auth.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/roles-auth.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/Mongoose.ConfigService.ts\n            \n            injectable\n            MongooseConfigService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/file/file.service.ts\n            \n            injectable\n            FileService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            start\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/receipt/dto/create_receipt.dto.ts\n            \n            class\n            CreateReceiptDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/receipt/dto/tags.dto.ts\n            \n            class\n            TagsDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/receipt/receipt.controller.ts\n            \n            controller\n            ReceiptController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/receipt/receipt.service.ts\n            \n            injectable\n            ReceiptService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/receipt/schemas/receipt.schema.ts\n            \n            class\n            Receipt\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/receipt/schemas/receipt.schema.ts\n            \n            variable\n            ReceiptSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/receipt/schemas/tags.schema.ts\n            \n            class\n            Tags\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/receipt/schemas/tags.schema.ts\n            \n            variable\n            TagsSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/role/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/role/role.controller.ts\n            \n            controller\n            RoleController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/role/role.service.ts\n            \n            injectable\n            RoleService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/role/schema/role.schema.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/role/schema/role.schema.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/role/schema/roleuser.schema.ts\n            \n            class\n            RoleUser\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/role/schema/roleuser.schema.ts\n            \n            variable\n            RoleUserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/Createuser.dto.ts\n            \n            class\n            LoginUserdto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/add-role.dto.ts\n            \n            class\n            AddRolleDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/newsuser.dto.ts\n            \n            class\n            NewsUserdto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/user/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user-details.interface.ts\n            \n            interface\n            UserDetails\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/12)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/mongoose : ^9.2.0\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/serve-static : ^3.0.0\n        \n            @nestjs/swagger : ^6.1.2\n        \n            atob : ^2.1.2\n        \n            bcrypt : ^5.1.0\n        \n            buffer : ^6.0.3\n        \n            class-validator : ^0.13.2\n        \n            minimist : ^1.2.7\n        \n            mongoose : ^6.6.5\n        \n            multer : ^1.4.5-lts.1\n        \n            nest-next : ^10.0.0\n        \n            next : ^13.1.1\n        \n            passport : ^0.6.0\n        \n            pcrypt : ^0.2.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-spec-to-pdf : ^1.1.0\n        \n            swagger-ui-dist : ^4.15.5\n        \n            typeorm : ^0.3.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FileType   (src/.../file.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/file/file.service.ts\n    \n        \n            \n                \n                    \n                        \n                        FileType\n                    \n                \n                        \n                            \n                                 RECEIPT\n                            \n                        \n                        \n                            \n                                Value : recfile\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReceiptModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_FileModule\n\n\n\ncluster_FileModule_providers\n\n\n\ncluster_ReceiptModule\n\n\n\ncluster_ReceiptModule_providers\n\n\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nFileModule\n\nFileModule\n\nAppModule -->\n\nFileModule->AppModule\n\n\n\n\n\nReceiptModule\n\nReceiptModule\n\nAppModule -->\n\nReceiptModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nRoleModule->UserModule\n\n\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nRoleService \n\nRoleService \n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nFileService\n\nFileService\n\nFileModule -->\n\nFileService->FileModule\n\n\n\nReceiptModule -->\n\nFileService->ReceiptModule\n\n\n\n\n\nReceiptService\n\nReceiptService\n\nReceiptModule -->\n\nReceiptService->ReceiptModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ReceptDocument   (src/.../receipt.schema.ts)\n                        \n                        \n                            RoleDocument   (src/.../role.schema.ts)\n                        \n                        \n                            RoleUserDocument   (src/.../roleuser.schema.ts)\n                        \n                        \n                            TagsDocument   (src/.../tags.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/receipt/schemas/receipt.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ReceptDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/role/schema/role.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/role/schema/roleuser.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RoleUserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/receipt/schemas/tags.schema.ts\n    \n    \n        \n            \n                \n                    \n                    TagsDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/user/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CurrentUser   (src/.../user.decorator.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            ReceiptSchema   (src/.../receipt.schema.ts)\n                        \n                        \n                            Roles   (src/.../roles-auth.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../roles-auth.decorator.ts)\n                        \n                        \n                            RoleSchema   (src/.../role.schema.ts)\n                        \n                        \n                            RoleUserSchema   (src/.../roleuser.schema.ts)\n                        \n                        \n                            start   (src/.../main.ts)\n                        \n                        \n                            TagsSchema   (src/.../tags.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/user/user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: string, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user = request.user;\n\n    return data ? user[data] : user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/auth/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tsecret: 'secretKey',\n  }\n                    \n                \n\n\n        \n    \n\n    src/receipt/schemas/receipt.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ReceiptSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Receipt)\n                    \n                \n\n\n        \n    \n\n    src/auth/guards/roles-auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: string[]) => SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'role'\n                    \n                \n\n\n        \n    \n\n    src/role/schema/role.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    src/role/schema/roleuser.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleUserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(RoleUser)\n                    \n                \n\n\n        \n    \n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n    try {\n        const PORT = process.env.PORT ||3500;  // input porst\n        const app = await NestFactory.create(AppModule);\n        app.enableCors()        \n        app.setGlobalPrefix('api');\n        // app.useGlobalPipes(new ValidationPipe());\n        const config = new DocumentBuilder()\n        .setTitle('Warranty card digitizing system')\n        .setDescription('Documentation API ')\n        .setVersion('1.0')\n        .build();\n      const document = SwaggerModule.createDocument(app, config);\n      SwaggerModule.setup('api/docs', app, document);\n        \n        await app.listen(PORT, () => console.log('server started on PORT - '+ PORT ))\n    } catch (e) {\n        console.log(e)\n    }\n}\n                    \n                \n\n\n        \n    \n\n    src/receipt/schemas/tags.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TagsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Tags)\n                    \n                \n\n\n        \n    \n\n    src/user/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
